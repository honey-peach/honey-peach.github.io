<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Good Bye, Hexo</title>
      <link href="/2019/07/11/Good-Bye-Hexo/"/>
      <url>/2019/07/11/Good-Bye-Hexo/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>不出意外，这应该是最后一次用Hexo框架写博客了，以后我应该不会用这个框架了，这个框架用了两年了，老实说在用过Wordpress之后我选择了Hexo，我之所以又放弃Hexo，原因有很多，但是我觉得主要的原因就是这个框架让我感觉写博客没有那么优雅。<br><a id="more"></a></p><h3 id="一直以来"><a href="#一直以来" class="headerlink" title="一直以来"></a>一直以来</h3><p>拥有一个博客，或者说在互联网上面拥有一席之地，是我一直以来的一个梦想。从以前在路由器上面获取权限安装LAMP到后来在自己的主机上面安装WordPress，在到现在的Hexo+Travel自动构建。写博客经历了下面几个阶段。<br>在没有框架的时候，每一篇博客都是用html写的，界面十分简洁，写一篇文章往往容易忘记主要内容，被html的标签消耗了太多的时间，再者就是部署比较繁琐，功能有限。用了WordPress框架，插件确实很多，功能也比较完善，第三方开发的主题也比较丰富，我觉得唯一不够好的就是我习惯不了，已经php的速度实在太慢，没有原生支持markdown。再就是现在的Hexo，Hexo框架写的是静态的博客，部分动态的东西是通过js来实现的，比如文章末尾的评论系统就是通过js将评论存在在leancloud提供的数据库中的，邮箱的收发也是在免费的主机上面的，静态的博客，首先就是写博客不够优雅，其次就是更新比较繁琐，必须有源码，当然可以通过CI来自动构建。最后要考虑到的问题就是我博客上面的文章和图片资源这些东西要能够很好的保存，一个博客的存在的价值很大一部分是建立已有的内容上面的。</p><p>其实让我放弃这些东西最主要的原因就是: 我原本想要一个怀旧、宁静、自然、享受生活、记录风格的博客，但是这些博客无论是从写到看都没有给我这种感觉，看看现在这个博客，已经被我弄得乱七八糟的了，一种臃肿的感觉，看看博客里面的内容，大部分都是学习有关的，而生活中的点滴，心中所感，这个博客里面少之又少，这不是我想要的博客。所以在这个暑假我打算开发一个基于Servlet、SQL Server和Hibernate的一个博客系统，之所以选择JAVA作为网站后台的开发语言，并不是我只会Java，而是JSP相较于ASP.NET和PHP有很多优势:</p><ul><li>生态良好; 想ORM这种东西，我知道的就有两个，像Hibernate又是学过的</li><li>比较习惯使用java来开发后台,其实ASP.NET我在学VB.NET的时候就有学过，那时候都还没有学过JSP，学了VB.NET后我又学了PHP，我是觉得我还是比较习惯JAVA的思维方式。但是如果你说要开发桌面程序的话，我既不会选择<code>swing</code>也不会选择<code>javafx</code>,而是使用操作系统本地的<code>API</code>，想Windows下面的<code>VB.NET</code>或许<code>C#</code>以及<code>VC++</code>,macOS下面的<code>Swift</code>,除了良好的生态更重要的是开发的逻辑。</li><li>JAVA是半编译的语言，我的主机是Vultr上面的一个4G内存的主机，我比较习惯使用 <strong><em>Red Hat</em></strong>系列的操作系统，对于ASP而言，我就需要安装<code>Windows Server</code>和<code>IIS</code>这两个最佳拍档。我开发的环境是 <strong><em>UNIX</em></strong> 环境.其实最中意的开发过程中的那一套机制。像Maven和Git。我在本地开发后在远程服务器上面部署十分简单优雅，就只需要执行<code>git pull</code>通过源码然后<code>mvn clean package</code>打包就可以了。</li></ul><h3 id="预期"><a href="#预期" class="headerlink" title="预期"></a>预期</h3><p>博客对我来说有三个重要的方面: 记录、传播和交流<br>记录是对我个人而言，交流这是评论系统，传播这是在一个稳定、快速的博客系统上面完成的。因此我主要实现以下几个目标:</p><ul><li style="list-style: none"><input type="checkbox" checked> 支持Markdown，同事能够从将hexo中的文章迁移到这来，能够导出文章</li><li style="list-style: none"><input type="checkbox" checked> 评论系统，实现邮件提醒等待功能</li><li style="list-style: none"><input type="checkbox" checked> 支持自定义主题，预留主题开发的接口</li><li style="list-style: none"><input type="checkbox" checked> 实现资源本地存储，对媒体播放、文本阅读的良好支持</li><li style="list-style: none"><input type="checkbox" checked> 其它功能</li></ul><h3 id="现状"><a href="#现状" class="headerlink" title="现状"></a>现状</h3><p>目前我已经完成了评论系统90%左右的开发，写作部分我有相关的开发经验,这一部分需要的时间相对较少</p><p>评论系统目前已经部署上去了: <a href="https://tomcat.ourfor.top/comment/comment.jsp" target="_blank" rel="noopener">评论系统</a></p><p>这是一些相关的截图：</p><figure class="image-box">                <img src="chrome_tool.png" alt="性能测试" title class>                <p>性能测试</p>            </figure><figure class="image-box">                <img src="comment.png" alt="评论功能" title class>                <p>评论功能</p>            </figure><figure class="image-box">                <img src="comment_more.png" alt="动态加载" title class>                <p>动态加载</p>            </figure><p>[7月19日]</p><p>目前已经完成了核心的功能，接下来就是前台UI的美化和业务逻辑的一些调整了。打包后发现war包有点大，所以会逐渐去掉一些无关的依赖。</p><ul><li>完成markdown编辑器的定制</li><li>添加webpack支持</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最后一次修体育课了</title>
      <link href="/2019/06/01/pe-summary/"/>
      <url>/2019/06/01/pe-summary/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>这是最后一个学期修体育课了，想想这两年来体育课程的学习，心情复杂，体育运动的诸多好处<br>老师都不知道讲了多少遍了，我一直当成耳边风，后来才尝到一些好处。</p><a id="more"></a><pre><code>在我写这个心得的时候，我已经感冒3天了，在班上我感觉我是比较容易生病的😷，而的日常生活大概是这种场景:</code></pre><p>每天早上约莫7点起床(周六、周日会8点才起),晚上11点睡觉😴，平时没事就是折腾我的键盘⌨️、看书📚或者写作业。因此我为数不多的锻炼的时间都是在体育课上。读了两年，我觉得所有的课程里面不太好对付的只有英语和体育这两门。英语的话，由于过了四级，就免修了大学英语四。体育的话，今年是最后学习体育了。对于体育方面的学习，我有一些总结。</p><pre><code>正如英国🇬🇧唯物主义哲学家培根所言：&quot;一如身体百病，皆可借相宜之运动除之。滚球利睾肾，射箭🏹利胸肺，漫步利肠胃，骑术利头脑&quot;. 从高中那会开始，班主任就要求我体育课去打篮球🏀，不要藏在别的地方写作业看书📖。开始两年，我并没有把老师的话放在耳边，直到高三才品尝到了体育锻炼的好处。所以在大二选修课的时候，我选修了篮球课。记忆犹新的是有一次篮球课我没有去上，就下来的一个星期我感觉做什么事情都没有什么精力。大一的五步拳和太极拳，我开始都没有怎么认真学，主要是怕影响都搭档。篮球的话，主要还是我平时打得比较少。但是每次我打篮球的时候，我都会用课堂上老师教过的技巧。每年一到体侧长跑，跑完下来我都累得不行，平时缺乏锻炼，跑了1000米累得半死。    这个学期的篮球课上我学到了不少有用的东西。从刚开始笨手笨脚的传球，到现在能够稳妥的运球、传球、三步上篮。开始我觉得胯下运球的难度太大了，不过到现在我已经能够熟练的完成变向、胯下、转身的一系列动作。除了篮球方面的知识有所丰富。篮球课还给我带来了心智上的历练。老师不仅在课堂上传授专业的篮球知识，还给予人生的指导和劝言。无论做什么事，要就不做，要做就得认真做。既浪费了时间，又没有把事做好，是我们最不愿意看到的。即使以后没有了体育课，我还是会督促自己好好锻炼，增强自己的体魄，不再是这种林黛玉一样的身体基础。</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> 校选课 </tag>
            
            <tag> 心得 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>本就该如此</title>
      <link href="/2019/05/26/%E6%9C%AC%E5%B0%B1%E8%AF%A5%E5%A6%82%E6%AD%A4/"/>
      <url>/2019/05/26/%E6%9C%AC%E5%B0%B1%E8%AF%A5%E5%A6%82%E6%AD%A4/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>从暑假到现在，发觉自己已经好久没有好好写点什么了，离开了QQ空间，这个博客就成了我唯一记录生活琐事、所思所感的地方了.自己当初搭建这个博客，也是为了能在若干年以后，看看从前经历过得点点滴滴，品味学生时代的多姿多彩的时光。<br>然而事与愿违，这个博客对生活中的记录少之又少，大部分都是一些学习方面的东西，想起朱自清在《荷塘月色》中描摹出的那一份意境. 所以我觉得以后尽量少把学习有关的东西放在这这博客上面了，不然真的没什么意思了。</p><a id="more"></a><blockquote><p>如果不在写学习方面的东西，我又有写什么东西好写呢?</p></blockquote><p>虽然自己平时忙于学习，一是感觉自己的实力好像还未足够，好像还有许多未成熟的性格。不，这只是不知道界限而已。二是我也感觉自己只是做到了一个正常学生的样子。像其他人那样平时去着玩，去哪玩的，然后什么都会的的生活方式确实令人羡慕。从小学到高中毕业🎓，我似乎只明白也一个道理: 我想脚踏实地。我确实的是一种看淡一切的心境。</p><p>阅历，让你日渐淡定。</p><p>处在一个小的环境里面，难免会对周遭的人和事感兴趣，对异性的好感，对某些行为的厌恶。</p><p>昨天参加了联谊活动(软件工程、物联网和行政管理),活动的前部分我都没有什么很深印象，只是后半部分的重新分配搭档，和我搭档的女生我印象很深，她在前部分唱了一首&lt;&lt;魔鬼中的天使&gt;&gt;，她给我留下的第一印象就很好，和我差不多高，歌唱的很好，是物联网专业的，在接下来的猜成语中我们组总分最低，所以我们就上去接受惩罚，我和我的搭档决定选A(吃芥末)，<br>我之前没有吃过芥末，不知道这东西和吃油漆一样，我吃完就受不了吐了出来。因为我本来就感冒了🤧，所以反应十分剧烈。眼泪都流出来了。呛死我了，感觉对不住这个女孩纸。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 记录📝 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你好！Apache</title>
      <link href="/2019/04/30/apache_start/"/>
      <url>/2019/04/30/apache_start/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><div style="text-align:center"><br>也许放弃 才能靠近你 不再见你<br>你才会把我记起 时间累积<br>这盛夏的果实 回忆里爱情的香气<br>我以为不露痕迹 思念却满溢<br>或许这代表了我的心<br>不要刻意说 你还爱我<br></div><p style="float:right">&lt;盛夏的果实&gt; –莫文蔚</p><a id="more"></a><p>Apache<a href="http://www.apache.org/" target="_blank" rel="noopener">官网</a></p><figure class="image-box">                <img src="http://www.apache.org/img/support-apache.jpg" alt title class>                <p></p>            </figure><p>为什么更换为Apache的服务端软件?</p><blockquote><p>主要原因有以下几点:</p></blockquote><ul><li>随着学习的不断的深入，不断能感受到Apache基金会的牛逼过人之处，以及微软，所以数据库软件我也由原本的mysql换成了sql server，不得不说大企业的软件就是好用👌</li><li>caddy只适合一些轻量级的网站，性能捉急</li><li>稳定是排在第一位的</li></ul><p>主要想要做到以下几点:</p><ul><li>全站ssl加密，即<code>https</code></li><li><code>代理</code> 设置比较方便，配置文件比较好设置</li><li><code>目录浏览</code>这个我打算自己写一个好的</li></ul><hr><p>由于刚接触很久没有接触<code>Apache</code>，我打算在虚拟机上面熟悉以后再搬到生产环境上面去。接下来的笔记将会从以下几个方面来记录:</p><ul><li><code>Apache</code>安装包括编译安装</li><li><code>Apache</code>配置文件位置，熟悉配置文件</li><li>对服务器的优化设置</li></ul><hr><p>macOS下面，<code>httpd.conf</code>里面设置<code>User</code>为自己系统里面的用户名,可以解决没有搜索权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Listen 80</span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">    DocumentRoot    /Users/sagit/Documents/wwwroot/Blog/public</span><br><span class="line">    ServerName  blog.ourfor.com</span><br><span class="line">    &lt;Directory <span class="string">"/Users/sagit/Documents/wwwroot/Blog/public"</span>&gt;</span><br><span class="line">        Options FollowSymLinks</span><br><span class="line">        AllowOverride   None</span><br><span class="line">        Order   allow,deny</span><br><span class="line">        Require all granted</span><br><span class="line">        Allow from all</span><br><span class="line">    &lt;/Directory&gt;</span><br><span class="line">    ErrorLog <span class="string">"/usr/local/var/log/httpd/blog.ourfor.com.com-error_log"</span></span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><hr><p>如果页面提示禁止没有权限，那么不要忘了<code>&lt;Directory&gt;</code>里面的内容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;Directory <span class="string">"/Users/sagit/Documents/wwwroot/Blog/public"</span>&gt;</span><br><span class="line">        Options FollowSymLinks</span><br><span class="line">        AllowOverride   None</span><br><span class="line">        Order   allow,deny</span><br><span class="line">        Require all granted</span><br><span class="line">        Allow from all</span><br><span class="line">    &lt;/Directory&gt;</span><br></pre></td></tr></table></figure></p><hr><p>macOS编辑<code>mod_jk</code>,安装好<code>httpd</code> -<code>apache</code><br>编译命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./configure CFLAGS=<span class="string">'-arch x86_64'</span> APXSLDFLAGS=<span class="string">'-arch x86_64'</span> --with-apxs=/usr/<span class="built_in">local</span>/bin/apxs</span><br><span class="line">make</span><br></pre></td></tr></table></figure></p><h2 id="有些脚本是在window下面写的，在unix上面有些不可见字符，可以用vi打开后设置fileformat，即-set-fileformat-unix或者-set-ff-unix"><a href="#有些脚本是在window下面写的，在unix上面有些不可见字符，可以用vi打开后设置fileformat，即-set-fileformat-unix或者-set-ff-unix" class="headerlink" title="有些脚本是在window下面写的，在unix上面有些不可见字符，可以用vi打开后设置fileformat，即:set fileformat=unix或者:set ff=unix"></a>有些脚本是在window下面写的，在unix上面有些不可见字符，可以用vi打开后设置<code>fileformat</code>，即<code>:set fileformat=unix</code>或者<code>:set ff=unix</code></h2><h1 id="apache-httpd服务器连接tomcat"><a href="#apache-httpd服务器连接tomcat" class="headerlink" title="apache httpd服务器连接tomcat"></a><code>apache httpd</code>服务器连接<code>tomcat</code></h1><blockquote><p>演示系统环境<code>macOS Majave 10.14.4</code></p></blockquote><ul><li>加载<code>mod_jk</code>模块,我已经编译好了<a href="https://raw.github.com/ourfor/Blog/master/tomcat/mod_jk/mod_jk.so" target="_blank" rel="noopener">最新的</a>,适用于Apache版本<code>Server version: Apache/2.4.39 (Unix)</code></li></ul><p>在<code>httpd</code>的配置文件中添加一个名为<code>httpd-jk.conf</code>(名字可以随便取)，同时在<code>httpd.conf</code>里面导入这个配置文件:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Virtual hosts</span></span><br><span class="line">Include /usr/<span class="built_in">local</span>/etc/httpd/extra/httpd-vhosts.conf</span><br></pre></td></tr></table></figure></p><p>顺便把<code>User</code>改成你的登录用户名,原本为<code>_www</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">User sagit</span><br><span class="line">Group _www</span><br></pre></td></tr></table></figure></p><p>这样的话网站更目录就不需要放在默认的位置了</p><ul><li>配置<code>httpd-jk.conf</code>文件，该文件负责导入<code>mod_jk</code>，将下载好的<code>mod_jk.so</code>文件放到httpd的模块文件夹里面，然后编辑<code>httpd-jk.conf</code>文件:</li></ul><p><a href="https://github.com/ourfor/Blog/blob/d8b3eb027971e15ce854055dc1348de2367009be/tomcat/mod_jk/httpd-jk.conf#L22-L123" target="_blank" rel="noopener">https://github.com/ourfor/Blog/blob/d8b3eb027971e15ce854055dc1348de2367009be/tomcat/mod_jk/httpd-jk.conf#L22-L123</a></p><p>主要注意下面几个位置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">LoadModule jk_module lib/httpd/modules/mod_jk.so</span><br><span class="line">&lt;IfModule jk_module&gt;</span><br><span class="line">    <span class="comment"># and in the global server</span></span><br><span class="line">    JkWorkersFile /usr/<span class="built_in">local</span>/etc/httpd/extra/workers.properties</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Our JK error log</span></span><br><span class="line">    <span class="comment"># You can (and should) use rotatelogs here</span></span><br><span class="line">    JkLogFile /usr/<span class="built_in">local</span>/var/<span class="built_in">log</span>/httpd/mod_jk.log</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Our JK shared memory file</span></span><br><span class="line">    JkShmFile /usr/<span class="built_in">local</span>/var/<span class="built_in">log</span>/httpd//mod_jk.shm</span><br></pre></td></tr></table></figure></p><p>加载<code>mod_jk</code>的路径，这里的路径跟随<code>httpd.conf</code>里面写，因为这个文件会被原封不动的include到<code>httpd.conf</code>里面，只需要修改一下最后的模块文件名，即<code>mod_jk.so</code><br>接下来这个<code>JkWorkersFile</code>指明<code>workers.properties</code>的位置，这个<code>worker.properties</code>文件最好放在和<code>httpd-jk.conf</code>同一目录下面，并且按照<code>httpd.conf</code>里面导入额外的配置文件的父路径一致，<code>JkLogFile</code>和<code>JkShmFile</code>这两个文件的父路径和<code>httpd.conf</code>里面存放日志文件的父路径一致</p><ul><li><code>workers.properties</code>里面写什么<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">worker.list=jk-manager,tomcatA</span><br><span class="line">worker.jk-manager.type=status</span><br><span class="line"></span><br><span class="line">worker.tomcatA.type=ajp13</span><br><span class="line">worker.tomcatA.host=localhost</span><br><span class="line">worker.tomcatA.port=8009</span><br></pre></td></tr></table></figure></li></ul><p>主要注意<code>worker.list</code>,这里面写了几个东西，下面就要配置几个</p><ul><li>接下来是tomcat的<code>server.xml</code>文件</li></ul><p><a href="https://github.com/ourfor/Blog/blob/d8b3eb027971e15ce854055dc1348de2367009be/tomcat/mod_jk/server.xml#L128-L133" target="_blank" rel="noopener">https://github.com/ourfor/Blog/blob/d8b3eb027971e15ce854055dc1348de2367009be/tomcat/mod_jk/server.xml#L128-L133</a></p><ul><li>Apache里面配置虚拟主机就行了<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">DocumentRoot/usr/local/Cellar/tomcat/9.0.17/libexec/webapps/lab_war_exploded </span><br><span class="line">ServerName file.ourfor.com</span><br><span class="line">JkMount /* tomcatA</span><br><span class="line">DirectoryIndex index.html index.jsp</span><br><span class="line">&lt;Directory &quot;/usr/local/Cellar/tomcat/9.0.17/libexec/webapps/lab_war_exploded&quot;&gt;</span><br><span class="line">Options FollowSymLinks</span><br><span class="line">AllowOverrideNone</span><br><span class="line">Orderallow,deny</span><br><span class="line">Allow from all</span><br><span class="line">&lt;/Directory&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="其中jkMount是匹配规则，匹配到什么路径才交给tomcat处理，以及交给谁处理"><a href="#其中jkMount是匹配规则，匹配到什么路径才交给tomcat处理，以及交给谁处理" class="headerlink" title="其中jkMount是匹配规则，匹配到什么路径才交给tomcat处理，以及交给谁处理"></a>其中<code>jkMount</code>是匹配规则，匹配到什么路径才交给<code>tomcat</code>处理，以及交给谁处理</h2><p>如果需要在一个服务器上面部署配置多个tomcat的<code>webapp</code>的话，只需要在<code>httpd-vhosts.conf</code>和<code>server.xml</code>里面添加就可以了.</p><blockquote><p>server.xml</p></blockquote><p><a href="https://github.com/ourfor/Blog/blob/e1a974fe623816814c20f87acdd51aefa0234494/tomcat/mod_jk/server.xml#L128-L140" target="_blank" rel="noopener">https://github.com/ourfor/Blog/blob/e1a974fe623816814c20f87acdd51aefa0234494/tomcat/mod_jk/server.xml#L128-L140</a></p><blockquote><p>httpd-vhosts.conf</p></blockquote><h2 id="https-github-com-ourfor-Blog-blob-e1a974fe623816814c20f87acdd51aefa0234494-tomcat-mod-jk-httpd-vhosts-conf-L37-L61"><a href="#https-github-com-ourfor-Blog-blob-e1a974fe623816814c20f87acdd51aefa0234494-tomcat-mod-jk-httpd-vhosts-conf-L37-L61" class="headerlink" title="https://github.com/ourfor/Blog/blob/e1a974fe623816814c20f87acdd51aefa0234494/tomcat/mod_jk/httpd-vhosts.conf#L37-L61"></a><a href="https://github.com/ourfor/Blog/blob/e1a974fe623816814c20f87acdd51aefa0234494/tomcat/mod_jk/httpd-vhosts.conf#L37-L61" target="_blank" rel="noopener">https://github.com/ourfor/Blog/blob/e1a974fe623816814c20f87acdd51aefa0234494/tomcat/mod_jk/httpd-vhosts.conf#L37-L61</a></h2><p>如果使用<code>idea</code>开发的话，这里<code>server.xml</code>里面的<code>docBase</code>也写成绝对路径，或者将<code>appbase</code>写成绝对路径,二选一<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Engine</span> <span class="attr">name</span>=<span class="string">"Catalina"</span> <span class="attr">defaultHost</span>=<span class="string">"localhost"</span> <span class="attr">jvmRoute</span>=<span class="string">"tomcatA"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">"file.ourfor.com"</span> <span class="attr">appBase</span>=<span class="string">"/Users/sagit/Desktop/www"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">unpackWARs</span>=<span class="string">"true"</span> <span class="attr">autoDeploy</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">xmlValidation</span>=<span class="string">"false"</span> <span class="attr">xmlNamespaceAware</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Context</span> <span class="attr">path</span>=<span class="string">""</span> <span class="attr">docBase</span>=<span class="string">"lab_war_exploded"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Host</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">Host</span> <span class="attr">name</span>=<span class="string">"doc.ourfor.com"</span> <span class="attr">appBase</span>=<span class="string">"webapps"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">unpackWARs</span>=<span class="string">"true"</span> <span class="attr">autoDeploy</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">xmlValidation</span>=<span class="string">"false"</span> <span class="attr">xmlNamespaceAware</span>=<span class="string">"false"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Context</span> <span class="attr">path</span>=<span class="string">""</span> <span class="attr">docBase</span>=<span class="string">"/Users/sagit/Desktop/www/demo"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Host</span>&gt;</span></span><br></pre></td></tr></table></figure></p><hr><h3 id="通过jk连接器，web应用程序的数据源找不到"><a href="#通过jk连接器，web应用程序的数据源找不到" class="headerlink" title="通过jk连接器，web应用程序的数据源找不到"></a>通过jk连接器，web应用程序的数据源找不到</h3><p>可以考虑将数据源配置到tomcat的<code>server.xml</code>里面，但是我更推荐下面这种:</p><p>在web程序的<code>web.xml</code>里面添加:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resource-ref</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">res-ref-name</span>&gt;</span>jdbc/shop<span class="tag">&lt;/<span class="name">res-ref-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">res-type</span>&gt;</span>javax.sql.DataSource<span class="tag">&lt;/<span class="name">res-type</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">res-auth</span>&gt;</span>Container<span class="tag">&lt;/<span class="name">res-auth</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resource-ref</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后将<code>context.xml</code>复制为<code>$CATALINA_BASE/conf/[enginename]/[hostname]/context.xml.default</code></p><p>具体原因查看<a href="https://tomcat.apache.org/tomcat-9.0-doc/config/context.html" target="_blank" rel="noopener">官方文档</a></p><blockquote><p>When autoDeploy or deployOnStartup operations are performed by a Host, the name and context path of the web application are derived from the name(s) of the file(s) that define(s) the web application. Consequently, the context path may not be defined in a META-INF/context.xml embedded in the application and there is a close relationship between the context name, context path, context version and the base file name (the name minus any .war or .xml extension) of the file.</p></blockquote><blockquote><p>If no version is specified then the context name is always the same as the context path. If the context path is the empty string then the base name will be ROOT (always in upper case) otherwise the base name will be the context path with the leading ‘/‘ removed and any remaining ‘/‘ characters replaced with ‘#’.</p></blockquote><blockquote><p> If a version is specified then the context path remains unchanged and both the context name and the base name have the string ‘##’ appended to them followed by the version identifier.<br>Some examples of these naming conventions are given below.</p></blockquote><h2 id="一些网友的解决方案"><a href="#一些网友的解决方案" class="headerlink" title="一些网友的解决方案"></a>一些网友的<a href="https://stackoverflow.com/questions/50482786/javax-naming-namenotfoundexception-name-jdbc-rhwebdb-is-not-bound-in-this-con" target="_blank" rel="noopener">解决方案</a></h2>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>狂赌之渊</title>
      <link href="/2019/04/18/kakegurui/"/>
      <url>/2019/04/18/kakegurui/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>来到两年花团的神秘转学生。<br>从一个令人耳目一新的外观无法想象的赌徒。<br>乐于承担风险。<br><a id="more"></a><br>今天小编就给你们介绍一个炒鸡好看的日剧,名叫《狂赌之渊》,我也是在一个没事做的周四下午在玩了一会《刺客信条·大革命》以后,就去Netflix上面看了看电视剧,发现这个片集数不是很多,没成想一看就停不下来了.</p><p><img style="width: 60%" src="https://file.ourfor.top/source/kakegurui/logo.png"></p><div id="dplayer8" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer8"),"theme":"#FADFA3","loop":true,"preload":"none","video":{"url":"https://file.ourfor.top/source/kakegurui/%E3%83%89%E3%83%A9%E3%83%9E%E3%80%8C%E8%B3%AD%E3%82%B1%E3%82%B0%E3%83%AB%E3%82%A4%E3%80%8D%E3%80%80%E6%9C%80%E7%B5%82%E8%A9%B1%E3%80%80%E3%81%94%E6%8C%A8%E6%8B%B6-QSNdmp0U4wE.mkv","pic":"https://file.ourfor.top/source/kakegurui/kv_pc.jpg"},"danmaku":{"id":"9E2E3368B56CDBB4","api":"http://dplayer.daoapp.io"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><hr><p>作品丰富,真人目前出到了第二季,漫画和动漫都有</p><table class="table"><br>    <tr><br>        <td><br>            <img src="one.jpg" alt="第一季"></td><br>        <td><br>            <img src="two.jpg" alt="第二季"></td><br>        <td><br>            <img src="anime.jpg" alt="动漫"></td><br>    </tr><br>    <tr><br>        <td colspan="3"><br>            <img src="comic.jpg" alt="漫画"><br>        </td><br>    </tr><br></table><ul><li><a href="https://kakegurui.jp/" target="_blank" rel="noopener">官网</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 电视剧📺 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日剧 </tag>
            
            <tag> 赌博 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时光易逝，我想留下点什么</title>
      <link href="/2019/03/16/hexo_start/"/>
      <url>/2019/03/16/hexo_start/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><code>感受</code>、<code>时光</code>。经过了许多人和事，颇有感触，心情复杂，最后觉得有些东西还是写下来好一点，每每看着自己以前写的东西，有开心喜悦，有后悔抱怨，也有嘲笑曾经的年少无知。这个博客带给了许多。我想用文字和图片留下当时的<a class="mainKeywords">那份心境，仅此而已</a>。所以我们得有一个博客，这个博客没有html的复杂，却能满足我们的大部分需要。<br><a id="more"></a></p><h1 id="大纲"><a href="#大纲" class="headerlink" title="大纲"></a>大纲</h1><ul><li><a href="#first">搭建hexo博客</a></li><li><a href="#second">注册GitHub并部署到公网</a></li><li><a href="#third">ci自动化构建</a></li></ul><h1 id="视频教程"><a href="#视频教程" class="headerlink" title="视频教程"></a>视频教程</h1><p>我，视频做得确实不太好，见谅😄</p><div id="dplayer6" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer6"),"theme":"#FADFA3","loop":true,"preload":"none","video":{"url":"https://cloud.ourfor.top/video/hexo/hexo_first.mp4","pic":"hexo_start_1.jpg"},"danmaku":{"id":"9E2E3368B56CDBB4","api":"http://dplayer.daoapp.io"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><p>视频有点大，就没有剪辑合并了，凑合着看吧，下面这个是一些细节的地方，上面的视频只是基本的搭建方法</p><div id="dplayer7" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer7"),"theme":"#FADFA3","loop":true,"preload":"none","video":{"url":"https://cloud.ourfor.top/video/hexo/hexo_second.mp4","pic":"hexo_start_2.jpg"},"danmaku":{"id":"9E2E3368B56CDBB4","api":"http://dplayer.daoapp.io"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><p><a id="first"></a></p><h2 id="开始使用hexo博客"><a href="#开始使用hexo博客" class="headerlink" title="开始使用hexo博客"></a>开始使用hexo博客</h2><p>必须组件:</p><ul><li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">nodejs</a></li><li><a href="https://git-scm.com/" target="_blank" rel="noopener">git</a></li></ul><p>分别将<code>nodejs</code>和<code>git</code>安装好，安装过程一路回车就行了，接下来我们的操作都要在git提供的Linux终端仿真器—-<code>git bash</code>中操作。</p><blockquote><p>附:其实我更推荐你安装<code>docker</code>.</p></blockquote><p>打开<strong><em>Git bash</em></strong>, 首先，我们得为我们的博客创建一个目录，用来存放我们的主题和文章源码:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir BlogRoot    <span class="comment">#创建一个名为BlogRoot的目录，目录名根据个人喜好命名</span></span><br><span class="line">npm install hexo-cli -g      <span class="comment"># 安装hexo框架及其远程部署插件</span></span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">hexo init BlogRoot  <span class="comment">#初始化我们的博客根目录，其实就是同步一些必备的文件</span></span><br><span class="line"><span class="built_in">cd</span> BlogRoot        <span class="comment">#切换到我们的博客目录</span></span><br></pre></td></tr></table></figure><p><img src="https://file.ourfor.top/source/other/git_bash.PNG"><br>在博客的更目录下面，使用<code>hexo s</code>命令将博客部署到本地，程序会占用<code>4000</code> 端口，在浏览器中打开<code>http://localhost:4000/</code> 就可以查看博客了。</p><p>至此我们的博客就安装好了，接下来就是怎么写文章，如何在本地查看效果，以及如何部署到公网。</p><hr><blockquote><p>说明:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo g  <span class="comment">#渲染markdown文件，生成静态的html文件</span></span><br><span class="line">hexo s  <span class="comment">#本地部署，可以在浏览器中查看效果，默认部署到:localhost:4000，网站html源文件在public目录下，不过它是热加载</span></span><br><span class="line">hexo d  <span class="comment">#将渲染生成的html文件部署到远程仓库，用于在外网中访问，其实是将博客根目录下的public目录中的文件部署过去</span></span><br></pre></td></tr></table></figure></p></blockquote><p>安装deployer-git插件(用于部署到支持git的代码托管网站,上文已安装，可以跳过)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p><h4 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h4><p>是不是觉得默认的<code>landscape</code>太单调简洁了？不会前端设计？没关系，GitHub上面有很多开发者为<code>hexo</code>设计了许多精美的主题。诸如<code>Next</code>、<code>mellow</code>等等。<br>在github上面搜索关键字<code>hexo-theme</code>，选择一个你中意的主题，复制它的https仓库地址：</p><p>我个人比较喜欢这两个主题：</p><ul><li style="list-style: none"><input type="checkbox" checked> <a href="https://github.com/ppoffice/hexo-theme-icarus" target="_blank" rel="noopener">icarus</a> </li><li style="list-style: none"><input type="checkbox" checked> <a href="https://github.com/codefine/hexo-theme-mellow/wiki" target="_blank" rel="noopener">Mellow</a></li></ul><p>上面都有详细的帮助文档，如果看不太懂😭，我们可以一起讨论交流</p><ul><li>在博客根目录下执行</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus   <span class="comment">#将主题保存到我们的theme目录下面，目录名为icarus</span></span><br></pre></td></tr></table></figure><p>同时更改我们博客根目录下的<code>_config.yml</code>文件里面的theme字段，更改为主题目录的名字，如上面我们的<code>icarus</code></p><p>博客安装好了，我要怎样写文章呢？<br>所以我们就有必要了解一下BlogRoot这个文件夹里面各个部分的作用了。</p><figure class="image-box">                <img src="https://file.ourfor.top/source/other/blog.png" alt="BlogRoot文件夹🏠" title class>                <p>BlogRoot文件夹🏠</p>            </figure><figure class="image-box">                <img src="https://file.ourfor.top/source/other/source.png" alt="source文件夹📂" title class>                <p>source文件夹📂</p>            </figure><figure class="image-box">                <img src="https://file.ourfor.top/source/other/themes.png" alt="themes文件夹😝" title class>                <p>themes文件夹😝</p>            </figure><ul><li><p>文章保存在<code>source/_posts</code>里面，是以<code>.md</code>结尾的文本文件，你可以用文本编辑器打开编辑它,不过我更推荐你用<a href="https://ourfor.top/2018/03/24/3/" target="_blank" rel="noopener">Sublime Text 3</a>，这个文本文件使用的是<code>MarkDown</code>这种轻量级的标记语法，同时兼容<code>HTML</code> ，是<strong><em>纯文本的</em></strong>，不像<code>WordPress</code>和<code>PPT</code>那样，当然这是优点。</p></li><li><p>写第一篇文章<br>在<code>Git bash</code>(注意你得cd到博客根目录下面，即上文的BlogRoot文件夹下面) ，输入<code>hexo new 我的XX</code>(我的XX-是标题，自拟)<br>这时候你就可以在<code>BlogRoot/source/_posts</code>里面看到它，编辑这个文件就OK了。</p></li><li><p>博客部署到远程仓库</p></li></ul><p>如何从外网访问博客呢？其实我们打开的<code>http://localhost:4000/</code>这个网址它的网站根目录是在<code>blog/public</code>下面，你可以打开public这个文件夹看看，里面就是网站页面的源码，你可以打开这个<code>index.html</code>文件，是不是就是你的博客的主页。只是没有图片而已，所以我们只需要将这个文件夹里面的东西放到一个外网可以访问的地方就行了，好在<code>hexo</code>的配置文件里面已经有相关的设置了，我们只需要稍作更改就行了。</p><p><a id="second"></a></p><h2 id="注册github账号，并将文章部署到公网"><a href="#注册github账号，并将文章部署到公网" class="headerlink" title="注册github账号，并将文章部署到公网"></a>注册github账号，并将文章部署到公网</h2><p>首先我们先去<code>github</code>或者<code>coding</code>注册一个账号。</p><ul><li><a href="https://github.com/" target="_blank" rel="noopener">GitHub</a></li><li><a href="https://coding.net/" target="_blank" rel="noopener">Coding</a></li></ul><p>由于<code>Github</code>主机在美国，访问速度可能有点慢，所以你也可以部署到<code>Coding</code>，下面以全球最大的开源社区<code>GitHub</code>为例(今年是GitHub十周年)。</p><h4 id="1-打开GitHub官网-点击右上角的Sign-up注册一个账号。"><a href="#1-打开GitHub官网-点击右上角的Sign-up注册一个账号。" class="headerlink" title="1.打开GitHub官网,点击右上角的Sign up注册一个账号。"></a>1.打开<a href="https://github.com/" target="_blank" rel="noopener">GitHub官网</a>,点击右上角的<code>Sign up</code>注册一个账号。</h4><figure class="image-box">                <img src="https://file.ourfor.top/source/other/sing_up.png" alt="Sign up" title class>                <p>Sign up</p>            </figure><ul><li><p><code>Username</code>填一个简单一点的英文名，因为以后你的博客就通过<code>Username.github.io</code>来访问的，所以起一个好点的、不太长的名字就很有必要了，比如我的这个<code>Username</code>是<code>ourfor</code>,很短也很好记。</p></li><li><p><code>Email address</code>填个QQ邮箱📮也是OK的啦</p></li><li><p><code>Password</code>这个你懂得😳😳</p></li><li><p><code>step2和step3</code>这个由于我注册过了，我就没打开看了，你看着填吧。</p></li></ul><h4 id="2-新建一个Repository，点击页面上面的New-repository"><a href="#2-新建一个Repository，点击页面上面的New-repository" class="headerlink" title="2.新建一个Repository，点击页面上面的New repository"></a>2.新建一个<code>Repository</code>，点击页面上面的<code>New repository</code></h4><figure class="image-box">                <img src="https://file.ourfor.top/source/other/new_repository.png" alt="New repository" title class>                <p>New repository</p>            </figure><ul><li>这个<code>Repository name</code>填<code>username.github.io</code>,比如我的就填<code>ourfor.github.io</code>.你的根据你的<code>username</code>填。</li><li><code>Public</code>就是这个，点击<code>Create repository</code>就可以完成创建。</li><li><code>Description</code>可选，建议勾选☑️<code>Initialize this repository with a README</code></li></ul><p>这时候就会打开仓库主页，依次点击页面右侧的<code>Clone or download</code>、<code>Use SSH</code>复制框中的<code>Repo</code>地址，待会要用。</p><h4 id="3-修改配置文件-config-yml"><a href="#3-修改配置文件-config-yml" class="headerlink" title="3.修改配置文件_config.yml"></a>3.修改配置文件<code>_config.yml</code></h4><p>用<code>Sublime Text 3</code>或者其他文本编辑器打开博客根目录下面的<code>_config.yml</code>文件，在文件末尾，找到：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>:</span><br></pre></td></tr></table></figure></p><p>改成：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: </span><br><span class="line">       github: git@github.com:ourfor/ourfor.github.io.git,master</span><br><span class="line">       <span class="comment">#coding: git@git.coding.net:ourfor/ourfor.git,master</span></span><br><span class="line">  branch: master     </span><br><span class="line">  message: blog update</span><br></pre></td></tr></table></figure></p><p>上面这个<code>git@github.com:ourfor/ourfor.github.io.git</code>是我的仓库的地址,你改成刚才复制的那个就行了，如果你用的是<code>coding</code>你可以把<code>github</code>这一行用<code>#</code>注释掉，去掉<code>coding</code>前面的<code>#</code>。最后保存更改。</p><h3 id="4-添加部署密钥"><a href="#4-添加部署密钥" class="headerlink" title="4.添加部署密钥."></a>4.添加部署密钥.</h3><p>打开<code>Git bash</code>，输入<code>ssh-keygen -t rsa -C &quot;2320813747@qq.com&quot;</code>,这个邮箱地址换成你的。连续四次回车就生成了一对密钥。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Your identification has been saved <span class="keyword">in</span> /c/Users/zip/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /c/Users/zip/.ssh/id_rsa.pub.</span><br></pre></td></tr></table></figure></p><p>它会告诉你密钥生成在那个文件夹,上面是我的密钥生成路径，下面要相应替换成你的，使用<code>cat</code>来查看公钥内容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /c/Users/zip/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></p><p>复制输出的内容，打开<code>GitHub</code>，点击页面右侧头像旁边的倒三角，打开<code>Settings</code>，在页面左侧的<code>Personal settings</code>下面定位到<code>SSH and GPG keys</code>这一栏,点击右侧的<code>New SSH key</code>来添加一个密钥，其中<code>Title</code>随意,<code>Key</code>填写上一步<code>Git bash</code>里面生成的那个。最后<code>Add SSH key</code>就行了。</p><p>如果要使用<code>username.github.io</code>来访问博客的话，我们需要在仓库的设置里面打开<br><code>GitHub Pages</code>这个功能:<br><figure class="image-box">                <img src="https://file.ourfor.top/source/ourfor/enable_github_pages.png" alt="打开 GitHub Pages" title class>                <p>打开 GitHub Pages</p>            </figure></p><p>在实际使用过程中我们发现，当你在仓库设置里面打开这个功能后，你的仓库里面会增加一个名为<code>CNAME</code>的文件(通过cname方式解析的)，其内容就是你在设置中添加的域名或者是<code>username.github.io</code>,如果你删除这个文件，那么你再次访问你博客的域名，你会发现没有解析到GitHub，你再打开设置就会发现你没有打开<code>GitHub Pages</code>功能，也就是说<code>GitHub</code>实际上是通过这个文件来部署<code>GitHub Pages</code>的。那么我们遇到了一个问题(或许你已经发现了)，你每次更新完博客(推送到GitHub)后仓库里面的<code>CNAME</code>就会丢失，又得重新再设置里面打开<code>GitHub Pages</code>功能，这未免也太麻烦了，特别是后期通过<code>GitHub Hooks</code>来更新的话… 所有我们在<code>博客更目录下面</code>的<code>source</code>目录下面添加一个<code>CNAME</code>的文件，内容为你博客要使用的域名。</p><p>比如在<code>source</code>目录下面执行下面这条命令:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e <span class="string">"ourfor.github.io"</span> &gt; CNAME    <span class="comment">#通过重定向屏幕输出到文件</span></span><br></pre></td></tr></table></figure><p>这样我就可以通过<code>ourfor.github.io</code>来访问我的博客了</p><blockquote><p>当你写好文章之后,首先得使用<code>hexo g</code>来生成，而<code>hexo s</code>可以在本地查看实际效果，<code>hexo d</code>会自动<code>push</code>到远程仓库，你就可以在浏览器地址栏中输入<code>username.github.io</code>来访问你的博客<code>username</code>是你的<strong><em>GitHub</em></strong>用户名。</p></blockquote><p><a id="third"></a></p><h2 id="ci自动化构建"><a href="#ci自动化构建" class="headerlink" title="ci自动化构建"></a>ci自动化构建</h2><p>通过ci来持续集成我们的博客，首先我们得注册一个<code>Travis CI</code>账号，同时把我们的仓库在<code>Travis CI</code>中激活<code>存放博客文章源码的repo</code>(建议设置为私有仓库)</p><p>首先在repo更目录下面创建一个名为<code>.travis.yml</code>的配置文件，文件内容为:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">language: node_js</span><br><span class="line">node_js:</span><br><span class="line">  - <span class="string">"node"</span></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">install:</span><br><span class="line">  - npm install</span><br><span class="line">  - npm install hexo-cli -g</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">script:</span><br><span class="line">  - hexo clean</span><br><span class="line">  - hexo g</span><br><span class="line"></span><br><span class="line">after_script:</span><br><span class="line">  - <span class="built_in">cd</span> ./public</span><br><span class="line">  - git init</span><br><span class="line">  - git config user.name <span class="string">"ourfor"</span></span><br><span class="line">  - git config user.email <span class="string">"ourfor@foxmail.com"</span></span><br><span class="line">  - git add .</span><br><span class="line">  - git commit -m <span class="string">"Update blog"</span></span><br><span class="line">  - git push --force --quiet <span class="string">"https://<span class="variable">$&#123;GH_TOKEN&#125;</span>@<span class="variable">$&#123;GH_REF&#125;</span>"</span> master:master</span><br><span class="line"></span><br><span class="line">branches:</span><br><span class="line">  only:</span><br><span class="line">    - master</span><br><span class="line">env:</span><br><span class="line"> global:</span><br><span class="line">   - GH_REF: github.com/ourfor/ourfor.github.io.git</span><br></pre></td></tr></table></figure><p>其中<code>GH_REF</code>的值为:博客部署仓库的地址，也就是html源码的仓库地址，不一定是markdown源码仓库的地址。当然你可以分布将这两个东西放在不同的分支喽。<br>接下来我们就要在<code>GitHub</code>上面获取我们的<code>GH_TOKEN</code>(个人令牌)。</p><p>未完待续</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://blog.ourfor.top/2018/03/06/hexo-github-coding%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/">hexo个人博客</a></li><li><a href="https://blog.ourfor.top/2018/10/25/GitHub%E5%8F%8Agit%E5%88%9D%E7%BA%A7%E7%8E%A9%E6%B3%95/">GitHub入门</a></li><li><a href="https://blog.ourfor.top/2018/10/25/GitHub%E5%8F%8Agit%E5%88%9D%E7%BA%A7%E7%8E%A9%E6%B3%95/#%E5%A6%82%E4%BD%95%E7%BC%96%E5%86%99README%E6%96%87%E4%BB%B6">MarkDown常用语法</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
            <tag> markdown </tag>
            
            <tag> ci </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>是时候和虚拟机分手了</title>
      <link href="/2019/03/12/docker_fedora/"/>
      <url>/2019/03/12/docker_fedora/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>由于编写的jsp代码需要在各个环境中测试，同时又不想让网络成为一大障碍，起初一直在用虚拟机安装fedora，但近来越发觉得虚拟机启动操作系统和保存操作系统状态太慢了，<br>以前一直有用docker，像docker搭建的迅雷远程下载等等，<a id="mainKeywords">docker</a>优势很明显，秒启动是我最中意的，镜像体积小，可个性化的程度还是很高的，下面我们就来构建一个镜像。</p><a id="more"></a><p>首先创建一个文件夹，里面放上我们构建镜像的文件<code>Dockerfile</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir fedora</span><br><span class="line">touch fedora/Dockerfile</span><br><span class="line">vim fedora/Dockerfile</span><br></pre></td></tr></table></figure><p>文件内容为:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">FROM fedora:latest</span><br><span class="line">MAINTAINER: ourfor.top</span><br><span class="line">RUN dnf -y install systemd systemd-libs</span><br><span class="line"><span class="comment">#RUN dnf -y update</span></span><br><span class="line">RUN dnf clean all; \</span><br><span class="line">(<span class="built_in">cd</span> /lib/systemd/system/sysinit.target.wants/; <span class="keyword">for</span> i <span class="keyword">in</span> *; \</span><br><span class="line"><span class="keyword">do</span> [ <span class="variable">$i</span> == systemd-tmpfiles-setup.service ] || rm -f <span class="variable">$i</span>; <span class="keyword">done</span>); \</span><br><span class="line">rm -f /lib/systemd/system/multi-user.target.wants/*;\</span><br><span class="line">rm -f /etc/systemd/system/*.wants/*;\</span><br><span class="line">rm -f /lib/systemd/system/<span class="built_in">local</span>-fs.target.wants/*; \</span><br><span class="line">rm -f /lib/systemd/system/sockets.target.wants/*udev*; \</span><br><span class="line">rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \</span><br><span class="line">rm -f /lib/systemd/system/basic.target.wants/*;\</span><br><span class="line">rm -f /lib/systemd/system/anaconda.target.wants/*;</span><br><span class="line">VOLUME [ <span class="string">"/sys/fs/cgroup"</span> ]</span><br><span class="line">CMD [<span class="string">"/usr/sbin/init"</span>]</span><br></pre></td></tr></table></figure></p><p>使用下面的命令构建:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build --rm -t fedora:systemd fedora</span><br></pre></td></tr></table></figure></p><p>使用<code>exec</code>链接<code>shell</code>，而不是<code>attach</code>：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it <span class="variable">$container_id</span> /bin/bash</span><br></pre></td></tr></table></figure></p><ul><li>构建一个用于部署<code>jsp</code>页面的服务器：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">FROM fedora:systemd</span><br><span class="line">MAINTAINER ourfor.top</span><br><span class="line">RUN dnf install -y tomcat tomcat-webapps tomcat-admin-webapps;systemctl <span class="built_in">enable</span> tomcat.service;</span><br><span class="line">RUN dnf -y install mariadb-server mariadb; systemctl <span class="built_in">enable</span> mariadb.service</span><br><span class="line">RUN dnf install -y net-tools openssh-server openssh-clients passwd;</span><br><span class="line">RUN dnf clean all</span><br><span class="line">EXPOSE 80</span><br><span class="line"></span><br><span class="line">CMD [<span class="string">"/usr/sbin/init"</span>]</span><br></pre></td></tr></table></figure></li></ul><p>启动：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docker run --privileged -d \</span><br><span class="line">-v /sys/fs/cgroup:/sys/fs/cgroup:ro \</span><br><span class="line">-h docker.server -p 4040:80 \</span><br><span class="line">-t fedora:tomcat</span><br></pre></td></tr></table></figure></p><ul><li>构建sshd服务镜像<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">FROM fedora:latest</span><br><span class="line">MAINTAINER ourfor@foxmail.com</span><br><span class="line">ENV UPDATE_DATE 2019-03-13</span><br><span class="line">RUN dnf -y install systemd systemd-libs</span><br><span class="line"><span class="comment">#RUN dnf -y update</span></span><br><span class="line">RUN dnf clean all; \</span><br><span class="line">(<span class="built_in">cd</span> /lib/systemd/system/sysinit.target.wants/; <span class="keyword">for</span> i <span class="keyword">in</span> *; \</span><br><span class="line"><span class="keyword">do</span> [ <span class="variable">$i</span> == systemd-tmpfiles-setup.service ] || rm -f <span class="variable">$i</span>; <span class="keyword">done</span>); \</span><br><span class="line">rm -f /lib/systemd/system/multi-user.target.wants/*;\</span><br><span class="line">rm -f /etc/systemd/system/*.wants/*;\</span><br><span class="line">rm -f /lib/systemd/system/<span class="built_in">local</span>-fs.target.wants/*; \</span><br><span class="line">rm -f /lib/systemd/system/sockets.target.wants/*udev*; \</span><br><span class="line">rm -f /lib/systemd/system/sockets.target.wants/*initctl*; \</span><br><span class="line">rm -f /lib/systemd/system/basic.target.wants/*;\</span><br><span class="line">rm -f /lib/systemd/system/anaconda.target.wants/*;</span><br><span class="line">RUN dnf install -y tomcat;systemctl <span class="built_in">enable</span> tomcat.service;</span><br><span class="line">RUN dnf install -y tomcat tomcat-webapps tomcat-admin-webapps;systemctl <span class="built_in">enable</span> tomcat.service;</span><br><span class="line">RUN dnf -y install mariadb-server mariadb; systemctl <span class="built_in">enable</span> mariadb.service</span><br><span class="line">RUN dnf install -y net-tools openssh-server openssh-clients passwd;</span><br><span class="line"></span><br><span class="line">VOLUME [ <span class="string">"/sys/fs/cgroup"</span> ]</span><br><span class="line">EXPOSE 8080</span><br><span class="line">CMD [<span class="string">"/usr/sbin/init"</span>]</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run --privileged -d \</span><br><span class="line">-v /sys/fs/cgroup:/sys/fs/cgroup:ro \</span><br><span class="line">-v <span class="variable">$PWD</span>/webapps:/var/lib/tomcat/webapps:rw \</span><br><span class="line">-h docker.server -p 4040:8080 -p 2020:22 \</span><br><span class="line">-t fedora:tomcat</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> dockerfile </category>
          
      </categories>
      
      
        <tags>
            
            <tag> fedora </tag>
            
            <tag> docker </tag>
            
            <tag> tomcat </tag>
            
            <tag> mariadb </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>当IDEA遇见Tomcat . . .</title>
      <link href="/2019/03/04/idea_tomcat/"/>
      <url>/2019/03/04/idea_tomcat/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>写java代码最牛逼的IDE肯定要数<a href="https://www.jetbrains.com" target="_blank" rel="noopener">JetBrain</a>的<a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener">IDEA UItimate</a>啦，至于<code>Eclipse</code>，那东西还是算了吧,Eclipse下面的VIM插件体验极差，像我这种伸手摸不出方向键的，码字又不想用鼠标的，实在可以用蛋疼二字来形容。VIM是一款上古神器，它可以让你码字同步思考的速度。这学期学<code>jsp</code>，寒假复习了一些前端的基础知识，顺带学了点<code>php</code>,既然要学<code>jsp</code>,那就感受下<code>JSP</code>传说中的稳定强大吧。<br><a id="more"></a></p><h2 id="关于JSP"><a href="#关于JSP" class="headerlink" title="关于JSP"></a>关于JSP</h2><p>JSP全称 <strong><em>Java Service Page</em></strong> ，Java的写出来的可视化界面不敢恭维，当时Java的语法及其高级特性确实使得这门语言在极短的时间内风靡全球，即便它在浏览器上面失败了(取而代之的是JavaScript)，也丝毫阻止不了它在服务端大放异彩，这杯<code>热咖啡</code>谁不想尝一尝呢？和<code>PHP</code>以及<code>ASP.NET</code>一样，<code>JSP</code>并不能被浏览器直接解析，浏览器只能解析html+css+js，而动态部分则需要一种运行在服务端的语言来处理。和传统网页相比，有些js实现不了的，或是需要动态生成的全部交给服务端语言处理。对应变化则是：在需要动态变化的部分嵌入jsp代码，并将文件拓展名由<code>html</code>或<code>htm</code>改为<code>jsp</code>. 当用户请求具有该类拓展名时，Web服务软件并不会原封不动的发送到服务端，而是先交给其对于模块处理生成html/css/js代码，再将生成的结果发送到客户端浏览器。<br><br>与PHP、ASP.NET的Web服务软件稍作对比。php可以使用apache、nginx、caddy。ASP.NET只能使用IIS(ASP.NET本质是Visual Basic Script),上个学期学<code>VB.NET</code>的时候就见过这货了。JSP只能使用apache基金会的Tomcat。常见的搭配有:</p><table><thead><tr><th style="text-align:center">-</th><th style="text-align:center">-</th><th style="text-align:center">-</th></tr></thead><tbody><tr><td style="text-align:center">Linux PHP Apache MySql</td><td style="text-align:center">Unix JSP Tomcat Oracle</td><td style="text-align:center">Windows ASP.NET IIS ACCESS</td></tr></tbody></table><div align="center"><br><img src="https://file.ourfor.top/source/ourfor/idea.svg"><br></div><p>IDEA是JetBrain开发的一款编写java代码的IDE(集成开发环境),IDEA分为社区版和旗舰版，其中学生和教师可以通过教育邮箱注册后免费试用该公司开发的十余款IDE，其中比较著名的有<code>PyCharm</code>、<code>GoLand</code>、<code>Clion</code>等。接下来就是如何配置Tomcat了,主要分为以下步骤:</p><ul><li>填写正确的Tomcat路径，使得IDEA可以管理Tomcat</li><li>编辑项目的<code>RUN Configuration</code>,以便IDEA能正确的拷贝编译项目文件到<code>webapps</code>目录</li></ul><p>下面是<code>Tomcat</code>的目录结构:</p><table><thead><tr><th style="text-align:left">目录</th><th style="text-align:left">说明</th></tr></thead><tbody><tr><td style="text-align:left">/bin</td><td style="text-align:left">存放程序二进制文件以及一些编写好的启动和关闭的脚本</td></tr><tr><td style="text-align:left">/conf</td><td style="text-align:left">程序的配置文件目录</td></tr><tr><td style="text-align:left">/lib</td><td style="text-align:left">存放Tomcat服务器及所有Web程序都可以访问的库文件</td></tr><tr><td style="text-align:left">/logs</td><td style="text-align:left">Tomcat运行过程中生成的日志文件存放在这里</td></tr><tr><td style="text-align:left">/temp</td><td style="text-align:left">存放Tomcat产生的临时文件，系统重启后会清空该目录</td></tr><tr><td style="text-align:left">/webapps</td><td style="text-align:left">存放所有Web应用的目录</td></tr><tr><td style="text-align:left">/work</td><td style="text-align:left">存放jsp页面生成的Servlet源文件和字节码文件</td></tr></tbody></table><blockquote><p>其中webapps目录下的ROOT目录是Tomcat默认的Web应用，Tomcat监听的端口号可以再conf目录下的server.xml中修改元素Connector的port属性。</p></blockquote><p>鉴于<code>Tomcat</code>无法自动申请签发SSL证书以及设置代理等等，在实际运用中建议修改Tomcat默认端口，避免与Caddy冲突。同时用Caddy代理Tomcat的Web应用(貌似不会对性能产生较大的影响)</p><h2 id="开始编写JSP代码"><a href="#开始编写JSP代码" class="headerlink" title="开始编写JSP代码"></a>开始编写JSP代码</h2><figure class="image-box">                <img src="https://ws1.sinaimg.cn/large/005GQrpLgy1g0tencjdtjj31eq1lykbw.jpg" alt="新建项目" title class>                <p>新建项目</p>            </figure><p>打开我们的<code>IDEA Utimate</code>,新建个<code>Project</code>,选择<code>JAVA Enterprise</code>选项卡下的<code>Web Application</code>,默认版本为 <strong><em>4.0</em></strong> ,同时会默认勾选☑️<code>Create web.xml</code>,JDK的版本你配置好就行了，相信这并不是什么难事。这里我创建一个名为<code>helloServlet</code>的项目,展开我们的目录树，可以发现以下文件和目录:</p><figure class="image-box">                <img src="https://ws1.sinaimg.cn/large/005GQrpLgy1g0temcfcpwj32yo1o0kco.jpg" alt="练一练" title class>                <p>练一练</p>            </figure><table><thead><tr><th style="text-align:left">Dir</th><th style="text-align:left">Info</th></tr></thead><tbody><tr><td style="text-align:left">.idea</td><td style="text-align:left">存放一些IDEA中关于本项目的信息，可能包含版本控制信息(猜测)</td></tr><tr><td style="text-align:left">out</td><td style="text-align:left">IDEA将项目中的源文件编译后产生的字节码输出到该目录下</td></tr><tr><td style="text-align:left">src</td><td style="text-align:left">开发者存放java源代码的目录(比如Servlet源文件)</td></tr><tr><td style="text-align:left">web</td><td style="text-align:left">网站根目录，开发者编写的JSP源代码(.jsp)放在此目录下</td></tr><tr><td style="text-align:left">helloServlet.iml</td><td style="text-align:left">是一个xml文件，保存一些项目基本信息，有IDEA自动生成</td></tr></tbody></table><blockquote><ul><li>cellar 地窖</li><li>brew 酿酒(号称macOS缺失的包管理工具)</li></ul></blockquote><figure class="image-box">                <img src="https://ws1.sinaimg.cn/large/005GQrpLgy1g0tenrt6qzj32es1mub29.jpg" alt="brew安装tomcat" title class>                <p>brew安装tomcat</p>            </figure><p>点击顶部菜单的<code>RUN</code>选项卡选择<code>Edit Configurations</code>, 在打开的窗口中选择左上角的<code>+</code>, 在<code>Add New Configuration</code>中依次选择<code>Tomcat Server =&gt; Local</code>在Server中，我们点击<code>Application server</code>右侧的<code>CONFIGURE</code>,添加TomCat程序目录。注意，确保所填目录为<code>bin</code>目录的上一级(父目录).</p><p>在macOS中使用brew安装的tomcat安装在<code>/usr/local/Cellar/tomcat/9.0.16/libexec</code>目录中，而这个目录在finder中无法直接选择这个路径。我们可以创建软链接都宿主目录下。</p><figure class="image-box">                <img src="https://ws1.sinaimg.cn/large/005GQrpLgy1g0teoj4s9pj32es1mu7wh.jpg" alt="Tomcat目录添加软链接" title class>                <p>Tomcat目录添加软链接</p>            </figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ln -s /usr/<span class="built_in">local</span>/Cellar/tomcat/9.0.16/libexec ~/TomCatHome</span><br><span class="line">ln -s /usr/<span class="built_in">local</span>/Cellar/tomcat/9.0.16/libexec/webapps ~/Desktop/webapps</span><br></pre></td></tr></table></figure><p>顺带提一句<code>brew service</code>管理的tomcat位于<code>/usr/local/opt/tomcat/libexec</code>, 所以这个目录也是可以的。</p><blockquote><p>约定: 下面使用${Project_Name}来表示我们的项目名，使用${TomCatHome}来表示我们的Tomcat安装的完整路径</p></blockquote><figure class="image-box">                <img src="https://ws1.sinaimg.cn/large/005GQrpLgy1g0tejaf84fj31tq17s7kx.jpg" alt="配置" title class>                <p>配置</p>            </figure><p>继续配置下面的。下方的<code>URL</code>填写<code>http:localhost:8080/${Project_Name}_war_exploded</code>,这是浏览器在第一次部署启动tomcat打开URL.点击<code>Server</code>选项卡<code>Deployment</code>, 点击<code>+</code>添加<code>Artifact</code>文件，添加完成后，点击小铅笔修改，只需要修改<code>Output directory</code>其内容修改为<code>${TomCatHome}/webapps/${Project_Name}_war_exploded</code>. 这样，在IDEA中部署时，就会将编译好的文件拷贝到该目录下。<br><figure class="image-box">                <img src="https://ws1.sinaimg.cn/large/005GQrpLgy1g0teklkn5kj31r41gqas5.jpg" alt="Output directory" title class>                <p>Output directory</p>            </figure></p><figure class="image-box">                <img src="https://ws1.sinaimg.cn/large/005GQrpLgy1g0tepkmtykj32yo1o0wvu.jpg" alt="Servlet" title class>                <p>Servlet</p>            </figure>]]></content>
      
      
      <categories>
          
          <category> JSP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tomcat </tag>
            
            <tag> jsp </tag>
            
            <tag> idea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>年轻真好</title>
      <link href="/2019/02/27/beYoung/"/>
      <url>/2019/02/27/beYoung/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>告别初中母校已经有4年多了，初中的学校给我留下的印象并不多，但也是从初二开始我从学渣变成了学霸(在那时的那个班可以这样说吧)，这也成就了我能以优异的成绩考上县里面为数不多能够看得下去的高中，之所以<br>从初中开始算起，是因为在高中的重点班里面的学生都是初中母校同一个年级的，高中大家在一起成了同学，在初中那会都路人。也就彼此认识而已。<br><a id="more"></a><br>离开中学的学习环境已经一年半多了，我时常想起高中生活的点点滴滴，回味其中的酸甜苦辣，似乎总是有些悔恨或者遗憾。</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 感悟 </tag>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jsp学习小计</title>
      <link href="/2019/02/27/jsp_learning/"/>
      <url>/2019/02/27/jsp_learning/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>初学jsp，遇到不少问题，顺带记录📝一下，以免下次再遇到不知道怎么解决。jsp的功能真的是强大啊，我也想写出整套网站来，做一条龙服务里的一条龙。<br><a id="more"></a></p><ul><li>Windows下面安装<code>Tomcat</code>出现控制台乱码<blockquote><p>Tomcat: 9.0.16<br>根本原因，tomcat 输出的东西，与cmd控制台或者IDE控制台编码不一致。</p></blockquote></li></ul><p>误区： 修改 <code>JAVA_OPTS   -Dfile.encoding=GBK</code>。 原因：影响范围太大。<br>应修改tomcat输出内容的编码，<code>%CATALINA_HOME%/conf/logging.properties</code><br>9.0.14版本比9.0.12版本多了如下代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java.util.logging.ConsoleHandler.encoding = UTF-8</span><br></pre></td></tr></table></figure></p><p>删除：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#java.util.logging.ConsoleHandler.encoding = UTF-8</span><br></pre></td></tr></table></figure></p><p>或者改成和控制台一致的编码比如GBK<br>参考<a href="https://blog.csdn.net/colcool/article/details/85180935" target="_blank" rel="noopener">原文</a></p><hr><ul><li>网页中文乱码：<br>在jsp文件head标签中贴上:<figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> contentType=<span class="string">"text/html"</span>%&gt;</span><br><span class="line">&lt;%<span class="meta">@page</span> pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><br><span class="line">&lt;% request.setCharacterEncoding (<span class="string">"UTF-8"</span>);%&gt;</span><br><span class="line">&lt;% response.setCharacterEncoding (<span class="string">"UTF-8"</span>); %&gt;</span><br></pre></td></tr></table></figure></li></ul><p>同时最好将<code>tomcat配置文件目录下的server.xml</code>内修改对应字段为:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"8080"</span> <span class="attr">protocol</span>=<span class="string">"HTTP/1.1"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">connectionTimeout</span>=<span class="string">"20000"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">redirectPort</span>=<span class="string">"8443"</span></span></span><br><span class="line"><span class="tag">               <span class="attr">URIEncoding</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br></pre></td></tr></table></figure></p><hr><ul><li>IDEA部署到远程tomcat<br>需要在<code>catalina.sh</code>里面添加:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># IDEA Tomcat</span></span><br><span class="line">CATALINA_OPTS=<span class="string">"-Dcom.sun.management.jmxremote</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.port=1099</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.rmi.port=1099</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.ssl=false</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.authenticate=false</span></span><br><span class="line"><span class="string">-Djava.rmi.server.hostname=ip.ourfor.top</span></span><br><span class="line"><span class="string">-agentlib:jdwp=transport=dt_socket,address=15833,suspend=n,server=y"</span></span><br><span class="line"><span class="built_in">export</span> CATALINA_OPTS</span><br></pre></td></tr></table></figure></li></ul><p>如果出现:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">15:41Error running &apos;Tomcat remote&apos;</span><br><span class="line">Unable to connect to the ip.ourfor.top:1099, reason:</span><br><span class="line">java.rmi.ConnectException: Connection refused to host: ip.ourfor.top; nested exception is: </span><br><span class="line">java.net.ConnectException: Connection refused (Connection refused)</span><br></pre></td></tr></table></figure></p><p>注意添加:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-Dcom.sun.management.jmxremote.rmi.port=1099</span><br></pre></td></tr></table></figure></p><p>如果使用<code>yum</code>或者<code>dnf</code>安装<code>tomcat</code>，则没有<code>catalina.sh</code>这个文件，所以我们可以编辑<code>/etc/tomcat/conf.d</code>里面的文件.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">touch jmx.conf    <span class="comment">#只有.conf文件会被tomcat读取</span></span><br><span class="line">vim jmx.conf    <span class="comment">#编辑文件</span></span><br></pre></td></tr></table></figure><p>由于这个文件被当做shell命令参数执行，所以我们需要转义回车字符，那么我们添加的配置文件为：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">CATALINA_OPTS=<span class="string">"-Dcom.sun.management.jmxremote \</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.port=1099 \</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.rmi.port=1099 \</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.ssl=false \</span></span><br><span class="line"><span class="string">-Dcom.sun.management.jmxremote.authenticate=false \</span></span><br><span class="line"><span class="string">-Djava.rmi.server.hostname=ip.ourfor.top \</span></span><br><span class="line"><span class="string">-agentlib:jdwp=transport=dt_socket,address=15833,suspend=n,server=y"</span></span><br></pre></td></tr></table></figure></p><ul><li>fedora安装完整tomcat:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install tomcat-webapps tomcat-admin-webapps tomcat -y</span><br></pre></td></tr></table></figure></li></ul><p>查看安装路径:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -ql tomcat |more</span><br></pre></td></tr></table></figure></p><p>安装路径及其映射:<br><img width="1562" alt="屏幕快照 2019-03-10 下午3 56 09" src="https://user-images.githubusercontent.com/33711476/54082238-1677bf00-434d-11e9-8609-2c4b1fb1c956.png"></p><ul><li><p>开启Tomcat热加载<br>修改<code>context.xml</code> 设置<code>autoDeploy=true</code>, <code>reloadable=true</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">19 &lt;Context reloadable=<span class="string">"true"</span> autoDeploy=<span class="string">"true"</span>&gt;</span><br><span class="line">20</span><br><span class="line">21     &lt;!-- Default <span class="built_in">set</span> of monitored resources. If one of these changes, the    --&gt;</span><br><span class="line">22     &lt;!-- web application will be reloaded.                                   --&gt;</span><br><span class="line">23     &lt;WatchedResource&gt;WEB-INF/web.xml&lt;/WatchedResource&gt;</span><br><span class="line">24     &lt;WatchedResource&gt;WEB-INF/tomcat-web.xml&lt;/WatchedResource&gt;</span><br><span class="line">25     &lt;WatchedResource&gt;<span class="variable">$&#123;catalina.base&#125;</span>/conf/web.xml&lt;/WatchedResource&gt;</span><br><span class="line">26</span><br><span class="line">27     &lt;!-- Uncomment this to <span class="built_in">disable</span> session persistence across Tomcat restarts --&gt;</span><br><span class="line">28     &lt;!--</span><br><span class="line">29     &lt;Manager pathname=<span class="string">""</span> /&gt;</span><br><span class="line">30     --&gt;</span><br><span class="line">31 &lt;/Context&gt;</span><br></pre></td></tr></table></figure></li><li><p>使用JavaMail发送邮件是注意</p></li></ul><ol><li>使用网易邮箱遇到以下错误<code>553 Mail from must equal authorized user</code></li></ol><p>解决: 发信人地址必须是当前登录邮箱的认证用户地址<br>message.setFrom(new InternetAddress(sender));</p><ol start="2"><li>一般的mail<br>设置</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">String mailServer = <span class="string">"smtp.126.com"</span>;</span><br><span class="line">Properties pro = <span class="keyword">new</span> Properties();</span><br><span class="line">pro.put(<span class="string">"mail.smtp.host"</span>,mailServer);</span><br><span class="line">pro.put(<span class="string">"mail.smtp.auth"</span>,<span class="string">"true"</span>);</span><br><span class="line">pro.put(<span class="string">"mail.smtp.ssl.enable"</span>,<span class="keyword">true</span>);</span><br><span class="line">pro.put(<span class="string">"mail.smtp.port"</span>,<span class="string">"465"</span>);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JSP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tomcat </tag>
            
            <tag> jsp </tag>
            
            <tag> idea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>风景这边独好</title>
      <link href="/2019/02/13/life-enjoy/"/>
      <url>/2019/02/13/life-enjoy/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>转眼间，大学已经过去一年半了，这一年半里似乎我自己都说不出自己干了什么，没有什么事在我的脑海里留下深刻的影响，看在<a id="mainKeywords">窗外的风景</a>，在看看整理久坐在电脑💻前的我，整日与手机📱为伍，书桌上的依旧是这3本书<a id="more"></a>:</p><ul><li>图说天下的《全球最美的100个地方》</li><li>《Python编程 从零基础到项目实战》</li><li>《计算机算法设计与分析》</li></ul><p>寒假回到家🏠，也没有好好的出去走走，看看外面的风景，每天睡到😴9点钟才起，回想起，这个寒假，刚开始在学<code>python</code>，之后又去用<code>vb.net</code>写阅读软件，再到而今的<code>html5 + css3</code>，学什么东西都是学得这么半生不熟。设计模式搞了一半又暂时不想学了。小说也没得兴趣看下去了，本该好好生活，却过成了这样，每天都感觉状态不佳，我不禁思考，什么才是好的生活，还记得高中学过的课文，在郁达夫的《故都的秋》中:</p><p><blockquote class="normal">不逢北国之秋，已将近十余年了。在南方每年到了秋天，总要想起陶然亭的芦花，钓鱼台的柳影，西山的虫唱，玉泉的夜月，潭柘寺的钟声。在北平即使不出门去罢，就是在皇城人海之中，租人家一椽破屋来住着，早晨起来，泡一碗浓茶、向院子一坐，你也能看得到很高很高的碧绿的天色，听得到青天下驯鸽的飞声。从槐树叶底，朝东细数着一丝一丝漏下来的日光，或在破壁腰中，静对着象喇叭似的牵牛花（朝荣）的蓝朵，自然而然地也能够感觉到十分的秋意。说到了牵牛花，我以为以蓝色或白色者为佳，紫黑色次之，淡红色最下。最好，还要在牵牛花底，教长着几根疏疏落落的尖细且长的秋草，使作陪衬。<br></blockquote><br>这么美的画面，让我想起了小的时候，大概能描绘出这样的画面，写出这样的文字，才叫懂得生活吧。</p><p>小的时候，每逢天气阴沉，我都会在家里🏠的葡萄树🍇树下，用几根树枝和一个瓦片搭一个简陋的小亭子，总是想着让这些小虫子在这里面避雨，也曾在自家的沙堆里面挖出一个很深的洞，在洞口用树枝和树叶铺好，再用一层沙子盖住，洞🕳里面往往放一些玩具，大多是小玩偶之类的。夏日里后山上抓蚱蜢、抓螳螂，在小溪中抓鱼、抓螃蟹。在田间抓青蛙🐸，在家门口的树下面挖蝉的幼虫。还记得在2008年大雪的时候，在南方冬天下大雪的是很难遇到的，家里做了一个雪橇，于是我们兄弟姐妹几个就整天在村子里游荡。</p><p>小学，每逢周末，家人不在家，我们就偷偷在家里玩，那时候伯父带回来很多陶瓷做的杯子，我就用来养蚂蚁🐜，先在杯子里面放一层沙子，再用一层泥巴固定住，抓蚂蚁的方法就是用线绑住一只弄死的昆虫，把它放在一只出来觅食的小蚂蚁不远的地方，这只小蚂蚁发现了之后，搬不动，就会回蚂蚁窝里叫帮手，一大堆蚂蚁在这只蚂蚁的带领下，有条不紊的向食物前进。这时候聚集的蚂蚁多了，我就拉起细线，把昆虫放到杯子里面，自然昆虫上面的蚂蚁就到了杯子里面来了。这蚂蚁自然是不安分的，到处在出路，沿着杯口内壁还是爬得出来的，我也没啥办法，开始想着用点滑动的东西防止它们爬出来，后来想着，在杯子内壁涂一圈牙膏，效果不错，这牙膏有点黏，所以小蚂蚁，一放上去，就先下来。没有蚁后这些小蚂蚁活不了多久，我开始还盼望着它们能在这个杯子里面的小生态系统里面生存下去，挖洞穴、繁衍后代，每次都活不了几天就死了。<br>要说活的最久的要数那几条鱼了，基本不用喂东西，<br><figure class="image-box">                <img src="http://ww1.sinaimg.cn/large/005GQrpLgy1g04snz07swj30sw0loq5n.jpg" alt="挺惹人喜欢的" title class>                <p>挺惹人喜欢的</p>            </figure><br><figure class="image-box">                <img src="http://ww1.sinaimg.cn/large/005GQrpLgy1g04sxqrxydj30sw0load2.jpg" alt="叉尾斗鱼" title class>                <p>叉尾斗鱼</p>            </figure><br>那时候一道南风天，地面就湿，天气还不错，最主要的是那时候的心境好，也是正月的时候，伯父抓回来的鱼🐟，我拿了几条放在瓶子里面养着。这鱼不用喂东西的，好像叫zaigongbi，其实我也不知道该给它吃什么东西，有的时候挖几条蚯蚓给它吃，有的时候饿了几个星期，一只小蜘蛛🕷掉下去，都会被它吃了，这种鱼是长不大的，最后，大冬天的，我把雪❄️弄了进去，后来就都浮白肚子了。😁😁。</p><style>    .dplayer-danloading {        visibility:hidden;    }</style><div id="dplayer9" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer9"),"theme":"#FADFA3","preload":"none","video":{"url":"https://file.ourfor.top/source/video/%E5%8F%89%E5%B0%BE%E6%96%97%E9%B1%BC_%E7%99%BE%E5%BA%A6%E7%99%BE%E7%A7%91.mp4","pic":"http://ww1.sinaimg.cn/large/005GQrpLgy1g04tg35ogdj30c0087afx.jpg"},"danmaku":{"id":"9E2E3368B56CDBB4","api":"http://dplayer.daoapp.io"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script>]]></content>
      
      
      
        <tags>
            
            <tag> 感悟 </tag>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>oh-my-zsh+Tmux打造Linux最强Terminal</title>
      <link href="/2019/01/26/Oh-my-zsh-powerlevel9k/"/>
      <url>/2019/01/26/Oh-my-zsh-powerlevel9k/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>玩Linux那个不用终端的？<br><a id="more"></a><br><!--https://ws1.sinaimg.cn/large/005GQrpLly1g0xgdc70smj32rw1s2hdt.jpgws1.sinaimg.cn/large/005GQrpLgy1fzk98zjkg2j34g02yo1l1.jpg--></p><p align="center"><a>其实我压根不用Linux🤣</a></p><figure class="image-box">                <img src="http://wx3.sinaimg.cn/large/005GQrpLgy1fzitlzmehzj31cp0u07wi.jpg" alt title class>                <p></p>            </figure><p>工具原料:</p><ul><li style="list-style: none"><input type="checkbox" checked> <a href="https://www.hyper.is/" target="_blank" rel="noopener">Hyper</a></li><li style="list-style: none"><input type="checkbox" checked> <a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="noopener">oh-my-zsh</a></li><li style="list-style: none"><input type="checkbox" checked> <a href="https://github.com/tmux/tmux" target="_blank" rel="noopener">tmux</a> </li></ul><p>演示操作系统:</p><ul><li style="list-style: none"><input type="checkbox" checked> Fedora 29</li></ul><hr><h3 id="step-1"><a href="#step-1" class="headerlink" title="step 1"></a>step 1</h3><ul><li>安装<code>zsh</code>、<code>tmux</code>、<code>neofetch</code>、<code>oh-my-zsh</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install -y zsh tmux neofetch git curl vim</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>"</span></span><br></pre></td></tr></table></figure><ul><li>安装<code>powerlevel9k</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/bhilburn/powerlevel9k.git ~/.oh-my-zsh/custom/themes/powerlevel9k</span><br></pre></td></tr></table></figure></li></ul><h3 id="step-2"><a href="#step-2" class="headerlink" title="step 2"></a>step 2</h3><ul><li>更改<code>oh-my-zsh</code>主题<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.zshrc</span><br></pre></td></tr></table></figure></li></ul><p>找到<code>ZSH_THEME=&quot;robbyrussell&quot;</code>改为<code>ZSH_THEME=&quot;powerlevel9k/powerlevel9k&quot;</code>,之后保存，执行<code>source ~/.zshrc</code></p><ul><li>安装<code>awesome-terminal-fonts</code>字体<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/gabrielelana/awesome-terminal-fonts.git</span><br><span class="line"><span class="built_in">cd</span> awesome-terminal-fonts</span><br><span class="line">./install.sh</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'source ~/.fonts/*.sh'</span> &gt;&gt; ~/.zshrc</span><br><span class="line">cp ./config/10-symbols.conf ~/.config/fontconfig/conf.d</span><br></pre></td></tr></table></figure></li></ul><p>在<code>oh-my-zsh</code>的配置文件中添加<code>POWERLEVEL9K_MODE=&#39;awesome-fontconfig&#39;</code>和<code>source ~/.fonts/*.sh</code><br>配置文件看起来像这样:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POWERLEVEL9K_MODE=<span class="string">'awesome-fontconfig'</span></span><br><span class="line"><span class="built_in">source</span> ~/.fonts/*.sh</span><br><span class="line">ZSH_THEME=<span class="string">"powerlevel9k/powerlevel9k"</span></span><br></pre></td></tr></table></figure></p><ul><li>安装<code>powerline</code>字体,以普通用户身份执行，不然终端程序<code>首选项</code>里面设置不了<code>字体</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install powerline-fonts</span><br></pre></td></tr></table></figure></li></ul><p>或者通过下面命令安装:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># clone</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/powerline/fonts.git --depth=1</span><br><span class="line"><span class="comment"># install</span></span><br><span class="line"><span class="built_in">cd</span> fonts</span><br><span class="line">./install.sh</span><br><span class="line"><span class="comment"># clean-up a bit</span></span><br><span class="line"><span class="built_in">cd</span> ..</span><br><span class="line">rm -rf fonts</span><br></pre></td></tr></table></figure></p><p>终端程序<code>编辑-首选项</code>里面更改字体，选择有<code>for powerline</code>字眼的字体。</p><figure class="image-box">                <img src="https://ws1.sinaimg.cn/large/005GQrpLgy1fzk9yh85z3j30uy0ljn01.jpg" alt="还可以！" title class>                <p>还可以！</p>            </figure>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> oh-my-zsh </tag>
            
            <tag> powerlevel9k </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用软件</title>
      <link href="/2019/01/26/Linux-software/"/>
      <url>/2019/01/26/Linux-software/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>效率,效率！！！<br><a id="more"></a><br><!--ws1.sinaimg.cn/large/005GQrpLgy1fzk9cucq73j33aj1uob2a.jpghttps://ws1.sinaimg.cn/large/005GQrpLly1g0xgdb77xzj32kd1xaqv5.jpg--></p><p>一些好用的软件可以极大的提高我们的效率。为加快下载速度，下面安装链接均位于我个人的服务器(下面👇链接为官网链接)</p><figure class="image-box">                <img src="https://user-images.githubusercontent.com/33711476/51728705-23e22e00-20ac-11e9-9c16-5fa86d4e2bab.jpg" alt="what" title class>                <p>what</p>            </figure><h2 id="媒体播放器"><a href="#媒体播放器" class="headerlink" title="媒体播放器"></a>媒体播放器</h2><ul><li><a href="https://www.videolan.org/" target="_blank" rel="noopener">VLC</a> 功能强大的媒体播放器</li><li><a href="https://music.163.com/" target="_blank" rel="noopener">网易云音乐</a> 在线的网络媒体播放器</li></ul><h2 id="社交通讯"><a href="#社交通讯" class="headerlink" title="社交通讯"></a>社交通讯</h2><ul><li><a href="https://telegram.org/" target="_blank" rel="noopener">Telegram</a> 安全、高效、自由的即时通讯工具</li></ul><h2 id="效率办公"><a href="#效率办公" class="headerlink" title="效率办公"></a>效率办公</h2><ul><li><a href="https://www.libreoffice.org/" target="_blank" rel="noopener">LibreOffice</a> 开源的文档编辑器</li><li><a href="https://mega.nz/" target="_blank" rel="noopener">Mega</a> 别提什么百度云，这东西良心多了</li></ul><h2 id="系统工具"><a href="#系统工具" class="headerlink" title="系统工具"></a>系统工具</h2><ul><li><a href="https://www.balena.io/etcher/" target="_blank" rel="noopener">Etcher</a> 烧写镜像的gui客户端</li><li><a href>Chrome</a> 上网、前端必备</li><li><a href="https://www.teamviewer.com/cn/" target="_blank" rel="noopener">Teamviewer</a> 远程协助</li><li><a href="https://www.hyper.is/" target="_blank" rel="noopener">Hyper</a> 简洁美观强大的第三方终端程序</li><li><a href="https://www.typora.io/" target="_blank" rel="noopener">Typora</a> 新手必备的markdown编辑器</li></ul><h2 id="编程开发"><a href="#编程开发" class="headerlink" title="编程开发"></a>编程开发</h2><ul><li><a href="https://www.navicat.com/" target="_blank" rel="noopener">Navicat</a> 操作数据库的软件</li><li><a href="https://www.jetbrains.com/" target="_blank" rel="noopener">JetBrains</a> JetBains的IDE都很好用</li><li><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">Visual Studio Code</a> 插件丰富、可配置IDE的文本编辑器</li><li><a href="https://www.sublimetext.com/" target="_blank" rel="noopener">Sublime Text 3</a> 轻量级的文本编辑器</li></ul><h2 id="Gnome桌面插件"><a href="#Gnome桌面插件" class="headerlink" title="Gnome桌面插件"></a>Gnome桌面插件</h2><blockquote><p>Gnome桌面插件，chrome安装插件好之后可以直接在Gnome<a href="https://extensions.gnome.org/" target="_blank" rel="noopener">官方插件</a>网站点击应用，首先我们得给浏览器安装拓展插件:</p></blockquote><ul><li style="list-style: none"><input type="checkbox" checked> chrome安装<a href="https://chrome.google.com/webstore/detail/gnome-shell-integration/gphhapmejobijbbhgpjhcjognlahblep" target="_blank" rel="noopener">附加组件</a></li><li style="list-style: none"><input type="checkbox" checked> firefox安装<a href="https://addons.mozilla.org/en/firefox/addon/gnome-shell-integration/" target="_blank" rel="noopener">附加组件</a></li></ul><hr><p>下面是一些好用的Gnome插件:</p><ul><li>Backside 自动更换背景</li><li>Caffeine 保持亮屏</li><li>Clipboard indicator 剪切板管理</li><li>Dash to dock 移动dock栏的位置</li><li>Dynamic panel transparency 状态栏透明化</li><li>Do not disturb 勿扰模式</li><li>Gno-menu 添加开始菜单</li><li>Show desktop button 显示桌面按键 </li></ul><p><img src="https://ws1.sinaimg.cn/large/005GQrpLgy1fzk9lepatlj31eo15o7et.jpg" alt="Fedora 29"></p><h3 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h3><blockquote><p>Fedora下面安装离线软件包，打开<code>Terminal</code>，以<code>root</code>身份登录，或者使用<code>sudo</code>提权。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install &lt;安装包路径&gt;(可以直接将文件拖入终端)</span><br></pre></td></tr></table></figure></p></blockquote><p>e.g:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dnf install /home/sagit/telegram.rpm</span><br><span class="line">or</span><br><span class="line">sudo dnf install /home/sagit/telegram.rpm</span><br></pre></td></tr></table></figure></p><p>其实我是个云☁️玩家，一切步骤靠脑补。🙈</p><p>当然，从网络安装也是可以的:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dnf install https://file.ourfor.top/linux/software/teamviewer.x86_64.rpm -y</span><br></pre></td></tr></table></figure></p><p>参数<code>-y</code>表示不在提醒是否安装</p><p>我们先来设置下<code>root</code>用户的密码:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd root  <span class="comment">#接下来输入当前用户密码，然后它会让你设置root密码</span></span><br></pre></td></tr></table></figure></p><p>安装<code>VLC</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">su  - </span><br><span class="line">dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm</span><br><span class="line">dnf install vlc</span><br><span class="line">dnf install python-vlc npapi-vlc   <span class="comment">#（optionals）</span></span><br></pre></td></tr></table></figure></p><p>安装<code>Teamviewer</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install -y https://file.ourfor.top/linux/software/teamviewer.x86_64.rpm</span><br></pre></td></tr></table></figure></p><p>安装<code>Chrome</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install -y https://file.ourfor.top/linux/software/google-chrome-stable_current_x86_64.rpm</span><br></pre></td></tr></table></figure></p><p>如果chrome使用有些卡顿，可以在<code>设置-高级</code>里面关闭<code>硬件加速</code></p><p>安装<code>Telegram</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mkdir ~/Telegram</span><br><span class="line"><span class="built_in">cd</span> ~/Telegram</span><br><span class="line">wget https://file.ourfor.top/linux/software/Telegram/Telegram</span><br><span class="line">wget https://file.ourfor.top/linux/software/Telegram/Updater</span><br><span class="line">chmod +x Telegram Updater</span><br><span class="line">./Telegram</span><br></pre></td></tr></table></figure></p><p>稍等下它就会自动添加快捷方式<br>如果没有<code>科学上网</code>,您可能无法使用这个 <strong><em>自由安全</em></strong> 著称的聊天软件,私聊我,我可以提供我服务器搭建的<code>Telegram代理</code>🙊</p><p>安装<code>Hyper</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install -y https://file.ourfor.top/linux/software/hyper.rpm</span><br></pre></td></tr></table></figure></p><p>安装<code>Sublime Text 3</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo rpm -v --import https://download.sublimetext.com/sublimehq-rpm-pub.gpg</span><br><span class="line">sudo dnf config-manager --add-repo https://download.sublimetext.com/rpm/stable/x86_64/sublime-text.repo</span><br><span class="line">sudo dnf install sublime-text</span><br></pre></td></tr></table></figure></p><p>安装<code>Visual Studio Code</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo rpm --import https://packages.microsoft.com/keys/microsoft.asc</span><br><span class="line">sudo sh -c <span class="string">'echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" &gt; /etc/yum.repos.d/vscode.repo'</span></span><br><span class="line">dnf check-update</span><br><span class="line">sudo dnf install code</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://ws1.sinaimg.cn/large/005GQrpLgy1fzka04mblnj31hc0u0hdu.jpg" alt="这些够了" title class>                <p>这些够了</p>            </figure>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> software </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fedora 29管理防火墙</title>
      <link href="/2019/01/26/Fedora-Firewalld/"/>
      <url>/2019/01/26/Fedora-Firewalld/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>服务器最重要的事情之一就是端口啦<br><a id="more"></a></p><p>管理防火墙，我们主要用于打开端口，管理端口</p><h1 id="打开和关闭端口"><a href="#打开和关闭端口" class="headerlink" title="打开和关闭端口"></a>打开和关闭端口</h1><p>Fedora 29使用的是<code>Firewalld</code>来管理防火墙的，它的官网上面有详细的使用<a href="https://firewalld.org/documentation/" target="_blank" rel="noopener">文档</a><br>而我更喜欢使用配置文件来添加服务的方式来管理端口。打开一个端口主要分为以下步骤:</p><ul><li>拷贝并修改配置文件<ul><li>主要是<code>名称</code>和<code>端口</code></li></ul></li><li>添加服务<ul><li>从文件添加服务</li></ul></li><li>刷新防火墙规则<ul><li>激活生效的区域</li><li>刷新防火墙规则</li></ul></li><li>验证<code>端口</code>是否打开</li></ul><p>首先，我们来查看当前系统生效的是哪个区域，<code>cat /etc/firewalld/firewalld.conf | grep &quot;DefaultZone&quot;</code>,默认状态下是<code>public</code>。下面我们开始在<code>public</code>区域添加端口服务。我们的配置文件可以放在这两个路径<code>/etc/firewalld/services</code>和路径<code>/usr/lib/firewalld/services</code>,官方推荐放在<code>/usr/lib/firewalld/services</code>,好处是<code>the admin or user is able to modify the service and that he could go back to the original service easily by loading the defaults of the service.</code></p><p>那好，我们就放在这个目录下面👇:<br>比如我要添加一个名为<code>OhMyG</code>的一个服务，它将负责打开<code>8467</code>端口，首先我们来看看这个端口的占用情况，使用<code>lsof -i :8467</code>查看。可以看到这个端口是没有在使用的，我们拿端口<code>22</code>(我此时正通过ssh连接服务器),它显示了如下的结果:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsof -i :22</span><br></pre></td></tr></table></figure></p><p>显示结果:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">COMMAND   PID USER   FD   TYPE DEVICE SIZE/OFF NODE NAME</span><br><span class="line">sshd     1114 root    5u  IPv4  24205      0t0  TCP *:ssh (LISTEN)</span><br><span class="line">sshd     1114 root    7u  IPv6  24216      0t0  TCP *:ssh (LISTEN)</span><br></pre></td></tr></table></figure></p><p>外部通过<code>telnet</code>来查看<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet 192.168.18.136 22</span><br></pre></td></tr></table></figure></p><p>显示结果:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Trying 192.168.18.136...</span><br><span class="line">Connected to bogon.</span><br><span class="line">Escape character is &apos;^]&apos;.</span><br><span class="line">SSH-2.0-OpenSSH_7.9</span><br></pre></td></tr></table></figure></p><h3 id="拷贝文件"><a href="#拷贝文件" class="headerlink" title="拷贝文件"></a>拷贝文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /usr/lib/firewalld/services/https.xml /usr/lib/firewalld/services/OhMyG.xml</span><br></pre></td></tr></table></figure><p>我将<code>https.xml</code>里面的内容拷贝到<code>OhMyG.xml</code>里面。接下来我们要修改下这个文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /usr/lib/firewalld/services/OhMyG.xml</span><br></pre></td></tr></table></figure></p><p>我们来看看这个文件里面的内容:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;service&gt;</span><br><span class="line">  &lt;short&gt;Secure WWW (HTTPS)&lt;/short&gt;</span><br><span class="line">  &lt;description&gt;HTTPS is a modified HTTP used to serve Web pages when security is important. Examples are sites that require logins like stores or web mail. This option is not required <span class="keyword">for</span> viewing pages locally or developing Web pages. You need the httpd package installed <span class="keyword">for</span> this option to be useful.&lt;/description&gt;</span><br><span class="line">  &lt;port protocol=<span class="string">"tcp"</span> port=<span class="string">"443"</span>/&gt;</span><br><span class="line">&lt;/service&gt;</span><br></pre></td></tr></table></figure></p><h4 id="修改那些地方"><a href="#修改那些地方" class="headerlink" title="修改那些地方"></a>修改那些地方</h4><ul><li><code>short</code> 你随便起个名字就可以了</li><li><code>descriptions</code> 这是你对他的描述</li><li><code>protocol</code> 这个是控制方式，出站还是入站，我只是打开端口<code>tcp</code>没问题</li><li><code>port</code> 这就是我们要打开的端口</li></ul><p>修改后内容为:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;service&gt;</span><br><span class="line">  &lt;short&gt;OhMyG&lt;/short&gt;</span><br><span class="line">  &lt;description&gt;测试，打开端口 8467&lt;/description&gt;</span><br><span class="line">  &lt;port protocol=<span class="string">"tcp"</span> port=<span class="string">"8467"</span>/&gt;</span><br><span class="line">&lt;/service&gt;</span><br></pre></td></tr></table></figure></p><p>接下来，我们就要将<code>添加服务</code>了</p><h3 id="添加服务"><a href="#添加服务" class="headerlink" title="添加服务"></a>添加服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo firewall-cmd --zone=public --permanent --new-service-from-file=/usr/lib/firewalld/services/OhMyG.xml --name=OhMyG_s</span><br></pre></td></tr></table></figure><p>上面的命令表示我要永久添加服务<code>OhMyG_s</code>到<code>public</code>空间,这里我们不能使用<code>OhMyG</code>这个服务名了，因为这两个路径中有一个路径存在这个文件,所以我们得换个名字。</p><blockquote><p>执行如下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ls /etc/firewalld/services/OhMyG_s.xml</span><br></pre></td></tr></table></figure></p></blockquote><p>这个文件确实已经生成了，我们来看看，这个文件里面的内容和我们之前的文件里面的内容用什么异同。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo more /etc/firewalld/services/OhMyG_s.xml</span><br></pre></td></tr></table></figure></p><p>貌似什么异同，其中查看<code>public</code>空间的命令为:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --list-port</span><br></pre></td></tr></table></figure></p><ul><li>在运行环境中<code>添加服务</code><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo firewall-cmd --permanent --zone=public --add-service=OhMyG_s</span><br></pre></td></tr></table></figure></li></ul><p>我们接下来让防火墙重新<code>载入规则</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo firewall-cmd --reload</span><br></pre></td></tr></table></figure></p><p>接下我们用<code>telnet</code>来测试测试<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">telnet 192.168.18.136 8467</span><br></pre></td></tr></table></figure></p><p>结果为:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Trying 192.168.18.136...</span><br><span class="line">telnet: connect to address 192.168.18.136: Connection refused</span><br><span class="line">telnet: Unable to connect to remote host</span><br></pre></td></tr></table></figure></p><p>怎么会这样?<br>我们这个端口只是<code>打开</code>了，并没有软件占用这个端口，我们用<code>caddy</code>来占用一下这个端口<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install -y caddy</span><br><span class="line">caddy --port=8467</span><br></pre></td></tr></table></figure></p><p>再在外部执行，结果就变成这个样子了:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Trying 192.168.18.136...</span><br><span class="line">Connected to bogon.</span><br><span class="line">Escape character is <span class="string">'^]'</span>.</span><br></pre></td></tr></table></figure></p><p>查看<code>public</code>空间的服务:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --list-services</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://ws1.sinaimg.cn/large/005GQrpLgy1fzka2n5zcyj31hc0u0qv5.jpg" alt="还不错，虚拟机里面跑个，练练手" title class>                <p>还不错，虚拟机里面跑个，练练手</p>            </figure>]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> firewalld </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>观看网络电视直播的新姿势</title>
      <link href="/2019/01/21/Live/"/>
      <url>/2019/01/21/Live/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>不知道大家是怎么在电脑和手机上面观看电视直播的？说道<a id="mainKeywords">观看电视直播</a>，手机上面确实有不少软件，诸如<code>电视家</code>、<code>hdp直播</code>这些软件，这些软件原本就是为电视盒子开发的。<code>Windows</code>和<code>macOS</code>以及<code>Linux</code>这些个主流的<strong><em>X86</em></strong>平台都没什么好用的软件。<br><a id="more"></a></p><p>相信大家都有很多途径来观看电视直播，前不久为了看<code>知否</code>,我也是醉了，又是安装安卓模拟器，又是在网页上看看直播。当是这些个直播视频的画质也太差了，其次就是安卓模拟器上面能够设置的分辨率实在太少。想我这样的强迫症患者直呼受不了。当是为了看这个电视剧我也是忍了😂</p><ul><li>安卓模拟器+安卓TV上的软件(资源占用严重,画质同样差)</li><li>网页在线观看(画质差,卡顿严重)</li></ul><p>有没有好的解决方法呢?</p><p>我们知道其实在网页中在线播放也是需要一个直播的源的。可是我找到的网页在线播放的直播源倒是很流畅，可是画质实在太差了。不忍直视。有些高清的源又太卡了。<br><figure class="image-box">                <img src="https://ws1.sinaimg.cn/large/005GQrpLgy1fzedaf89vfj32yo1o0u11.jpg" alt="IINA播放器" title class>                <p>IINA播放器</p>            </figure><br>我们可以用搜索引擎搜索一下适合我们终端设备网络运营商的直播源。比如我家的宽带是<code>湖南联通</code>, 100M的宽带看一个高清的湖南卫视有点卡, 我就在网上搜索<code>湖南联通IPTV直播源</code>(IPTV就是交互式的网络电视),我找了一下最新的更新直播源。就是一堆网址。</p><figure class="image-box">                <img src="https://ws1.sinaimg.cn/large/005GQrpLgy1fzeddpilpjj32su1o8x6p.jpg" alt="湖南联通线路的直播源" title class>                <p>湖南联通线路的直播源</p>            </figure><p>我们用文本编辑器打开,直播源有很多协议的，这里我找的的是http协议的，可以看到这里是<code>m3u8</code>结尾的，并且跟了一些参数。复制它，接下来我们打开支持播放网络串流的播放器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">湖南卫视高清,http://119.39.133.90:6610/001/2/ch00000090990000001053/index.m3u8?IASHttpSessionId=&amp;m3u8_level=2&amp;virtualDomain=001.live_hls.zte.com&amp;ispcode=10002</span><br></pre></td></tr></table></figure><p>这里推荐一些强大的播放器：</p><ul><li><a href="https://www.videolan.org/" target="_blank" rel="noopener">VLC</a>(全平台)</li><li><a href="http://potplayer.daum.net/?lang=zh_CN" target="_blank" rel="noopener">PotPlayer</a>(仅Windows)</li><li><a href="https://www.iina.io/" target="_blank" rel="noopener">IINA</a>(仅macOS)</li></ul><p>下面以<code>VLC</code>为例，打开<code>VLC播放器</code>,找到<code>打开网络</code>或者<code>串流</code>,将我们的url粘贴上去打开就可以了。</p><figure class="image-box">                <img src="https://ws1.sinaimg.cn/large/005GQrpLgy1fzedm6j9rqj313o0syn5q.jpg" alt="VLC" title class>                <p>VLC</p>            </figure><p>当然也可以将整个url.txt的文件添加进去，这样就不用每次观看都添加网址了。</p>]]></content>
      
      
      <categories>
          
          <category> 直播源 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> live </tag>
            
            <tag> 📺电视直播 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>知否知否应是绿肥红瘦</title>
      <link href="/2018/12/27/soap-opera-%E7%9F%A5%E5%90%A6%E7%9F%A5%E5%90%A6/"/>
      <url>/2018/12/27/soap-opera-%E7%9F%A5%E5%90%A6%E7%9F%A5%E5%90%A6/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>为什么老是要在考试之前出这种好剧？<br><a id="more"></a></p><p>@card{</p><p></p><p class="poem" align="center"><br><strong>如梦令·昨夜雨疏风骤</strong><br></p><p></p><p></p><p class="people" align="center"><br>[宋] 李清照<br></p><p></p><div align="center"><br><em> 昨夜雨疏风骤，浓睡不消残酒<br><br>试问卷帘人，却道海棠依旧<br><br>知否，知否，应是绿肥红瘦</em><br></div><p><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer@1.10/dist/APlayer.min.css"></p><script src="https://cdn.jsdelivr.net/npm/aplayer@1.10/dist/APlayer.min.js"></script><div class="aplayer" data-id="13916141" data-server="kugou" data-type="album" data-listfolded="true"><br><br></div><script src="https://cdn.jsdelivr.net/npm/meting@1.2/dist/Meting.min.js"></script><p>}</p><blockquote><p>宣传片花</p></blockquote><div id="dplayer10" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer10"),"theme":"#FADFA3","loop":true,"preload":"none","video":{"url":"https://file.ourfor.top/source/soap_opera/video/%E3%80%8A%E7%9F%A5%E5%90%A6%E7%9F%A5%E5%90%A6%E5%BA%94%E6%98%AF%E7%BB%BF%E8%82%A5%E7%BA%A2%E7%98%A6%E3%80%8B%E7%BB%88%E6%9E%81%E7%89%87%E8%8A%B1%E9%85%B7%E7%87%83%E8%A7%86%E9%A2%91-%E4%BC%98%E8%B4%A8%E7%9F%AD%E8%8A%82%E7%9B%AE%E8%A7%86%E9%A2%91%E6%92%AD%E6%94%BE%E5%B9%B3%E5%8F%B0.mp4","pic":"https://wx2.sinaimg.cn/mw1024/006FsDz9ly1fyjy1ikft4j334022o4qs.jpg"},"danmaku":{"id":"9E2E3368B56CDBB4","api":"http://dplayer.daoapp.io"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><hr><h2 id="剧照"><a href="#剧照" class="headerlink" title="剧照"></a>剧照</h2><figure class="image-box">                <img src="//wx1.sinaimg.cn/mw1024/006FsDz9ly1fyjy1sgoygj334022o7wk.jpg" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="//wx4.sinaimg.cn/mw1024/006FsDz9ly1fyjy1ulf1kj334022ou0z.jpg" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="//wx1.sinaimg.cn/large/006FsDz9ly1fyl1u8vfmaj334022o1l0.jpg" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="//wx2.sinaimg.cn/mw1024/006FsDz9ly1fyjy1qc0b0j334022o1l0.jpg" alt title class>                <p></p>            </figure><blockquote class="normal"> 人一辈子都在高潮、低潮中浮沉，唯有庸碌的人，生活才如死水一般；或者要有极高的修养，方能廓然无累，真正地解脱。只要高潮不过分使你紧张，低潮不过分使你颓废就好了。—— 《傅雷家书》<br></blockquote><figure class="image-box">                <img src="//wx4.sinaimg.cn/large/006FsDz9ly1fyh6zfzqzwj334022oe84.jpg" alt="盛明兰" title class>                <p>盛明兰</p>            </figure><figure class="image-box">                <img src="//wx2.sinaimg.cn/large/006FsDz9ly1fyh6zht2gnj334022o1l1.jpg" alt="顾廷烨" title class>                <p>顾廷烨</p>            </figure><figure class="image-box">                <img src="//wx3.sinaimg.cn/large/006FsDz9ly1fyh6zk35ayj334022o1l1.jpg" alt="齐衡" title class>                <p>齐衡</p>            </figure><figure class="image-box">                <img src="//wx2.sinaimg.cn/large/006FsDz9ly1fyh6zm5aa1j334022onpg.jpg" alt="盛墨兰" title class>                <p>盛墨兰</p>            </figure><figure class="image-box">                <img src="//wx4.sinaimg.cn/large/006FsDz9ly1fyh6zo2ebgj334022o4qs.jpg" alt="盛如兰" title class>                <p>盛如兰</p>            </figure><h2 id="人物关系图"><a href="#人物关系图" class="headerlink" title="人物关系图:"></a>人物关系图:</h2><table class="table"><br>  <tr><br>   <td><figure class="image-box">                <img src="https://wx1.sinaimg.cn/large/006FsDz9ly1fys5iq2muvj31nr34je88.jpg" alt="盛家" title class>                <p>盛家</p>            </figure></td><br>   <td><figure class="image-box">                <img src="https://wx4.sinaimg.cn/large/006FsDz9ly1fys5iur53yj31nr23ekjp.jpg" alt="齐家" title class>                <p>齐家</p>            </figure></td><br>   <td><figure class="image-box">                <img src="https://wx4.sinaimg.cn/large/006FsDz9ly1fys5vkyzlpj31nr34je88.jpg" alt="顾家" title class>                <p>顾家</p>            </figure></td><br>  </tr><br></table><ul><li>追剧日历</li></ul><figure class="image-box">                <img src="https://wx4.sinaimg.cn/large/006FsDz9ly1fygwa2g77lj311g2971l1.jpg" alt="跨年😄" title class>                <p>跨年😄</p>            </figure>]]></content>
      
      
      
        <tags>
            
            <tag> 电视剧📺 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>OOP设计模式</title>
      <link href="/2018/12/23/UMLandDesignPattern/"/>
      <url>/2018/12/23/UMLandDesignPattern/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>常用的设计模式以及UML类图</p><a id="more"></a><h1 id="UML类图"><a href="#UML类图" class="headerlink" title="UML类图"></a>UML类图</h1><p>Java考试的内容实在太多了，今天先把各种了之间的关系复习一下。</p><blockquote><p>在所有的连线中，没有特殊图形的一端均表示线的开始，起始端是没有任何图形的。</p></blockquote><h2 id="依赖关系"><a href="#依赖关系" class="headerlink" title="依赖关系"></a>依赖关系</h2><ul><li>UML中表示方法:用一条带箭头的虚线连接两个类的UML图，其中结束端即箭头指向被依赖的类</li><li>定义: 如果一个类作为另一个类某个方法的返回值类型或者参数类型，那么这两个类就构成了依赖关系。</li></ul><p>例如: 台式电脑需要连接电源🔌供电(指电能而非机箱内的电源)才能启动，电源供电并不是台式电脑的属性(成员)，而是作为电脑💻启动这个方法不可或缺的条件。电脑和电能就构成了依赖关系。</p><p>Code of Computer:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Computer</span></span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> Switch;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">Boot</span><span class="params">(EPower e)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (e.state==<span class="keyword">true</span>)&amp;&amp;Switch?<span class="keyword">true</span>:<span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>Code of EPower:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EPower</span></span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> state;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://file.ourfor.top/study/JavaReview/UML/Rely.svg" alt="依赖关系" title class>                <p>依赖关系</p>            </figure><h2 id="关联关系"><a href="#关联关系" class="headerlink" title="关联关系"></a>关联关系</h2><p>记忆:依赖关系和关联关系都是结束端的箭头都是相同的，而关联是实线，<code>联</code> 的同音<code>连</code>为实线，并且实线较虚线有关系更强的意思。</p><ul><li>在UML类图中: 用带箭头的实线连接两个相互关联的类，其中箭头表示的结束段指向被关联的类</li><li>定义: 如果一个类声明的对象作为另一个类的数据成员(属性、成员变量)，那么这两个类之间就形成了关联关系。</li></ul><p>例如: CPU(中央处理器)作为计算机不可缺少的一部分，CPU就是计算机的属性。</p><p>Code of Cpu:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Cpu</span></span>&#123;</span><br><span class="line">   String structure;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Code of Computer:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Computer</span></span>&#123;</span><br><span class="line">    Cpu intel =  <span class="keyword">new</span> Cpu();</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">boot</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="https://file.ourfor.top/study/JavaReview/UML/Association.svg" alt="关联" title class>                <p>关联</p>            </figure><h2 id="泛化-继承-关系"><a href="#泛化-继承-关系" class="headerlink" title="泛化(继承)关系"></a>泛化(继承)关系</h2><ul><li>UML类图中，用一条实线加空心的三角形来表示继承关系，一个类继承另一个类，被继承的类叫父类或者基类，另一个叫子类或者派生类。用空心三角形指向父类</li></ul><p>例如: Stuent是人，有<code>人</code>的一切属性和行为，Student继承自父类Human</p><p>Code of Student:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Code of Human{</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Human</span></span>&#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Speak</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Hello"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="https://file.ourfor.top/study/JavaReview/UML/inherit.svg" alt="泛化" title class>                <p>泛化</p>            </figure><h2 id="实现关系"><a href="#实现关系" class="headerlink" title="实现关系"></a>实现关系</h2><ul><li>在UML图中用虚线和空心三角形连接接口和实现接口的类。虚线的终点端是它实现的接口。<br>例如: 笔记本是计算机的一种实现，只有有中央处理器，有输入输出设备就是一台计算机。</li></ul><p>Code of Computer:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Computer</span></span>&#123;</span><br><span class="line">    String Cpu=<span class="string">"x64"</span>;</span><br><span class="line">    String Input=<span class="string">"Keyboard"</span>;</span><br><span class="line">    String Output=<span class="string">"Monitor"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Run</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Code of Laptop:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Laptop</span> <span class="keyword">implements</span> <span class="title">Computer</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Run</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="https://file.ourfor.top/study/JavaReview/UML/Implements.svg" alt="实现" title class>                <p>实现</p>            </figure><h1 id="常见的设计模式"><a href="#常见的设计模式" class="headerlink" title="常见的设计模式"></a>常见的设计模式</h1><h2 id="简单工厂模式"><a href="#简单工厂模式" class="headerlink" title="简单工厂模式"></a>简单工厂模式</h2><h3 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h3><p>生产汽车🚘的工厂生产两种品牌的汽车，一种是宝马汽车，另一种汽车是🚗奥迪汽车。用户并不了解汽车是如何生产的，仅仅只是从工厂得到汽车。宝马汽车和奥迪汽车有相同的共性，都是汽车，均实现了汽车这个接口。</p><figure class="image-box">                <img src="https://file.ourfor.top/study/JavaReview/DesignPatterns/FactorySimple/FactorySimple.svg" alt="FactorySimple" title class>                <p>FactorySimple</p>            </figure><p>Car:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Run</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>AodCar:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AodCar</span> <span class="keyword">implements</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Run</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"奥迪汽车启动"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BmwCar:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BmwCar</span> <span class="keyword">implements</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Run</span><span class="params">()</span></span>&#123;</span><br><span class="line">      System.out.println(<span class="string">"宝马汽车启动"</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>FactorySimple:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FactorySimple</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Car <span class="title">Produce</span><span class="params">(String message)</span></span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(message)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"宝马"</span>: <span class="keyword">return</span> <span class="keyword">new</span> BmwCar();</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"奥迪"</span>: <span class="keyword">return</span> <span class="keyword">new</span> AodCar();</span><br><span class="line">            <span class="keyword">default</span>: <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Customer:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Customer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">        FactorySimple.Produce(<span class="string">"宝马"</span>).Run();</span><br><span class="line">        FactorySimple.Produce(<span class="string">"奥迪"</span>).Run();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="工厂方法模式"><a href="#工厂方法模式" class="headerlink" title="工厂方法模式"></a>工厂方法模式</h2><blockquote><p>开闭原则: 对拓展开放，对修改封闭. 一个软件的变化应该通过拓展来实现，而不是通过修改现有代码。</p></blockquote><h3 id="例子-1"><a href="#例子-1" class="headerlink" title="例子"></a>例子</h3><figure class="image-box">                <img src="https://file.ourfor.top/study/JavaReview/DesignPatterns/FactoryMethod/FactoryMethod.svg" alt="FactoryMethod" title class>                <p>FactoryMethod</p>            </figure><p>只需要将简单工厂方法中的工厂抽象为接口，分别实现宝马工厂和奥迪工厂，客户端实例化这两个工厂。</p><p>Factory:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Factory</span> </span>&#123;</span><br><span class="line">    <span class="function">Car <span class="title">Produce</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>BmwFactory:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BmwCar</span> <span class="keyword">implements</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Run</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"宝马汽车启动"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>AodFactory:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AodFactory</span> <span class="keyword">implements</span> <span class="title">Factory</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> Car <span class="title">Produce</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> AodCar();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:center">优点</th><th style="text-align:center">缺点</th></tr></thead><tbody><tr><td style="text-align:center">符合开闭原则和单一职责原则，拓展性比较强</td><td style="text-align:center">增加一个产品时，需要增加一个产品类和具体子工厂，给系统增加负担的同时，每种工厂生产一种产品，太过单一</td></tr></tbody></table><h2 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h2><ul><li>单例类只有一个实例，不能再外部被实例化</li><li>单例类必须自己创建自己的唯一实例</li><li>单例类必须给所有其他对象提供这一实例</li></ul><h3 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h3><p>不能通过无参构造函数在外部实例化(私有构造),如何限制只有一个?(类的静态成员只有一个副本)</p><ul><li>饿汉式(立即加载)<br>在类初始化时就构造好了一个静态对象供外部使用，除非系统重启，这个对象不会改变，所以本身就是线程安全的。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingleHunger</span> </span>&#123;</span><br><span class="line">    <span class="comment">//饿汉式（立即加载）在编译完成时完成实例化</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">SingleHunger</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SingleHunger single = <span class="keyword">new</span> SingleHunger();   <span class="comment">//利用静态成员只有一个副本的特点来构造单例模式。</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SingleHunger <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> single;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Info</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我是一个饿汉式的单例类的对象"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>懒汉式(延迟加载)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingleLazy</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">SingleLazy</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SingleLazy Single=<span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SingleLazy <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(Single==<span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="comment">// 1 2 3</span></span><br><span class="line">            <span class="keyword">synchronized</span>(SingleLazy.class)&#123;</span><br><span class="line">                <span class="keyword">if</span>(Single==<span class="keyword">null</span>)&#123;</span><br><span class="line">                    <span class="keyword">try</span>&#123;</span><br><span class="line">                        Thread.sleep(<span class="number">10</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">catch</span>(InterruptedException e)&#123;</span><br><span class="line">                        e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">                    Single = <span class="keyword">new</span> SingleLazy();</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Single;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Info</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"I am a single instance that made by the Lazy Single Class"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在多线程的情况下，这显然不是单例，这时候我们就需要将同步锁🔐加在合适的位置。</p><p><code>synchronized</code> 与 <code>static</code> 一起使用，同步当前类。</p><p>使用 <code>synchronized</code> 同步锁此种方式解决了多个实例对象的问题，但是该种方式的执行效率较低，提高 <code>sychronized</code> 的效率需要尽可能的缩小同步的范围。</p><p>静态内部类:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SingleInside</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">SingleInside</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">InSide</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> SingleInside Single = <span class="keyword">new</span> SingleInside();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> SingleInside <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> InSide.Single;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Info</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"I am a single instance that made by Static Class insige"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>优点：</p><ol><li>在内存中</li></ol><h2 id="外观模式"><a href="#外观模式" class="headerlink" title="外观模式"></a>外观模式</h2><h3 id="例子-2"><a href="#例子-2" class="headerlink" title="例子"></a>例子</h3><figure class="image-box">                <img src="https://file.ourfor.top/study/JavaReview/DesignPatterns/Facade/Facade.svg" alt="Facade" title class>                <p>Facade</p>            </figure><h2 id="职责链模式"><a href="#职责链模式" class="headerlink" title="职责链模式"></a>职责链模式</h2><blockquote><p>行为型模式：关注系统中对象之间的相互交互，通信与合作</p><ol><li>责任链(职责)模式: Chain of respon</li></ol></blockquote><h3 id="例子-3"><a href="#例子-3" class="headerlink" title="例子"></a>例子</h3><h2 id="策略模式"><a href="#策略模式" class="headerlink" title="策略模式"></a>策略模式</h2><h3 id="例子-4"><a href="#例子-4" class="headerlink" title="例子"></a>例子</h3><p>场景: 某个市场的销售人员，接到单后的报价策略:</p><ul><li>普通用户小批量报价</li><li>普通用户大批量报价</li><li>老用户小批量报价</li><li>老用户大批量报价</li></ul><blockquote><p>核心: 分离算法 选择实现</p></blockquote><p>这些策略构成一个算法族。</p><p>Strategy:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 某市场销售人员针对不同的情况实行不同的报价策略：</span></span><br><span class="line"><span class="comment"> * 1. 新用户小批量采购 不打折</span></span><br><span class="line"><span class="comment"> * 2. 新用户大批量采购 打八五折</span></span><br><span class="line"><span class="comment"> * 3. 老用户小批量采购 打八折</span></span><br><span class="line"><span class="comment"> * 4. 老用户大批量采购 打六五折</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Strategy</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">getPrice</span><span class="params">(<span class="keyword">double</span> price)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>NewCustomerFew:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 新用户小批量采购</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NewCustomerFew</span> <span class="keyword">implements</span> <span class="title">Strategy</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getPrice</span><span class="params">(<span class="keyword">double</span> price)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"不打折 "</span>+price);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>NewCustomerMany:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 新用户大批量采购</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NewCustomerMany</span> <span class="keyword">implements</span> <span class="title">Strategy</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getPrice</span><span class="params">(<span class="keyword">double</span> price)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"打八五折 "</span>+price * <span class="number">0.85</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>OldCustomerFew:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 老用户小批量采购</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OldCustomerFew</span> <span class="keyword">implements</span> <span class="title">Strategy</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getPrice</span><span class="params">(<span class="keyword">double</span> price)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"打八折 "</span>+price * <span class="number">0.8</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>OldCustomerMany:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 老用户大量采购</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OldCustomerMany</span> <span class="keyword">implements</span> <span class="title">Strategy</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getPrice</span><span class="params">(<span class="keyword">double</span> price)</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"打六五折 "</span>+price * <span class="number">0.65</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Client:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 分离算法 分离实现</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Client</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">        NewCustomerMany a = <span class="keyword">new</span> NewCustomerMany();</span><br><span class="line">        a.getPrice(<span class="number">998</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> uml </tag>
            
            <tag> Design Pattern </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小米6个性化</title>
      <link href="/2018/12/19/MI6_Optimization/"/>
      <url>/2018/12/19/MI6_Optimization/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a id="mainKeywords">随着MIUI10</a>第二版稳定版的发布，有些模块已经不再适用了，结合第一版使用过程中遇到的问题，重新制作模块修复部分bug。<strong>感谢</strong>🍑<a href="https://www.coolapk.com/" target="_blank" rel="noopener">酷安</a>基佬和<a href="http://www.miui.com/index.html" target="_blank" rel="noopener">MIUI论坛</a>网友的大力支持。<br><br><a href="https://github.com/ourfor/MI6_Optimization" target="_blank" rel="noopener"><strong>GitHub项目地址</strong></a><br><a id="more"></a></p><h1 id="MI6-Optimization"><a href="#MI6-Optimization" class="headerlink" title="MI6_Optimization"></a>MI6_Optimization</h1><p>MI6调教指南</p><h2 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h2><p>(部分图片暂时无法点击查看),可以前往<a href="https://sagit.ourfor.top" target="_blank" rel="noopener">官网</a>查看</p><table class="table"><br>  <tr><br><td><a data-fancybox="gallery" href="https://i.loli.net/2018/12/19/5c19cf47d2919.png" target="_blank" rel="noopener"><img src="https://i.loli.net/2018/12/19/5c19cf47d2919.png"></a></td><br><td><a data-fancybox="gallery" href="https://i.loli.net/2018/12/19/5c19cf47d2fb1.png" target="_blank" rel="noopener"><img src="https://i.loli.net/2018/12/19/5c19cf47d2fb1.png"></a></td><br><td><a data-fancybox="gallery" href="https://i.loli.net/2018/12/19/5c19cf48d7e73.png" target="_blank" rel="noopener"><img src="https://i.loli.net/2018/12/19/5c19cf48d7e73.png"></a></td><br>  </tr><br>  <tr><br><td><a data-fancybox="gallery" href="https://i.loli.net/2018/12/19/5c19cf4867fa1.png" target="_blank" rel="noopener"><img src="https://i.loli.net/2018/12/19/5c19cf4867fa1.png"></a></td><br><td><a data-fancybox="gallery" href="https://i.loli.net/2018/12/21/5c1ce27e27e27.png" target="_blank" rel="noopener"><img src="https://i.loli.net/2018/12/21/5c1ce27e27e27.png"></a></td><br><td><a data-fancybox="gallery" href="https://i.loli.net/2018/12/19/5c19cf4872ff5.png" target="_blank" rel="noopener"><img src="https://i.loli.net/2018/12/19/5c19cf4872ff5.png"></a></td><br>  </tr><br>  <tr><br><td><a data-fancybox="gallery" href="https://i.loli.net/2018/12/19/5c19cf48d62a8.png" target="_blank" rel="noopener"><img src="https://i.loli.net/2018/12/19/5c19cf48d62a8.png"></a></td><br><td><a data-fancybox="gallery" href="https://i.loli.net/2018/12/19/5c19cf48ad8bc.png" target="_blank" rel="noopener"><img src="https://i.loli.net/2018/12/19/5c19cf48ad8bc.png"></a></td><br><td><a data-fancybox="gallery" href="https://i.loli.net/2018/12/19/5c19cf48ec168.png" target="_blank" rel="noopener"><img src="https://i.loli.net/2018/12/19/5c19cf48ec168.png"></a></td><br>  </tr><br> </table><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>不少同学觉得官方miui自定义不够强，纷纷刷官改和类原生。当然不少人喜欢原生系统，它纯净省电、可玩性极强，同时资源丰富，诸如<code>Xposed</code>等神器支持良好。不过，缺点也很明显，像 <strong><em>NFC</em></strong> 这些功能基本残废。bug还是有一些的，不影响日用。由于我对云服务很强依赖，需要一个稳定省电的系统。所以本指南将以最新官方稳定系统为基础进行调教。除了安装第三方recovery以外，不会改动系统分区，从而最大程度保证系统的稳定和省电</p><hr><hr><blockquote><p><strong><em>一个稳定的系统可以极大的提高学习的效率</em></strong></p><blockquote><p>—- <strong><em>鲁迅</em></strong></p></blockquote></blockquote><blockquote><p><del>~帮我压好鲁迅的棺材盖😳🤪</del>~</p></blockquote><p><img src="https://i.loli.net/2018/08/15/5b7435e9a260b.jpg" alt="宣传图片"></p><hr><figure class="image-box">                <img src="https://i.loli.net/2018/08/15/5b7435e988976.jpg" alt="梦幻般的四曲面" title class>                <p>梦幻般的四曲面</p>            </figure><hr><figure class="image-box">                <img src="https://i.loli.net/2018/08/15/5b7435e98718a.jpg" alt="骁龙835" title class>                <p>骁龙835</p>            </figure><hr><hr><p></p><p align="center">传说中的拍照样张(没有谷歌相机📷，拍出来的照片不忍直视)</p><p></p><table class="table"><br><tr><br>   <td><img src="https://i.loli.net/2018/08/17/5b7620d502033.jpg"></td><br>   <td><img src="https://i.loli.net/2018/08/17/5b7620d52bc1c.jpg"></td><br></tr><br><tr><br>   <td><img src="https://i.loli.net/2018/08/17/5b7620d5361d7.jpg"></td><br>   <td><img src="https://i.loli.net/2018/08/15/5b7435e9266eb.jpg"></td><br></tr><br></table><blockquote><p>本指南将在官方MIUI的系统基础上对MI 6进行个性化，以达到稳定省电的目的。所以内核方面暂时没有计划。😜</p></blockquote><p>So,不修改系统才能保证原来的稳定，所以这里使用Magisk模块(一部分自制，一部分来自酷友)：</p><ul><li>什么是<code>Magisk</code>：<br>Magisk是一款不修改系统文件但是能做到与修改系统相同效果的神器。</li></ul><p><a href="https://github.com/topjohnwu/Magisk" target="_blank" rel="noopener">Magisk项目地址</a></p><h1 id="个性化Magisk模块"><a href="#个性化Magisk模块" class="headerlink" title="个性化Magisk模块"></a>个性化Magisk模块</h1><blockquote><p>已制做模块以及推荐安装的模块（MIUI 10稳定版（V10.0.1.0.OCACNFH））</p></blockquote><ul><li>时间居中模块(miui_center_clocker)</li><li>系统级屏幕圆角</li><li>MIUI主题（整合安卓7.0开机画面）</li><li>dpi调整</li><li>全面屏手势（包含禁用系统升级、Google相机代码、dpi修改）</li><li><a href="https://github.com/Magisk-Modules-Repo/Magisk-Manager-for-Recovery-Mode" target="_blank" rel="noopener">mm管理器</a>（方便recovery下面卸载模块）</li><li>阿丽达黑字体（来自微信公众号：宁静之雨）</li><li>杜比音效(来自酷友)</li><li><a href="https://github.com/Magisk-Modules-Repo/ViPER4Android-FX" target="_blank" rel="noopener">ViPER4Android-FX</a></li><li><a href="https://github.com/Magisk-Modules-Repo/Greenify4Magisk" target="_blank" rel="noopener">绿色守护</a>(压制毒瘤)</li></ul><h3 id="关于谷歌服务"><a href="#关于谷歌服务" class="headerlink" title="关于谷歌服务"></a>关于谷歌服务</h3><ul><li>方案 1(不推荐，除非你想体验Pixel)：</li></ul><p><a href="https://github.com/Magisk-Modules-Repo/MagicGApps" target="_blank" rel="noopener">MagicGApps</a> + <a href="https://github.com/opengapps/opengapps" target="_blank" rel="noopener">Open GApps</a></p><h5 id="食用方法"><a href="#食用方法" class="headerlink" title="食用方法"></a>食用方法</h5><ol><li>前往<a href="https://opengapps.org/" target="_blank" rel="noopener">Opengapps</a>下载符合你当前系统的版本，下载完成后将其复制到内部存储，确保包名为<code>open_gapps-* zip</code></li><li>第三方Recovery中安装模块MagicGApps</li></ol><ul><li>方案 2(推荐)：</li></ul><p>使用<a href="https://googleinstaller.org" target="_blank" rel="noopener">GoogleInstaller</a></p><h2 id="部分实现"><a href="#部分实现" class="headerlink" title="部分实现"></a>部分实现</h2><ul><li>启用 <strong><em>Google相机</em></strong> api，这里需要修改/system/build.prop,我已制造相关模块保证系统稳定，这里只是说明实现，在<code>/system/build.prop</code>添加如下代码：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">persist.camera.HAL3.enabled=1</span><br><span class="line">persist.camera.eis.enable=1</span><br></pre></td></tr></table></figure><ul><li><p>开启全面屏手势<br><code>/system/build.prop</code>修改<code>qemu.hw.mainkeys=1</code>为<code>qemu.hw.mainkeys=0</code></p></li><li><p>dpi<br>可以在<code>/system/build.prop</code>修改<code>ro.sf.lcd_density=480</code>，也可以使用命令<code>wm density dpi_num</code>(root权限下，且只适用于骁龙处理器)</p></li></ul><figure class="image-box">                <img src="https://www.youtube.com/watch?v=y4oQiD3MoMM" alt title class>                <p></p>            </figure><ul><li>系统级屏幕圆角<br>在/system/etc/device_features/sagit.xml中添加：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--whether round corner--&gt; </span><br><span class="line">&lt;bool name=&quot;support_round_corner&quot;&gt;true&lt;/bool&gt;</span><br></pre></td></tr></table></figure><h2 id="软件生态"><a href="#软件生态" class="headerlink" title="软件生态"></a>软件生态</h2><blockquote><p>仅有一个稳定省电的系统是远远不够的，只有配合优质的软件才可以达到最佳效果(可以配合黑域和绿色守护压制部分毒瘤)</p></blockquote><ul><li>Chrome</li><li><a href="https://www.celsoazevedo.com/files/android/google-camera/f/MGC_5.2.022_1.0.apk" target="_blank" rel="noopener">google相机</a></li><li>SSR</li><li>多看阅读</li><li>Share</li><li>VLC</li><li>Termux</li><li>一个木函</li><li>Tim</li><li>Gboard</li><li>Facebook</li><li>Youtube</li><li>Telegram</li><li>WPS Office</li><li>Instagram</li><li>谷歌翻译</li><li>酷安</li><li>冰箱</li><li>时光相册</li><li>谷歌地图</li></ul><h1 id="镜像目录"><a href="#镜像目录" class="headerlink" title="镜像目录"></a>镜像目录</h1><p>GitHub下载太慢的话，可以前往服务器下载(服务器对某些地区电信网络不太友好)：  </p><details><summary>下载</summary><a href="https://file.ourfor.top" target="_blank" rel="noopener">目录</a></details><p>注意事项：</p><ol><li>请确保您已经安装第三方Recovery，以及备份好基带</li><li>安装mm管理器，方便卸载Magisk模块</li></ol><hr><details><br>   <summary>mm管理器用法</summary><br><br>   1.重启进入Recovery，打开  <strong>Terminal</strong>   <br><br>   2.执行 <u> cd /data/media </u> <br><br>   3.使用 <u> ./mm </u> 来使用mm管理器<br><br></details>  <hr><hr><h1 id="Contact"><a href="#Contact" class="headerlink" title="Contact"></a>Contact</h1><table class="table"><br>  <tr><br>    <td><img src="https://i.loli.net/2018/12/19/5c1a46250813c.png"></td><br>    <td><img src="https://i.loli.net/2018/12/19/5c1a46c450447.png"></td><br>    <td><img src="https://i.loli.net/2018/12/19/5c1a46dcd793f.png"></td><br>  </tr><br></table><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><ul><li>下载官方线刷包</li><li>解锁手机bl锁</li><li>下载twrp官方Recovery</li><li>线刷稳定系统</li><li>刷入第三方Recovery,即上面的TWRP</li><li>刷入Magisk模块,自定义Magisk模块</li></ul><h1 id="更新日志"><a href="#更新日志" class="headerlink" title="更新日志"></a>更新日志</h1><blockquote><p>2018年12月19日</p></blockquote><ul><li>调整数据流量箭头与4G+之间的距离，不会再与加号重叠</li><li>调整状态栏<a href="#javascript">时间</a>字体大小，更加醒目</li><li>通知栏时间分块，安装<a href="https://www.coolapk.com/apk/soptqs.medianotification" target="_blank" rel="noopener">安卓O 音乐样式</a></li><li>更换图标包<a href="#javascript">Sorcery</a></li><li>反编译SystemUI，去掉<a href="#javascript">不重要通知</a></li><li>更改门禁卡默认图片(刷入门禁卡模块)</li><li>更改通知栏高度，添加自定义文字，更换系统设置界面与下拉通知栏开关图标</li></ul><blockquote><p>2018年8月15日</p></blockquote><ul><li>时间居中，添加时间数组，不同的时间显示不同的文字和水果图片</li><li>开启全面屏手势，修复MIUI相机快门键扁平化</li><li>整合主题，添加Google开机画面，添加字体，看起来更舒服</li><li>开启全局圆角(已去掉)</li><li>禁止系统更新(修改系统版本号)，不用再担心升级导致的各种问题</li><li>添加Google相机启用代码(算法的优势，Pixel单摄吊打一众双摄)。</li></ul><!--@column-3{<figure class="image-box">                <img src="https://i.loli.net/2018/12/19/5c19cf47d2919.png" alt="Tim" title="" class="">                <p>Tim</p>            </figure><p>@center{</p><figure class="image-box">                <img src="https://i.loli.net/2018/12/19/5c19cf47d2fb1.png" alt="酷安" title="" class="">                <p>酷安</p>            </figure><p>}</p><p>@right{</p><figure class="image-box">                <img src="https://i.loli.net/2018/12/19/5c19cf48d7e73.png" alt="Nova" title="" class="">                <p>Nova</p>            </figure><p>}</p><p>}</p><p>@column-3{</p><figure class="image-box">                <img src="https://i.loli.net/2018/12/19/5c19cf4867fa1.png" alt="Chrome" title="" class="">                <p>Chrome</p>            </figure><p>@center{</p><figure class="image-box">                <img src="https://i.loli.net/2018/12/19/5c1a06eb0bb6f.png" alt="通知栏" title="" class="">                <p>通知栏</p>            </figure><p>}</p><p>@right{</p><figure class="image-box">                <img src="https://i.loli.net/2018/12/19/5c19cf4872ff5.png" alt="Google Play" title="" class="">                <p>Google Play</p>            </figure><p>}</p><p>}</p><p>@column-3{</p><figure class="image-box">                <img src="https://i.loli.net/2018/12/19/5c19cf48d62a8.png" alt="桌面" title="" class="">                <p>桌面</p>            </figure><p>@center{</p><figure class="image-box">                <img src="https://i.loli.net/2018/12/19/5c19cf48ad8bc.png" alt="多看阅读" title="" class="">                <p>多看阅读</p>            </figure><p>}</p><p>@right{</p><figure class="image-box">                <img src="https://i.loli.net/2018/12/19/5c19cf48ec168.png" alt="网易云音乐" title="" class="">                <p>网易云音乐</p>            </figure><p>}</p><p>}</p><p>@column-3{</p><figure class="image-box">                <img src="https://i.loli.net/2018/12/19/5c1a46250813c.png" alt="Launcher" title="" class="">                <p>Launcher</p>            </figure><p>@center{</p><figure class="image-box">                <img src="https://i.loli.net/2018/12/19/5c1a46c450447.png" alt="QQ" title="" class="">                <p>QQ</p>            </figure><p>}</p><p>@right{</p><figure class="image-box">                <img src="https://i.loli.net/2018/12/19/5c1a46dcd793f.png" alt="WeChat" title="" class="">                <p>WeChat</p>            </figure><p>}</p><p>}</p><div class="column-2"><br><figure class="image-box">                <img src="https://i.loli.net/2018/08/17/5b7620d502033.jpg" alt="" title="" class="">                <p></p>            </figure><br><figure class="image-box">                <img src="https://i.loli.net/2018/08/17/5b7620d52bc1c.jpg" alt="" title="" class="">                <p></p>            </figure><br></div><br><div class="column-2"><br><figure class="image-box">                <img src="https://i.loli.net/2018/08/17/5b7620d5361d7.jpg" alt="" title="" class="">                <p></p>            </figure><br><figure class="image-box">                <img src="https://i.loli.net/2018/08/15/5b7435e9266eb.jpg" alt="" title="" class="">                <p></p>            </figure><br></div><p> @column-2{</p><figure class="image-box">                <img src="https://i.loli.net/2018/08/17/5b7620d502033.jpg" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/08/17/5b7620d52bc1c.jpg" alt="" title="" class="">                <p></p>            </figure><p>}</p><p>@column-2{</p><figure class="image-box">                <img src="https://i.loli.net/2018/08/17/5b7620d5361d7.jpg" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/08/15/5b7435e9266eb.jpg" alt="" title="" class="">                <p></p>            </figure><p>}<br>–&gt;</p>-->]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> decode </tag>
            
            <tag> Custom </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Termux安装Hexo静态博客</title>
      <link href="/2018/12/14/TermuxInstallHexo/"/>
      <url>/2018/12/14/TermuxInstallHexo/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>在安卓平台的Linux仿真模拟器Termux上面安装nodejs，从而搭建hexo静态博客。<br><a id="more"></a></p><h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>个人感觉没有必要在手机上面写博客,原因有二:</p><ul><li>手机屏幕太小，看着费劲</li><li>输入。。。不支持盲打，并且性能不够<br>但还是写一下，证明它确实可以搭建个人博客。</li></ul><h1 id="下载安装Termux"><a href="#下载安装Termux" class="headerlink" title="下载安装Termux"></a>下载安装Termux</h1><ul><li><a href="https://termux.com/" target="_blank" rel="noopener">Termux</a>官网</li></ul><h1 id="安装Nodejs"><a href="#安装Nodejs" class="headerlink" title="安装Nodejs"></a>安装Nodejs</h1><p>如果你已经安装<strong><em>nodejs</em></strong>,先卸载它,因为我不确定会不会有问题。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg uninstall nodejs   <span class="comment">#卸载nodejs</span></span><br></pre></td></tr></table></figure><p>打开<code>Termux</code>执行:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pkg install openssh openssl  <span class="comment">#安装ssh以及ssl</span></span><br><span class="line">pkg install nodejs       <span class="comment">#安装nodejs</span></span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://i.loli.net/2018/12/14/5c133fcb67892.png" alt="卸载安装nodejs" title class>                <p>卸载安装nodejs</p>            </figure><h1 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g     <span class="comment">#安装hexo</span></span><br></pre></td></tr></table></figure><p>ERROR:<br><figure class="image-box">                <img src="https://i.loli.net/2018/12/14/5c137f7302e2f.png" alt="length is undefine" title class>                <p>length is undefine</p>            </figure></p><p>查看日志，发现是这个文件有错误</p><figure class="image-box">                <img src="https://i.loli.net/2018/12/14/5c137f69a2b4d.png" alt="detail" title class>                <p>detail</p>            </figure><p>输入<code>vim /data/data/com.termux/files/usr/lib/node_modules/npm/node_modules/worker-farm/lib/farm.js</code>并修改<code>maxConcurrentWorkers</code></p><figure class="image-box">                <img src="https://i.loli.net/2018/12/14/5c137f6a05de9.png" alt="改为0" title class>                <p>改为0</p>            </figure><blockquote><p>重新安装<code>hexo-cli</code></p></blockquote><figure class="image-box">                <img src="https://i.loli.net/2018/12/14/5c137f733d4b9.png" alt="安装没问题了" title class>                <p>安装没问题了</p>            </figure><p>进入宿主目录，同时为我们的博客网站创建一个目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line">mkdir blog</span><br></pre></td></tr></table></figure><p>接下来我们初始化博客根目录，在博客上级目录执行<code>hexo init blog</code>(blog是你博客网站根目录的名字)<br><figure class="image-box">                <img src="https://i.loli.net/2018/12/14/5c137f7412327.png" alt="初始化博客根目录" title class>                <p>初始化博客根目录</p>            </figure></p><blockquote><p>小结</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~       <span class="comment">#change directory,进入宿主目录</span></span><br><span class="line">mkdir blog         <span class="comment">#make directory 新建一个名为blog的文件夹，名字不一定叫blog可以根据你的喜好填写,这个目录就是博客网站的根目录</span></span><br><span class="line">npm install hexo-cli -g   <span class="comment">#安装hexo</span></span><br><span class="line">hexo init blog         <span class="comment">#初始化blog这个文件夹，这个文件夹就是第3条命令创建的文件夹，如果你使用的是其他名称，换成对应的名称即可。</span></span><br><span class="line"><span class="built_in">cd</span> blog                <span class="comment">#进入blog这个文件夹，就是上面的博客网站根目录</span></span><br><span class="line">npm install            <span class="comment">#安装必要插件</span></span><br></pre></td></tr></table></figure><h1 id="添加ssh公钥"><a href="#添加ssh公钥" class="headerlink" title="添加ssh公钥"></a>添加ssh公钥</h1><p>打开<code>Termux</code>输入<code>ssh-keygen -t rsa -C &quot;2320813747@qq.com&quot;</code>,这个邮箱地址换成你的。连续四次回车就生成了一对密钥。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Your identification has been saved <span class="keyword">in</span> /data/data/com.termux/files/home/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /data/data/com.termux/files/home/.ssh/id_rsa.pub.</span><br></pre></td></tr></table></figure><p>它会告诉你密钥生成在那个文件夹,上面是我的密钥生成路径，下面要相应替换成你的，使用<code>cat</code>来查看公钥内容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /data/data/com.termux/files/home/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></p><p>复制输出的内容，打开<code>GitHub</code>，点击页面右侧头像旁边的倒三角，打开<code>Settings</code>，在页面左侧的<code>Personal settings</code>下面定位到<code>SSH and GPG keys</code>这一栏,点击右侧的<code>New SSH key</code>来添加一个密钥，其中<code>Title</code>随意,<code>Key</code>填写上一步<code>Git bash</code>里面生成的那个。最后<code>Add SSH key</code>就行了。</p><figure class="image-box">                <img src="https://i.loli.net/2018/12/14/5c137b75b3912.png" alt="添加ssh公钥" title class>                <p>添加ssh公钥</p>            </figure><blockquote><p>当你写好文章之后,首先得使用<code>hexo g</code>来生成，而<code>hexo s</code>可以在本地查看实际效果，<code>hexo d</code>会自动<code>push</code>到远程仓库，你就可以在浏览器地址栏中输入<code>username.github.io</code>来访问你的博客<code>username</code>是你的<strong><em>GitHub</em></strong>用户名。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate          <span class="comment">#简写hexo g,即渲染并生成HTML页面。</span></span><br><span class="line">hexo server            <span class="comment">#简写hexo s,本地计算机启动服务，如果此时出现nodejs提示的防火墙，允许即可</span></span><br></pre></td></tr></table></figure><h1 id="Hello-World"><a href="#Hello-World" class="headerlink" title="Hello World"></a>Hello World</h1><p>博客安装好了，我要怎样写文章呢？<br>所以我们就有必要了解一下blog这个文件夹里面各个部分的作用了。</p><ul><li><p>文章保存在<code>source/_posts</code>里面，是以<code>.md</code>结尾的文本文件，你可以用文本编辑器打开编辑它,不过我更推荐你用<a href="https://blog.ourfor.top/2018/03/24/3/">Sublime Text 3</a>，这个文本文件使用的是<code>MarkDown</code>这种轻量级的标记语法，同时兼容<code>HTML</code> ，是<strong><em>纯文本的</em></strong>，不像<code>WordPress</code>和<code>PPT</code>那样，当然这是优点。</p></li><li><p>写第一篇文章<br>打开<code>Termux</code>,输入<code>hexo new 我的XX</code>(我的XX-是标题，自拟)<br>这时候你就可以在<code>blog/source/_posts</code>里面看到它，编辑这个文件就OK了。</p></li><li><p>博客部署到远程仓库</p></li></ul><p>如何从外网访问博客呢？其实我们打开的<code>http://localhost:4000/</code>这个网址它的网站根目录是在<code>blog/public</code>下面，你可以打开public这个文件夹看看，里面就是网站页面的源码，你可以打开这个<code>index.html</code>文件，是不是就是你的博客的主页。只是没有图片而已，所以我们只需要将这个文件夹里面的东西放到一个外网可以访问的地方就行了，好在<code>hexo</code>的配置文件里面已经有相关的设置了，我们只需要稍作更改就行了。</p><h2 id="1-注册GitHub账号或者Coding账号"><a href="#1-注册GitHub账号或者Coding账号" class="headerlink" title="1.注册GitHub账号或者Coding账号"></a>1.注册GitHub账号或者Coding账号</h2><p>略</p><h2 id="2-新建一个Repository，点击页面上面的New-repository"><a href="#2-新建一个Repository，点击页面上面的New-repository" class="headerlink" title="2.新建一个Repository，点击页面上面的New repository"></a>2.新建一个<code>Repository</code>，点击页面上面的<code>New repository</code></h2><figure class="image-box">                <img src="https://i.loli.net/2018/12/08/5c0be7100ebc6.png" alt="New repository" title class>                <p>New repository</p>            </figure><ul><li>这个<code>Repository name</code>填<code>username.github.io</code>,比如我的就填<code>ourfor.github.io</code>.你的根据你的<code>username</code>填。</li><li><code>Public</code>在没有付费或者使用学生包的情况下，我们只能创建该权限类型的仓库，点击<code>Create repository</code>就可以完成创建。</li><li><code>Description</code>可选，建议勾选☑️<code>Initialize this repository with a README</code></li></ul><p>这时候就会打开仓库主页，依次点击页面右侧的<code>Clone or download</code>、<code>Use SSH</code>复制框中的<code>Repo</code>地址，待会要用。</p><h2 id="3-修改配置文件-config-yml"><a href="#3-修改配置文件-config-yml" class="headerlink" title="3.修改配置文件_config.yml"></a>3.修改配置文件<code>_config.yml</code></h2><p>在博客网站根目录下面用<code>vim</code>(没安装vim就用vi)编辑<code>_config.yml</code>文件，在文件末尾，找到：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>:</span><br></pre></td></tr></table></figure></p><p>改成：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: </span><br><span class="line">       github: git@github.com:ourfor/ourfor.github.io.git,master</span><br><span class="line">       <span class="comment">#coding: git@git.coding.net:ourfor/ourfor.git,master</span></span><br><span class="line">  branch: master     </span><br><span class="line">  message: blog update</span><br></pre></td></tr></table></figure></p><p>上面这个<code>git@github.com:ourfor/ourfor.github.io.git</code> 是我的仓库的SSH地址,你改成你的，如果你用的是<code>coding</code>你可以把<code>github</code>这一行用<code>#</code>注释掉，去掉<code>coding</code>前面的<code>#</code>。最后保存更改。</p><h3 id="部署到GitHub"><a href="#部署到GitHub" class="headerlink" title="部署到GitHub"></a>部署到GitHub</h3><p>首先，我们得安装部署插件，由于GitHub只支持<code>git</code>,wo们安装的插件名为<code>hexo-deployer-git</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save   <span class="comment">#在博客根目录下执行</span></span><br></pre></td></tr></table></figure><p>详见<a href="https://hexo.io/zh-cn/docs/deployment.html" target="_blank" rel="noopener">官方文档</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g -d <span class="comment">#渲染的同时部署到GitHub</span></span><br></pre></td></tr></table></figure><h1 id="相关阅读"><a href="#相关阅读" class="headerlink" title="相关阅读"></a>相关阅读</h1><ul><li><a href="https://blog.ourfor.top/2018/03/06/hexo-github-coding%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/">hexo个人博客</a></li><li><a href="https://blog.ourfor.top/2018/07/20/%E5%88%9D%E5%B0%9DTypecho/">初尝Typecho</a></li><li><a href="https://blog.ourfor.top/2018/10/18/%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEWordPress/">安装配置WordPress</a></li><li><a href="https://blog.ourfor.top/2018/10/25/GitHub%E5%8F%8Agit%E5%88%9D%E7%BA%A7%E7%8E%A9%E6%B3%95/">GitHub和Git的初级玩法</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Termux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> terminal </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VB.Net入坑日记</title>
      <link href="/2018/11/23/VB-Net%E5%85%A5%E5%9D%91%E6%97%A5%E8%AE%B0/"/>
      <url>/2018/11/23/VB-Net%E5%85%A5%E5%9D%91%E6%97%A5%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>最近好多事要做啊, 去工设院实验室了, 对硬件感兴趣, 具有一定的编程和学习新知识的能力, 对网络以及串口通信有一定的了解, 这是老师提的要求; wo…… 感觉压力好大啊, 我当初答应老师来, 就是想挑战一下自己, 没有压力, 哪来的进步啊. 话说回来, 这个实验室还是挺好的, 自习的好地方, 设备一应俱全, 还在工设院, 算是比较近了, 终于可以结束这种想自习还得去至善楼的日子了, 加油干!<br><a id="more"></a></p><h1 id="VB-Net"><a href="#VB-Net" class="headerlink" title="VB.Net"></a>VB.Net</h1><p>VB.Net 绝对是Windows下面开发图形化程序强大的语言之一. 微软将<code>VB</code>加入<code>.Net</code>之后就有了<code>VB.Net</code>, Visual Baisc(以下简称VB)是一种由微软公司开发的包含协助开发环境的事件驱动编程语言.<code>.Net</code>架构提供应用程序所需的两部分内容: <code>.NET架构类库</code>和<code>通用语言运行时</code>, 可以分别类比Java语言中的<code>java类包</code>和<code>java运行环境(jre)</code></p><blockquote><p>注意:VB.Net是不区分大小写的, 系统将全部默认为小写, 但是程序是也编写给人看的(主要是方便自己维护和修改), 普遍采用驼峰命名法, 见名知义。</p></blockquote><h2 id="变量声明"><a href="#变量声明" class="headerlink" title="变量声明"></a>变量声明</h2><p>通用格式:<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&lt;attrlist&gt;] [&#123;Public|Private|Protected|Friend|Protected Friend|Static&#125;] [Shared] [Shadows] [ReadOnly] Dim [WithEvents] name [(boundlist)] [As [New] type] [ = initexpr ]</span><br></pre></td></tr></table></figure></p><blockquote><p>关键字</p></blockquote><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Public</span> <span class="keyword">Class</span> Form1</span><br><span class="line">    <span class="keyword">Private</span> <span class="keyword">Sub</span> btnHello_Click(sender <span class="keyword">As</span> <span class="built_in">Object</span>, e <span class="keyword">As</span> EventArgs) <span class="keyword">Handles</span> btnHello.Click</span><br><span class="line">        <span class="comment">'申明变量来存储圆的面积、周长以及半径</span></span><br><span class="line">        <span class="keyword">Dim</span> pi <span class="keyword">As</span> <span class="built_in">Double</span> = <span class="number">3.141592</span></span><br><span class="line">        <span class="keyword">Dim</span> area <span class="keyword">As</span> <span class="built_in">Double</span></span><br><span class="line">        <span class="keyword">Dim</span> circle <span class="keyword">As</span> <span class="built_in">Double</span></span><br><span class="line">        <span class="keyword">Dim</span> radius <span class="keyword">As</span> <span class="built_in">Double</span></span><br><span class="line">        <span class="keyword">Me</span>.<span class="keyword">Text</span> = <span class="string">"本程序将计算圆的周长以及面积,其中圆周率取：3.141592"</span></span><br><span class="line">        <span class="comment">'调用文本输入框</span></span><br><span class="line">        radius = InputBox(<span class="string">"输入圆的半径:"</span>)</span><br><span class="line">        area = pi * radius * radius</span><br><span class="line">        circle = radius * pi * <span class="number">2</span></span><br><span class="line">        <span class="comment">'输出圆的面积和周长</span></span><br><span class="line">        <span class="keyword">Me</span>.<span class="keyword">Text</span> = <span class="string">"点击右上角的×关闭本程序"</span></span><br><span class="line">        txtHello.<span class="keyword">Text</span> = <span class="string">"圆的半径为:"</span> + radius.ToString + <span class="string">"其面积为:"</span> + area.ToString + <span class="string">"周长为:"</span> + circle.ToString</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Class</span></span><br></pre></td></tr></table></figure><h1 id="常用排序"><a href="#常用排序" class="headerlink" title="常用排序"></a>常用排序</h1><figure class="highlight vb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Public</span> <span class="keyword">Class</span> Form1</span><br><span class="line">    <span class="keyword">Private</span> <span class="keyword">Sub</span> Form1_Load(sender <span class="keyword">As</span> <span class="built_in">Object</span>, e <span class="keyword">As</span> EventArgs) <span class="keyword">Handles</span> <span class="keyword">MyBase</span>.Load</span><br><span class="line">        <span class="keyword">Dim</span> a <span class="keyword">As</span> MyArray = <span class="keyword">New</span> MyArray()</span><br><span class="line">        a.GetN(InputBox(<span class="string">"输入数组中有多少个元素:"</span>))</span><br><span class="line">        a.MakeArray()</span><br><span class="line">        <span class="keyword">Dim</span> b <span class="keyword">As</span> MySort = <span class="keyword">New</span> MySort</span><br><span class="line">        <span class="comment">'b.BubbleSort(a.array)</span></span><br><span class="line">        <span class="comment">'b.ShellSort(a.array)</span></span><br><span class="line">        b.InsertSort(a.array)</span><br><span class="line">        a.ToString()</span><br><span class="line">        <span class="keyword">End</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Class</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Class</span> MySort</span><br><span class="line">    <span class="keyword">Function</span> ShellSort(<span class="keyword">ByRef</span> array <span class="keyword">As</span> <span class="built_in">Double</span>())</span><br><span class="line">        <span class="keyword">Dim</span> stepE <span class="keyword">As</span> <span class="built_in">Integer</span> = array.Length / <span class="number">2</span></span><br><span class="line">        <span class="keyword">For</span> index1 <span class="keyword">As</span> <span class="built_in">Integer</span> = <span class="number">0</span> <span class="keyword">To</span> <span class="number">1</span> <span class="keyword">Step</span> <span class="number">0</span></span><br><span class="line">            <span class="keyword">If</span> stepE &lt;= <span class="number">0</span> <span class="keyword">Then</span></span><br><span class="line">                <span class="keyword">Exit</span> <span class="keyword">For</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">            <span class="keyword">For</span> index2 <span class="keyword">As</span> <span class="built_in">Integer</span> = <span class="number">0</span> <span class="keyword">To</span> array.Length - stepE - <span class="number">1</span></span><br><span class="line">                <span class="keyword">If</span> array(index2) &gt; array(index2 + stepE) <span class="keyword">Then</span></span><br><span class="line">                    <span class="keyword">Dim</span> tmp <span class="keyword">As</span> <span class="built_in">Double</span> = array(index2)</span><br><span class="line">                    array(index2) = array(index2 + stepE)</span><br><span class="line">                    array(index2 + stepE) = tmp</span><br><span class="line">                <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">            <span class="keyword">Next</span> index2</span><br><span class="line">                stepE /= <span class="number">2</span></span><br><span class="line">        <span class="keyword">Next</span> index1</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Function</span> InsertSort(<span class="keyword">ByRef</span> array <span class="keyword">As</span> <span class="built_in">Double</span>())</span><br><span class="line">        <span class="keyword">For</span> index1 <span class="keyword">As</span> <span class="built_in">Integer</span> = <span class="number">1</span> <span class="keyword">To</span> array.Length - <span class="number">1</span></span><br><span class="line">            <span class="keyword">For</span> index2 <span class="keyword">As</span> <span class="built_in">Integer</span> = <span class="number">0</span> <span class="keyword">To</span> index1 - <span class="number">1</span></span><br><span class="line">                <span class="keyword">If</span> array(index2) &gt; array(index1) <span class="keyword">Then</span></span><br><span class="line">                    <span class="keyword">Dim</span> tmp <span class="keyword">As</span> <span class="built_in">Double</span> = array(index1)</span><br><span class="line">                    <span class="keyword">For</span> index3 <span class="keyword">As</span> <span class="built_in">Integer</span> = index1 - <span class="number">1</span> <span class="keyword">To</span> index2 <span class="keyword">Step</span> <span class="number">-1</span></span><br><span class="line">                        array(index3 + <span class="number">1</span>) = array(index3)</span><br><span class="line">                    <span class="keyword">Next</span> index3</span><br><span class="line">                    array(index2) = tmp</span><br><span class="line">                <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">            <span class="keyword">Next</span> index2</span><br><span class="line">        <span class="keyword">Next</span> index1</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Function</span> BubbleSort(<span class="keyword">ByRef</span> array <span class="keyword">As</span> <span class="built_in">Double</span>())</span><br><span class="line">        <span class="keyword">For</span> index1 <span class="keyword">As</span> <span class="built_in">Integer</span> = array.Length - <span class="number">1</span> <span class="keyword">To</span> <span class="number">1</span> <span class="keyword">Step</span> <span class="number">-1</span></span><br><span class="line">            <span class="keyword">For</span> index2 <span class="keyword">As</span> <span class="built_in">Integer</span> = <span class="number">0</span> <span class="keyword">To</span> index1 - <span class="number">1</span></span><br><span class="line">                <span class="keyword">If</span> array(index2) &gt; array(index2 + <span class="number">1</span>) <span class="keyword">Then</span></span><br><span class="line">                    <span class="keyword">Dim</span> tmp <span class="keyword">As</span> <span class="built_in">Double</span> = array(index2)</span><br><span class="line">                    array(index2) = array(index2 + <span class="number">1</span>)</span><br><span class="line">                    array(index2 + <span class="number">1</span>) = tmp</span><br><span class="line">                <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">            <span class="keyword">Next</span> index2</span><br><span class="line">        <span class="keyword">Next</span> index1</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Class</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Class</span> MyArray</span><br><span class="line">    <span class="keyword">Private</span> n <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line">    <span class="keyword">Public</span> array <span class="keyword">As</span> <span class="built_in">Double</span>()</span><br><span class="line">    <span class="keyword">Sub</span> GetN(<span class="keyword">ByVal</span> num <span class="keyword">As</span> <span class="built_in">Integer</span>)</span><br><span class="line">        n = num</span><br><span class="line">        <span class="keyword">ReDim</span> array(num)</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">Sub</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Public</span> <span class="keyword">Function</span> MakeArray() <span class="keyword">As</span> <span class="built_in">Double</span>()</span><br><span class="line">        <span class="keyword">Dim</span> index <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line">        <span class="keyword">Try</span></span><br><span class="line">            <span class="keyword">For</span> index = <span class="number">0</span> <span class="keyword">To</span> UBound(array)</span><br><span class="line">                array(index) = InputBox(<span class="string">"输入第"</span> + index.ToString + <span class="string">"的值"</span>)</span><br><span class="line">            <span class="keyword">Next</span> index</span><br><span class="line">        <span class="keyword">Catch</span> ex <span class="keyword">As</span> Exception</span><br><span class="line">            index -= <span class="number">1</span></span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">Try</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Public</span> <span class="keyword">Function</span> ToString() <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line">        <span class="keyword">Dim</span> Str <span class="keyword">As</span> <span class="built_in">String</span> = <span class="string">""</span></span><br><span class="line">        <span class="keyword">For</span> <span class="keyword">Each</span> index <span class="keyword">As</span> <span class="built_in">Double</span> <span class="keyword">In</span> array</span><br><span class="line">            Str += index.ToString + <span class="string">" "</span></span><br><span class="line">        <span class="keyword">Next</span> index</span><br><span class="line">        MsgBox(Str)</span><br><span class="line">        <span class="keyword">Return</span> Str</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Class</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> VB.Net </tag>
            
            <tag> OOP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>读书笔记</title>
      <link href="/2018/11/15/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%7C%E7%BC%96%E7%A8%8B/"/>
      <url>/2018/11/15/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0%7C%E7%BC%96%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--最近在搞这个坦克大战，这是java课的一个作业，根据开闭原则，要求将变化的东西写进配置文件，不在参与编译，丰富代码的可拓展性，这里的配置文件遵循xml规范，xml全称` eXtensible Markup Language `是数据交换相关的一种语言，我们前端的html(全称:HyperText Markup Language)(超文本标记语言)也参考了xml语言的规范。在Java程序中读取xml文件呢？我们如何高效的编写xml文件呢？--><p><blockquote class="normal">书中自有黄金屋，书中自有千钟粟，书中自有颜如玉。</blockquote></p><p></p><p align="center"><strong><i>静下心来好好学习吧，做那么多没意义的事干嘛呢？</i></strong></p><br><a id="more"></a><p></p><h1 id="软件综合"><a href="#软件综合" class="headerlink" title="软件综合"></a>软件综合</h1><blockquote><p>void指针,void指针应当理解为空类型指针或者不指向确定类型，而不应理解为任意类型，void指针值存储地址，不指向确定类型，使用void指针时需要转化类型</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Display</span><span class="params">(<span class="keyword">char</span>* str)</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%s\n"</span>,str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Compare</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span>* x_,<span class="keyword">const</span> <span class="keyword">void</span>* y_)</span></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> *x=(<span class="keyword">double</span>*) x_;</span><br><span class="line">    <span class="keyword">double</span> *y=(<span class="keyword">double</span>*) y_;</span><br><span class="line">    <span class="keyword">if</span>(*x&lt;*y) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(*x==*y) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">CompareInt</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span>* x_,<span class="keyword">const</span> <span class="keyword">void</span>* y_)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> *x=(<span class="keyword">int</span> *)x_;</span><br><span class="line">    <span class="keyword">int</span> *y=(<span class="keyword">int</span> *)y_;</span><br><span class="line">    <span class="keyword">return</span> *y-*x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc,<span class="keyword">char</span>* argv[])</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Hello World\n"</span>);</span><br><span class="line">    Display(argv[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//函数指针调用函数 声明函数指针</span></span><br><span class="line">    <span class="keyword">int</span> (*funcp)(<span class="keyword">char</span>*);</span><br><span class="line">    funcp=&amp;Display;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//函数调用</span></span><br><span class="line">    (*funcp)(argv[<span class="number">0</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//void指针,void指针应当理解为空类型指针或者不指向确定类型，而不应理解为任意类型，void指针值存储地址，不指向确定类型，使用void指针时需要转化类型</span></span><br><span class="line">    <span class="keyword">double</span> score[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">9</span>;i++) score[<span class="number">9</span>-i]=i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">9</span>;i++) <span class="built_in">printf</span>(<span class="string">"%-5.2lf "</span>,*(score+i));</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    qsort(score,<span class="number">10</span>,<span class="keyword">sizeof</span>(<span class="keyword">double</span>),Compare);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++) <span class="built_in">printf</span>(<span class="string">"%05.2lf "</span>,score[i]);</span><br><span class="line">    assert(score[<span class="number">9</span>]==<span class="number">9</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n++++++++++===================++++++++++\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> NUM=5</span></span><br><span class="line">    <span class="keyword">int</span> an[]=&#123;<span class="number">8</span>,<span class="number">123</span>,<span class="number">11</span>,<span class="number">10</span>,<span class="number">4</span>&#125;;</span><br><span class="line">    qsort(an,<span class="number">5</span>,<span class="keyword">sizeof</span>(<span class="keyword">int</span>),CompareInt);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">4</span>;i++) <span class="built_in">printf</span>(<span class="string">"%d,"</span>,an[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="JAVA"><a href="#JAVA" class="headerlink" title="JAVA"></a>JAVA</h1><h2 id="规范的xml文件"><a href="#规范的xml文件" class="headerlink" title="规范的xml文件"></a>规范的xml文件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">playname</span>&gt;</span>麦克阿瑟<span class="tag">&lt;/<span class="name">playname</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="接口与实现"><a href="#接口与实现" class="headerlink" title="接口与实现"></a>接口与实现</h2><p>主要内容:</p><ul><li>接口</li><li>实现接口</li><li>接口回调</li><li>理解接口</li><li>接口与多态</li><li>接口参数</li><li>面向接口编程</li></ul><p>由于java不支持多继承，接口就应运而生。使用关键字<code>interface</code>来定义一个接口，接口定义与类定义相似，分为接口声明和接口体。接口体中包含常量的声明和方法体两部分。</p><table><thead><tr><th style="text-align:center">类型</th><th style="text-align:center">权限</th></tr></thead><tbody><tr><td style="text-align:center">常量</td><td style="text-align:center">public、final、static(允许省略)</td></tr><tr><td style="text-align:center">方法</td><td style="text-align:center">public、abstruct(允许省略)</td></tr></tbody></table><p>在java语言中，接口由类来实现接口中的方法，一个类需要在类声明中使用关键字<code>implements</code>声明该类实现一个或多个接口。如果实现多个接口，用逗号隔开接口名。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> <span class="keyword">implements</span> <span class="title">Printable</span>,<span class="title">Addable</span></span></span><br></pre></td></tr></table></figure></p><p>再如，Dog继承Animal并实现接口Eatalbe和Sleepable。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Dog</span> <span class="keyword">extends</span> <span class="title">Animal</span> <span class="keyword">implements</span> <span class="title">Eatable</span>,<span class="title">Sleepable</span></span></span><br></pre></td></tr></table></figure></p><p>如果一个非抽象类实现了某个接口，那么这个类必须重新接口中所有的方法，因为非抽象类可以实例化，就不存在没有实现的方法。同时由于接口中的方法一定是 <em>public abstruct</em> ，所以，在重写方法的时候需要去掉<code>abstruct</code>，并且需要显式的声明权限为 <strong><em>public</em></strong> ，否则默认的friend(友好类型)会减低权限，这是不被允许的。     </p><h1 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h1><blockquote><ul><li>虚拟化</li><li>并发性</li><li>持久化</li></ul></blockquote><blockquote><p>虚拟化</p></blockquote><p>操作系统将硬件虚拟化成更加强大易用的资源。内存是现代计算机运行的核心。内存由一个很大的字节数组来组成，每个字节都有自己的地址。cpu根据程序计数器的值从内存中提取指令，这些指令可能引起对特定内存地址的额外加载与存储。</p><h3 id="基本硬件"><a href="#基本硬件" class="headerlink" title="基本硬件"></a>基本硬件</h3><p>CPU可以直接访问的通用存储只有<code>内存</code>以及处理器内置的<code>寄存器</code>。机器指令可以用内存地址作为参数，而不能用硬盘地址作为参数.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">section .text</span><br><span class="line">global _main</span><br><span class="line">main:</span><br><span class="line">        movl 0x0(%ebx), %eax ;load 0+ebx into eax, 128</span><br><span class="line">        addl $0x03, %eax ;add 3 to eax register, 132 </span><br><span class="line">        movl %eax, 0x0(%ebx) ;store eax back to mem, 135</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="https://file.ourfor.top/study/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/%E7%A1%AC%E4%BB%B6%E5%9C%B0%E5%9D%80%E4%BF%9D%E6%8A%A4.svg" alt="硬件地址保护" title class>                <p>硬件地址保护</p>            </figure><blockquote><p>编写程序，读入一个整型数据，向系统申请内存</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">StringToInt</span><span class="params">(<span class="keyword">char</span>* argv_)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc,<span class="keyword">char</span>* argv[])</span></span>&#123;</span><br><span class="line">    <span class="comment">//参数合法性</span></span><br><span class="line">    <span class="keyword">if</span>(argv[<span class="number">1</span>]==<span class="literal">NULL</span>) <span class="built_in">printf</span>(<span class="string">"Usage: ./NeedMemory i_memory\n"</span>);</span><br><span class="line">    <span class="comment">//字符转化为数字</span></span><br><span class="line">    <span class="keyword">int</span> i_memory=StringToInt(argv[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">int</span>* array_memory=<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>)*i_memory);</span><br><span class="line">    <span class="keyword">int</span> lengthOfargv=<span class="number">0</span>;</span><br><span class="line">    <span class="comment">//calculate the length of argv[1]</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;(argv[<span class="number">1</span>][i]-<span class="string">'0'</span>&gt;=<span class="number">0</span>&amp;&amp;argv[<span class="number">1</span>][i]-<span class="string">'0'</span>&lt;=<span class="number">9</span>);i++) &#123;</span><br><span class="line">        lengthOfargv++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"the address of argv[1] is %d, the context is %s, the length of argv[1] is %d\n"</span>,(<span class="keyword">int</span>)argv[<span class="number">1</span>],argv[<span class="number">1</span>],lengthOfargv);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Hi, I am the process, which pid is %d, and i malloc %d memory\n"</span>,getpid(),i_memory);</span><br><span class="line">    <span class="keyword">for</span>(;;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//字符转化为数字</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">StringToInt</span><span class="params">(<span class="keyword">char</span>* argv_)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i_num_memory=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;(argv_[i]-<span class="string">'0'</span>&gt;=<span class="number">0</span>&amp;&amp;argv_[i]-<span class="string">'0'</span>&lt;=<span class="number">9</span>);i++) &#123;</span><br><span class="line">        i_num_memory+=argv_[i]-<span class="string">'0'</span>;</span><br><span class="line">        i_num_memory*=<span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    i_num_memory/=<span class="number">10</span>;</span><br><span class="line">    <span class="keyword">return</span> i_num_memory;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="汇编语言"><a href="#汇编语言" class="headerlink" title="汇编语言"></a>汇编语言</h1><ul><li>汇编指令(机器码的助记符)</li><li>伪指令(由编译器执行)</li><li>其它符号(由编译器识别)</li></ul><p>汇编语言的核心是汇编指令，它决定了汇编语言的特性。</p><figure class="image-box">                <img src="https://file.ourfor.top/study/%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/assembly.svg" alt="汇编语言" title class>                <p>汇编语言</p>            </figure><ul><li>地址总线</li><li>数据总线</li><li>控制总线</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> xml </tag>
            
            <tag> plist </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub及git初级玩法</title>
      <link href="/2018/10/25/GitHub%E5%8F%8Agit%E5%88%9D%E7%BA%A7%E7%8E%A9%E6%B3%95/"/>
      <url>/2018/10/25/GitHub%E5%8F%8Agit%E5%88%9D%E7%BA%A7%E7%8E%A9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><!--//i.loli.net/2018/10/25/5bd140854d6b6.jpg--> <p>使用<a href="https://github.com" target="_blank" rel="noopener">Github</a>一年又余了，感觉<strong><em>GitHub</em></strong>还是非常好用的，在这个平台上不仅能学到很多东西，还能认识一些有意思的人。最近同学对GitHub很感兴趣，不知道该如何入门，顺手记录一下。这是一篇5000字+的多图长文(<strong>持续更新ING</strong>)。<br><a id="more"></a></p><h1 id="GitHub是做什么的？"><a href="#GitHub是做什么的？" class="headerlink" title="GitHub是做什么的？"></a><code>GitHub</code>是做什么的？</h1><ul><li>GitHub是全球最大的同性社交平台，业界人称<code>GayHub</code>, 今年微软喜提全球最大的社交平台<strong><em>GitHub</em></strong>. 好吧，上面是来搞笑的😄, <strong><em>GitHub</em></strong>是一个代码托管的平台，类似于这样的平台还有<code>GitLab</code>、<code>Coding</code>、<code>Bitbucket</code>等等；之所以叫GitHub是因为它只支持<code>Git</code>这一种版本控制工具。GitHub这个单词拆分开来就是<code>Git</code>和<code>Hub</code>,用过<code>Usb Hub</code>的人都知道hub是一个类似集线器的东西。</li></ul><p><strong><a href="https://github.com/ten#" target="_blank" rel="noopener">Thank you for 10 years</a></strong></p><div id="dplayer1" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer1"),"theme":"#FADFA3","loop":true,"preload":"none","video":{"url":"https://file.ourfor.top/movie/Thank%20you%20for%2010%20years%20of%20code-hQXV70Z4cFI.mp4","pic":"https://file.ourfor.top/source/ourfor/github_ten.png"},"danmaku":{"id":"9E2E3368B56CDBB4","api":"http://dplayer.daoapp.io"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><h1 id="开始使用GitHub"><a href="#开始使用GitHub" class="headerlink" title="开始使用GitHub"></a>开始使用GitHub</h1><ul><li style="list-style: none"><input type="checkbox" checked> 注册GitHub账号</li><li style="list-style: none"><input type="checkbox" checked> 建立Repo, 添加<code>ssh key</code></li><li style="list-style: none"><input type="checkbox" checked> git的简单使用以及一些GUI的GitHub客户端</li><li style="list-style: none"><input type="checkbox" checked> Commit History 以及 issue</li><li style="list-style: none"><input type="checkbox" checked> 如何编写README文件</li><li style="list-style: none"><input type="checkbox" checked> 如何贡献代码– Pull request</li><li style="list-style: none"><input type="checkbox" checked> 如何为项目添加开源协议</li><li style="list-style: none"><input type="checkbox" checked> 如何在GitHub上面写日记</li><li style="list-style: none"><input type="checkbox" checked> 为项目添加web文档</li><li style="list-style: none"><input type="checkbox" checked> 编译、部署以及添加贴纸</li></ul><p>先准备写这些吧。<br><strong>多图警告</strong>⚠️, 本博客文章配有大量图片, 请注意流量。</p><hr><p>下面以全球最大的开源社区<code>GitHub</code>为例(今年是GitHub十周年)。</p><h3 id="注册GitHub账号"><a href="#注册GitHub账号" class="headerlink" title="注册GitHub账号"></a>注册GitHub账号</h3><p>首先，在浏览器中打开<a href="https://github.com" target="_blank" rel="noopener">GitHub</a>, 映入眼帘的是一只黑色章鱼🐙猫🐱，是不是和我的衣服上的标志差不多😝。<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/25/5bd139d1c1fc5.png" alt="GitHub" title class>                <p>GitHub</p>            </figure></p><ul><li><code>Sign in</code>就是登陆啦，如果你注册了一个账号就直接登陆就是喽</li><li><code>Sign up</code>注册一个新的账号</li></ul><figure class="image-box">                <img src="https://i.loli.net/2018/12/08/5c0be71ce6be4.png" alt="Sign up" title class>                <p>Sign up</p>            </figure><ul><li><p><code>Username</code>填一个简单一点的英文名，因为以后你的博客可以通过<code>Username.github.io</code>来访问的，所以起一个好点的、不太长的名字就很有必要了，比如我的这个<code>Username</code>是<code>ourfor</code>,很短也很好记。</p></li><li><p><code>Email address</code>填个QQ邮箱📮也是OK的啦</p></li><li><p><code>Password</code>这个你懂得😳😳</p></li><li><p><code>step2和step3</code>这个由于我注册过了，我就没打开看了，你看着填吧。</p></li></ul><blockquote><p>这个B的英语我也是服了。</p></blockquote><!--这个B是指彭伏军--><div id="dplayer2" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer2"),"theme":"#FADFA3","loop":true,"preload":"none","video":{"url":"https://file.ourfor.top/study/GitHub-Learning-Guide/Introduction%20to%20GitHub/What%20is%20GitHub-w3jLJU7DT5E.mp4","pic":"https://file.ourfor.top/source/other/github.png"},"danmaku":{"id":"9E2E3368B56CDBB4","api":"http://dplayer.daoapp.io"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><p>注册完登陆我们就来到了这样的一个界面：<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/25/5bd13b2126bbb.png" alt="Home Page" title class>                <p>Home Page</p>            </figure><br>我们打开页面右上角的<code>Setting</code>, 打开<code>Your Profile</code>, 就会跳转到我们的个人主页：<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/25/5bd13c3caae63.png" alt="不要盗我的图，再盗就全绿了😆" title class>                <p>不要盗我的图，再盗就全绿了😆</p>            </figure></p><h4 id="下载git"><a href="#下载git" class="headerlink" title="下载git"></a>下载<code>git</code></h4><p>这里我们的主角登场了，就是<a href="https://git-scm.com/" target="_blank" rel="noopener">Git</a>, 对于<strong><em>Unix-Like</em></strong>的操作系统, 就不用下载了, 直接从源安装就好了。对于<code>Windows</code>操作系统, 下载最新的<a href="https://github.com/git-for-windows/git/releases/download/v2.19.1.windows.1/Git-2.19.1-64-bit.exe" target="_blank" rel="noopener">Git</a>。</p><p>以Windows上面为例：<br>安装完我们的Git之后, 我们需要生成一对<code>SSH Key</code>, 打开安装的<code>Git bash</code>。</p><p>在<code>Windows10</code> 的搜索框中查找<strong><em>Git bash</em></strong>,或者点击Windows徽键，在最近添加中打开，在<code>Git bash</code>键入如下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pwd</span>                <span class="comment">#print working directory显示当前路径。</span></span><br></pre></td></tr></table></figure></p><h4 id="创建Repo"><a href="#创建Repo" class="headerlink" title="创建Repo"></a>创建Repo</h4><p>新建一个<code>Repository</code>(以下简称<code>Repo/repo</code>)，点击页面上面的<code>New repository</code><br><figure class="image-box">                <img src="https://i.loli.net/2018/12/08/5c0be7100ebc6.png" alt="New repository" title class>                <p>New repository</p>            </figure></p><ul><li>这个<code>Repository name</code>,你随意,不过并不建议用中文名.</li><li><code>Public</code>在你没有付费或者使用学生包的时候，我们只能创建<code>public</code>类型的repo，其实已经够用了。然后点击<code>Create repository</code>就可以完成创建。</li><li><code>Description</code>可选。建议勾选☑️<code>Initialize this repository with a README</code></li></ul><p>这时候就会打开仓库主页，依次点击页面右侧的<code>Clone or download</code>、<code>Use SSH</code>复制框中的<code>Repo</code>地址，待会要用。</p><h4 id="添加部署密钥"><a href="#添加部署密钥" class="headerlink" title="添加部署密钥."></a>添加部署密钥.</h4><p>打开<code>Git bash</code>，输入<code>ssh-keygen -t rsa -C &quot;2320813747@qq.com&quot;</code>,这个邮箱地址换成你的。连续四次回车就生成了一对密钥。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Your identification has been saved <span class="keyword">in</span> /c/Users/zip/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /c/Users/zip/.ssh/id_rsa.pub.</span><br></pre></td></tr></table></figure></p><p>它会告诉你密钥生成在哪个文件夹,上面是我的密钥生成路径，下面要相应替换成你的，使用<code>cat</code>来查看公钥内容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /c/Users/zip/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></p><p>复制输出的内容，打开<code>GitHub</code>，点击页面右侧头像旁边的倒三角，打开<code>Settings</code>，在页面左侧的<code>Personal settings</code>下面定位到<code>SSH and GPG keys</code>这一栏,点击右侧的<code>New SSH key</code>来添加一个密钥，其中<code>Title</code>随意,<code>Key</code>填写上一步<code>Git bash</code>里面生成的那个。最后<code>Add SSH key</code>就行了。</p><figure class="image-box">                <img src="https://i.loli.net/2018/10/25/5bd15a0c89c96.png" alt="Add SSH keys" title class>                <p>Add SSH keys</p>            </figure><h3 id="git的简单使用"><a href="#git的简单使用" class="headerlink" title="git的简单使用"></a>git的简单使用</h3><h4 id="git命令"><a href="#git命令" class="headerlink" title="git命令"></a>git命令</h4><p>下面命令均在<code>Git bash</code>或<code>Terminal</code>中执行。<br>打开我们的项目仓库页面, 复制仓库地址。将远程仓库克隆到本地计算机：<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/25/5bd188e2f1e3c.png" alt="Repo Address" title class>                <p>Repo Address</p>            </figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@github.com:ourfor/Java_note.git <span class="comment"># 使用ssh方式clone, 那么你必须在该仓库中添加你的ssh key, 所以对于别人项目你只能使用https的方式clone。</span></span><br><span class="line">或</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/ourfor/Java_note.git</span><br></pre></td></tr></table></figure><p>接下来我们为Repo添加文件, 这里我使用数据流重定向来创建一个文件。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e <span class="string">"hello world"</span> &gt; firstfile.c <span class="comment"># 你没必要这么骚吧, 直接在文件管理器里面移个文件进去不就好了</span></span><br></pre></td></tr></table></figure></p><p>是不是这样我们放在项目目录下的文件就变成我们的项目文件了呢？肯定不是啊, 那我不是随便放个文件都能改变你的项目文件了, 再者, 版本控制肯定是会有版本记录的啊！这时候我们就需要手动添加文件到我们的项目文件了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add firstfile.c <span class="comment"># 添加firstfile.c到项目</span></span><br></pre></td></tr></table></figure><p>如果每次这样添加不麻烦吗？有时候我都不知道生成了什么文件, 更简易的方法是每次添加项目目录里面的所有文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add . <span class="comment"># 或者git add -A A就是all的缩写</span></span><br></pre></td></tr></table></figure><p>接下来为我们的更改添加注释信息:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">"first commit"</span>  <span class="comment">#其中引号里面的内容就是我们添加的提交记录</span></span><br></pre></td></tr></table></figure><p>添加完提交记录后我们还可以将更改推送到远程仓库:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master   <span class="comment">#将本地更改push到分支master</span></span><br></pre></td></tr></table></figure><p>有时版本冲突，可以使用强制推送:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -f origin master  <span class="comment">#参数f就是force的意思</span></span><br></pre></td></tr></table></figure><p>对应的如果远程仓库的版本比较新, 我们可以将远程仓库的内容同步到本地计算机：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin master    <span class="comment">#将分支master的内容pull到本地计算机</span></span><br></pre></td></tr></table></figure><p>有时我们开发软件，不同的开发阶段我们的软件有不同的开发版本，比如<code>alpha</code>、<code>beta</code>和<code>gamma</code>. 我们希望一个仓库同时存在多个不同的版本，我们可以充分利用<code>branch</code>的功能。</p><ul><li>创建一个新分支</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b alpha</span><br></pre></td></tr></table></figure><ul><li>切换分支</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout alpha</span><br></pre></td></tr></table></figure><p>当我们在git中切换分支以后，在文件浏览器里面就看不到其他分支的文件，是不是很方便？</p><p>举个栗子🌰<br><code>骑士飞行棋</code>与<code>坦克大战</code>并存, <a href="https://github.com/ourfor/Game_java" target="_blank" rel="noopener">Game_java</a></p><h6 id="一般该怎么用git？"><a href="#一般该怎么用git？" class="headerlink" title="一般该怎么用git？"></a>一般该怎么用git？</h6><p>在添加好ssh公钥后，我们先在本地创建一个目录，以<code>RepoLocal</code>做目录名为例:</p><ul><li>初始化<code>RepoLocal</code>目录，使之能够被git管理(设置一次就好了)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init RepoLocal  <span class="comment"># 在RepoLocal上级目录执行，如果在目录RepoLocal中则执行git init</span></span><br></pre></td></tr></table></figure><ul><li>关联远程git仓库(一次)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin RepoRemoteAddress <span class="comment"># RepoRemoteAddress 就是你的远程仓库地址</span></span><br></pre></td></tr></table></figure><ul><li>设置提交人信息(每次提交都会显示某某某提交，信息就是在这里设置,一次性设置)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"ourfor"</span>    <span class="comment">#不太记得是不是这条命令了，反正到时候会有英文提示的，看看提示就好了</span></span><br><span class="line">git config --global user.email <span class="string">"ourfor@foxmail.com"</span>  <span class="comment">#用户名和邮箱用于标识和查找头像，如果不介意，随意喽</span></span><br></pre></td></tr></table></figure><hr><ul><li>添加更改文件到repo</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .  <span class="comment"># 添加当前目录所有文件及目录  git add -A</span></span><br></pre></td></tr></table></figure><ul><li>为更改添加注释说明信息</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">"some information to tell others why you change the file or code"</span></span><br></pre></td></tr></table></figure><ul><li>推送到远程仓库</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master   <span class="comment">#这里推送到主分支，可以推送到其他分支，第一次推送要加参数u，git push -u origin master</span></span><br></pre></td></tr></table></figure><ul><li>如果远程仓库版本比本地仓库版本新，本地就需要pull</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br></pre></td></tr></table></figure><h4 id="GUI的GitHub客户端"><a href="#GUI的GitHub客户端" class="headerlink" title="GUI的GitHub客户端"></a>GUI的GitHub客户端</h4><p>对于GitHub的GUI客户端我是比较推荐<a href="https://www.gitkraken.com/" target="_blank" rel="noopener">GitKraken</a>尽管它在我的电脑里面已经打入冷宫很长一段时间了, 不过它确实比Web端的美观一点, 对各个平台的支持都比较好。还是比较习惯用git的命令来管理.</p><figure class="image-box">                <img src="https://i.loli.net/2018/10/25/5bd15c3865a22.png" alt="GitKraken" title class>                <p>GitKraken</p>            </figure><p>我们下载安装的git也是有gui的界面的，使用指令<code>gitk</code>来打开gui界面</p><h3 id="如何编写README文件"><a href="#如何编写README文件" class="headerlink" title="如何编写README文件"></a>如何编写README文件</h3><p>READMD文件作为我们项目的一个说明文件, 我们如何编辑README文件,才能让它美观简洁呢？README文件以后缀.md结尾，它支持markdown语法，同时支持部分html语法，在每个repo中，它会自动解析README.md这个文件.</p><p>由于经常使用markdown写笔记和文章,都已经形成自己的风格了,所以下面的语法介绍是我经常使用的, 有很多等价的语法，不再此处一一列举<br>Markdown语法：<br>一级标题: #<br>二级标题: ##<br>等等…</p><figure class="image-box">                <img src="https://i.loli.net/2018/10/29/5bd6a51959c0f.png" alt title class>                <p></p>            </figure><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 算法概述</span></span><br><span class="line"><span class="section">## 递归与分治策略</span></span><br></pre></td></tr></table></figure><p>加粗: <strong>第一个认识的人就是你</strong><br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**第一个认识的人就是你**</span></span><br></pre></td></tr></table></figure></p><p>倾斜: <em>很高兴</em><br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*很高兴*</span></span><br></pre></td></tr></table></figure></p><p>加粗并倾斜: <strong><em>nice</em></strong><br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">***nice**</span>*</span><br></pre></td></tr></table></figure></p><p>插入代码：</p><ul><li>插入c语言代码：<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Hello world\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```c</span></span><br><span class="line"><span class="code">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="code">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="code">int main()&#123;</span></span><br><span class="line"><span class="code">    printf("Hello world\n");</span></span><br><span class="line"><span class="code">    return 0;</span></span><br><span class="line"><span class="code">&#125;</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure><ul><li>插入shell命令<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install git -y</span><br><span class="line">sudo dnf update -y</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">```bash</span></span><br><span class="line"><span class="code">sudo dnf install git -y</span></span><br><span class="line"><span class="code">sudo dnf update -y</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure><p>规则就是三个反引号+需要<code>语法高亮</code>的<strong>语言类型</strong></p><p>引用书中的话或名人名言:</p><blockquote class="normal">书籍是人类进步的阶梯 —- 高尔基</blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 书籍是人类进步的阶梯 ---- 高尔基</span></span><br></pre></td></tr></table></figure><p>小黑点:</p><ul><li>你还是这么好看</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>你还是这么好看</span><br></pre></td></tr></table></figure><p>任务列表(有x显示为勾选，留空表示不勾选):</p><ul><li style="list-style: none"><input type="checkbox" checked> 高等数学</li><li style="list-style: none"><input type="checkbox"> 线性代数</li></ul><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>[x] 高等数学</span><br><span class="line"><span class="bullet">- </span>[ ] 线性代数</span><br></pre></td></tr></table></figure><p>反白:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">` root `</span> 在Unix/Linux操作系统中是指具有最高权限的用户</span><br></pre></td></tr></table></figure><p><code>root</code> 在Unix/Linux操作系统中是指具有最高权限的用户</p><p>删除线:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~浮生若梦, 为欢几何.~~</span><br></pre></td></tr></table></figure><p><del>浮生若梦, 为欢几何.</del></p><p>文章分割线:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">---</span><br></pre></td></tr></table></figure><hr><p>插入图片:<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">life</span>](<span class="link">https://i.loli.net/2018/10/06/5bb815d8e14fd.jpg</span>)</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://i.loli.net/2018/10/06/5bb815d8e14fd.jpg" alt="life" title class>                <p>life</p>            </figure><ul><li>方括号内部是对图片的描述，在github是不会显示出来的,也就是html中的alt</li><li>圆括号里面的网址可以是图片的绝对路径地址也可以是相对路径</li></ul><p>添加超链接:<br><a href="https://github.com" target="_blank" rel="noopener">GitHub</a><br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">GitHub</span>](<span class="link">https://github.com</span>)</span><br></pre></td></tr></table></figure></p><p>表格:</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">|这是表头|A|B|</span><br><span class="line">|:-|-:|:-:|</span><br><span class="line">|h|a|b|</span><br></pre></td></tr></table></figure><p>实际效果:</p><table><thead><tr><th style="text-align:left">这是表头</th><th style="text-align:right">A</th><th style="text-align:center">B</th></tr></thead><tbody><tr><td style="text-align:left">h</td><td style="text-align:right">a</td><td style="text-align:center">b</td></tr></tbody></table><ul><li><code>:-</code> 这是左对齐</li><li><code>-:</code> 这是右对齐</li><li><code>:-:</code> 这是居中对齐</li></ul><p>显然这种表格是很简单的, 对于更加复杂的表格, markdown就有点心有余而力不足了, 还好兼容html, 我们就可以用html的方式插入表格:</p><table class="table"><br><th><br>  </th><td align="center">星期一</td><br>  <td align="center">星期二</td><br>  <td align="center">星期三</td><br>  <td align="center">星期四</td><br>  <td align="center">星期五</td><br>  <br>  <tr><br>  <td>第一节</td><br>  <td align="center" rowspan="2">高等数学A(理化214)</td><br>  <td align="center" rowspan="2">线性代数(理化327)</td><br>  <td align="center" rowspan="4">软件综合(一)(机房)</td><br>  <td align="center" rowspan="2">程序设计基础(理化327)</td><br>  <td align="center" rowspan="4">软件综合(一)(机房)</td><br>  </tr><br>  <tr><br>  <td>第二节</td><br>  </tr><br>  <tr><br>  <td>第三节</td><br>  <td align="center" rowspan="2">程序设计基础(理化327)</td><br>  <td align="center" rowspan="2">大学英语(至105)</td><br>  <td align="center" rowspan="2">大学体育(体育馆)</td><br>  </tr><br>  <tr><br>  <td>第四节</td><br>  </tr><br>  <tr><br>  <td align="center">午安</td><br>  <td align="center" colspan="5">我的课表居然这么满🍎🍏🍐🍑🍒🍓🥝🍅</td><br>  </tr><br>  <tr><br>  <td>第五节</td><br>  <td align="center" rowspan="4">程序设计基础(机房)</td><br>  <td align="center" rowspan="3">面向对象软件方法学(至308)</td><br>  <td align="center" rowspan="3">算法分析与设计(至308)</td><br>  <td></td><br>  <td align="center" rowspan="3">操作系统(至116)</td><br>  </tr><br>  <tr><br>  <td>第六节</td><br>  <td></td><br><br>  </tr><br>  <tr><br>  <td>第七节</td><br>  <td></td><br>  </tr><br>  <tr><br>  <td>第八节</td><br>  <td></td><br>  <td></td><br>  <td></td><br>  <td></td><br>  </tr><br>  <tr><br>  <td align="center">傍晚</td><br>  <td align="center" colspan="5">认识你真好🍇🍈🍉🍊🍋🍌🍍</td><br>  </tr><br>  <tr><br>  <td>第一节</td><br>  <td align="center" rowspan="3">Java校选课(至502)</td><br>  <td></td><br>  <td></td><br>  <td></td><br>  <td align="center" rowspan="3">概率论与数理统计(至117)</td><br>  </tr><br>  <tr><br>  <td>第二节</td><br>  <td></td><br>  <td></td><br>  <td></td><br>  </tr><br>  <tr><br>  <td>第三节</td><br>  <td></td><br>  <td></td><br>  <td></td><br>  </tr><br></table><details><summary><strong>HTML代码</strong></summary><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">center</span>&gt;</span>星期一<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">center</span>&gt;</span>星期二<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">center</span>&gt;</span>星期三<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">center</span>&gt;</span>星期四<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">center</span>&gt;</span>星期五<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>第一节<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">center</span> <span class="attr">rowspan</span>=<span class="string">2</span>&gt;</span>高等数学A(理化214)<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">center</span> <span class="attr">rowspan</span>=<span class="string">2</span>&gt;</span>线性代数(理化327)<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">center</span> <span class="attr">rowspan</span>=<span class="string">4</span>&gt;</span>软件综合(一)(机房)<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">center</span> <span class="attr">rowspan</span>=<span class="string">2</span>&gt;</span>程序设计基础(理化327)<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">center</span> <span class="attr">rowspan</span>=<span class="string">4</span>&gt;</span>软件综合(一)(机房)<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>第二节<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>第三节<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">center</span> <span class="attr">rowspan</span>=<span class="string">2</span>&gt;</span>程序设计基础(理化327)<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">center</span> <span class="attr">rowspan</span>=<span class="string">2</span>&gt;</span>大学英语(至105)<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">center</span> <span class="attr">rowspan</span>=<span class="string">2</span>&gt;</span>大学体育(体育馆)<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>第四节<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">center</span>&gt;</span>午安<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">center</span> <span class="attr">colspan</span>=<span class="string">5</span>&gt;</span>我的课表居然这么满🍎🍏🍐🍑🍒🍓🥝🍅<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>第五节<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">center</span> <span class="attr">rowspan</span>=<span class="string">4</span>&gt;</span>程序设计基础(机房)<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">center</span> <span class="attr">rowspan</span>=<span class="string">3</span>&gt;</span>面向对象软件方法学(至308)<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">center</span> <span class="attr">rowspan</span>=<span class="string">3</span>&gt;</span>算法分析与设计(至308)<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">center</span> <span class="attr">rowspan</span>=<span class="string">3</span>&gt;</span>操作系统(至116)<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>第六节<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>第七节<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>第八节<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">center</span>&gt;</span>傍晚<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">center</span> <span class="attr">colspan</span>=<span class="string">5</span>&gt;</span>认识你真好🍇🍈🍉🍊🍋🍌🍍<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>第一节<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">center</span> <span class="attr">rowspan</span>=<span class="string">3</span>&gt;</span>Java校选课(至502)<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">center</span> <span class="attr">rowspan</span>=<span class="string">3</span>&gt;</span>概率论与数理统计(至117)<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>第二节<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>第三节<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><br><br></details><p>数学公式:</p><blockquote class="normal">数学是科学的语言, 学习笔记里面怎么可以没有数学公式呢？</blockquote><ul><li><code>\\(a + b\\)</code><br>\(a + b\) </li><li><code>$$a + b$$</code><br>$$a + b$$ </li><li><code>$$\sum_{i=0}^n i^2 = \frac{(n^2+n)(2n+1)}{6}$$</code><br>$$\sum_{i=0}^n i^2 = \frac{(n^2+n)(2n+1)}{6}$$</li><li><code>$$\mathscr{ABCDEFGHIJKLMNOPQRSTUVWXYZ}$$</code><br>$$\mathscr{ABCDEFGHIJKLMNOPQRSTUVWXYZ}$$ </li></ul><p>markdown编辑的时候最好用<code>$</code>符号括起来。否则就需要转义字符<br>比如一个<code>$</code>就是是这样:<code>$\sum_{i=0}^n i^2 = \frac{(n^2+n)(2n+1)}{6}$</code>:</p><p>$\sum_{i=0}^n i^2 = \frac{(n^2+n)(2n+1)}{6}$</p><p><code>$$\sum_{i=0}^n i^2 = \frac{(n^2+n)(2n+1)}{6}$$</code><br>$$\sum_{i=0}^n i = \frac{n+1}{2}$$</p><p>原本语法中两个<code>\\</code>, 你还需要加一个<code>\</code>来转义:</p><p>$$<br>    \begin{pmatrix}<br>    1 &amp; a_1 &amp; a_1^2 &amp; \cdots &amp; a_1^n \\<br>    1 &amp; a_2 &amp; a_2^2 &amp; \cdots &amp; a_2^n \\<br>    \vdots  &amp; \vdots&amp; \vdots &amp; \ddots &amp; \vdots \\<br>    1 &amp; a_m &amp; a_m^2 &amp; \cdots &amp; a_m^n<br>    \end{pmatrix}<br>$$</p><p>我不是学<strong>数学</strong>的所以我很少用数学公式，如果你对数学公式的用法感兴趣你可以看看<a href="https://www.mathjax.org/" target="_blank" rel="noopener">Mathjax官网</a>的说明。一般的markdown编辑器和解析器都支持<code>Mathjax</code></p><p>$$<br>    \begin{pmatrix}<br>    🍇 &amp; 🍈 &amp; 🍉 &amp; 🍊 \\<br>    🍋 &amp; 🍌 &amp; 🍍 &amp; 🍎 \\<br>    🍏 &amp; 🍐 &amp; 🍑 &amp; 🍒 \\<br>    🍓 &amp; 🥝 &amp; 🍅 &amp; 😳<br>    \end{pmatrix}<br>$$</p><h3 id="Commit-History-以及-issue"><a href="#Commit-History-以及-issue" class="headerlink" title="Commit History 以及 issue"></a>Commit History 以及 issue</h3><h4 id="Commit-History使用场景"><a href="#Commit-History使用场景" class="headerlink" title="Commit History使用场景"></a>Commit History使用场景</h4><h5 id="情景一"><a href="#情景一" class="headerlink" title="情景一"></a>情景一</h5><p>旺仔是一名大二计算机专业的学生，这个学期学校开了一门<code>操作系统</code>的课程，</p><figure class="image-box">                <img src="https://i.loli.net/2018/11/16/5beee24e5c8b2.png" alt="你渴望力量吗？你想更深入了解计算机吗？" title class>                <p>你渴望力量吗？你想更深入了解计算机吗？</p>            </figure><p>操作系统向来都是他的最爱，上操作系统的副教授使用的教材是国外经典操作系统教材，这个教材各方面都不错，唯一得缺点就是实体书太贵，完整的pdf电子书📚又得收费。每章都是免费的，在线网站<a href="http://pages.cs.wisc.edu/~remzi/OSTEP" target="_blank" rel="noopener">OSTEP</a><br><figure class="image-box">                <img src="https://i.loli.net/2018/11/16/5beee24e72c14.png" alt="Three Easy Pieces" title class>                <p>Three Easy Pieces</p>            </figure><br>在他Google一圈以后，他累了，在他快要放弃的时候，他想到了<a href="https://github.com" target="_blank" rel="noopener">GitHub</a>—-这个全球最大的开源社区，打开GitHub主页，键入<code>ostep</code>, 得到了以下结果：</p><figure class="image-box">                <img src="https://i.loli.net/2018/11/16/5beee24da73e7.png" alt="检索结果" title class>                <p>检索结果</p>            </figure><p>忽略前面两项搜索🔍结果，之前他找书的时候在<code>Commits</code>里面并没有这两项提交，他发现了这一项提交<code>Delete Operating Systems - Three Easy Pieces.pdf</code>, 他点进去了,<br><figure class="image-box">                <img src="https://i.loli.net/2018/11/16/5beee24d7e67c.png" alt="ostep，点击右侧的view就可以下载了" title class>                <p>ostep，点击右侧的view就可以下载了</p>            </figure></p><p>由此我们推测在这一项记录📝提交前，这个仓库里面肯定是有<code>Operating Systems - Three Easy Pieces.pdf</code>这个文件的, 并且这个文件位于目录<code>Computer_Science</code>于是我们进入仓库的主界面，点击上方的<code>Commits</code>, 定位到 <code>Delete Operating Systems - Three Easy Pieces.pdf</code>, 我们选择比这一项提交更早的一次提交，点击右侧的 <code>&lt;&gt;</code>,即<strong><em>Browse the repository at this point in the history</em></strong>(回到那时的仓库), 这里我选择de是这一项提交<code>Added bitcoin books</code>. 找到这个文件并下载。</p><figure class="image-box">                <img src="https://i.loli.net/2018/11/16/5beee24e5d874.png" alt="ostep" title class>                <p>ostep</p>            </figure><p>当然，要下载这本教程的完整的电子书📚，我们可以直接在GitHub的检索结果中下载更好的。这仅仅是其中一个应用场景，从这里我们可以知道，GitHub会将你每个版本的代码都保存下来，充分利用<code>Commits</code>，才能更好更舒服的开发。</p><h5 id="情景二"><a href="#情景二" class="headerlink" title="情景二"></a>情景二</h5><p>曾哥是一名大一软件专业的学生，他觉得前端的东西很炫酷，并且具备一定的前端基础，于是他用GitHub和coding提供的<code>pages</code>,搭了一个基于hexo的静态博客网站，他看上了一个开源的主题<a href="https://github.com/codefine/hexo-theme-mellow" target="_blank" rel="noopener">Mellow</a>,在使用Mellow这款主题的时候，他发现使用<code>html</code>的<code>&lt;table&gt;</code> 标记插入表格的时候，表格离上一段文字总是莫名其妙的出现大段空白，他在经过排查得出这不是主题的bug，于是他在主题作者的仓库提了一个<code>issue</code>(这个B，真是令人匪夷所思，都不是主题的bug还提，md，你总不能让我去hexo官网提交bug吧，我得等多久，还有我也认识主题作者很久了😒)，主题作者<a href="https://github.com/codefine" target="_blank" rel="noopener">Michael.Lu</a>很热心，很快就解决了这个<code>hexo引擎解析的bug</code>，然而我们的曾哥不满足一个网站，于是他又搭了一个<a href="https://diary.ourfor.top" target="_blank" rel="noopener">diary</a>,这回他并没有使用<code>Mellow</code>这个主题，他又遇到了这个表格的问题，于是他想到了之前修复这个bug的<code>mellow</code>仓库，查看<a href="https://github.com/codefine/hexo-theme-mellow/commits/master" target="_blank" rel="noopener">commits</a>,他找到了<a href="https://github.com/codefine/hexo-theme-mellow/commit/1cabd6466e21a8cf527e783cf7ac3338705db11e" target="_blank" rel="noopener">fixed table display in the index-card</a></p><figure class="image-box">                <img src="https://i.loli.net/2018/11/16/5beee24d9ffaf.png" alt="commits" title class>                <p>commits</p>            </figure><p>点击这段文字的超链接或者右侧的7位奇妙字串😳，我们可以清楚的看到在哪个位置改动了那些代码，当然这段代码不能直接粘贴复制，但是却给我提供了修复的思路。所以很快我就将另一个主题的<code>&lt;table&gt;</code>修复好了。</p><figure class="image-box">                <img src="https://i.loli.net/2018/11/16/5beee24da60c2.png" alt="fix table" title class>                <p>fix table</p>            </figure><h4 id="issue"><a href="#issue" class="headerlink" title="issue"></a>issue</h4><p>你在使用的时候遇到任何问题，都可以通过点击仓库主页上方的<code>Issues</code>，和作者以及其他人讨论。支持<em>MarkDown</em>语法哦😯。</p><figure class="image-box">                <img src="https://i.loli.net/2018/11/16/5beee24d7e2f8.png" alt="issues" title class>                <p>issues</p>            </figure><h3 id="添加开源协议-License"><a href="#添加开源协议-License" class="headerlink" title="添加开源协议(License)"></a>添加开源协议(License)</h3><p>当我们的项目达到了一定的规模，贡献者的人数达到了一定的数量，我们就需要为项目添加开源协议. </p><ul><li>为什么要添加开源协议？<br>简言之，随着你的代码越写越多，你难免会用到一些其他人的优秀代码，或者是一小段，即使是开源的，也并意味着可以为所欲为，你浏览博客和开源项目的时候也应该能看到一些声明，诸如<code>遵守国际禁止演绎3.0许可</code>、<code>请遵循BSD开源协议许可</code>等等，算了不扯了，我语言文字功底太差，重点是如何添加，协议的具体内容，在添加时都是可以查看的。</li></ul><blockquote><p>为项目添加开源协议</p><ul><li>创建repo时选择</li><li>创建repo后添加</li></ul></blockquote><h5 id="创建reop时选择"><a href="#创建reop时选择" class="headerlink" title="创建reop时选择"></a>创建reop时选择</h5><p>这个你在创建的时候选择一个开源协议就好了，没什么大的问题。</p><h5 id="创建repo后添加"><a href="#创建repo后添加" class="headerlink" title="创建repo后添加"></a>创建repo后添加</h5><h6 id="step-1"><a href="#step-1" class="headerlink" title="step 1"></a>step 1</h6><p>打开我们的仓库主页(<code>注意最好在项目的根目录添加</code>)，在目录浏览的上方有个<code>Create new file</code>。<br><figure class="image-box">                <img src="https://i.loli.net/2018/11/18/5bf0da29d3b22.png" alt="Create new file" title class>                <p>Create new file</p>            </figure></p><p>点进来，我们只需要输入<code>License</code>，输入完后，右侧就会出现<code>Choose a license template</code>, 选择一个合适的模板<br><figure class="image-box">                <img src="https://i.loli.net/2018/11/18/5bf0da7158af8.png" alt="Choose a license template" title class>                <p>Choose a license template</p>            </figure></p><h6 id="step-2"><a href="#step-2" class="headerlink" title="step 2"></a>step 2</h6><p><code>Review and submit</code>-&gt;<code>Commit new file</code>-&gt;<code>Create pull request</code>.我们就创建了一个pull的请求(什么意思自己领会😁)。<br><figure class="image-box">                <img src="https://i.loli.net/2018/11/18/5bf0de7084d85.png" alt="Review and submit" title class>                <p>Review and submit</p>            </figure><br><figure class="image-box">                <img src="https://i.loli.net/2018/11/18/5bf0defccfb70.png" alt="Commit new file" title class>                <p>Commit new file</p>            </figure><br><figure class="image-box">                <img src="https://i.loli.net/2018/11/18/5bf0df1a2a6eb.png" alt="Create pull request" title class>                <p>Create pull request</p>            </figure></p><p>依次点击<code>Merge pull request</code>-&gt;<code>Confirm merge</code>, 它会提示你<code>Pull request successfully merged and closed</code>, 至此我们的开源协议就添加好了</p><h3 id="如何贡献代码–-Pull-request"><a href="#如何贡献代码–-Pull-request" class="headerlink" title="如何贡献代码– Pull request"></a>如何贡献代码– Pull request</h3><p>正如物理学泰斗牛顿所言:<code>如果说我看得比别人更远些，那是因为我站在巨人的肩膀上</code>(暂且不讨论这句话的其他含义)，同样我们打算创建一个新的project的时候并不一定得从头开始，我们可以找找目前已有的项目，<code>fork</code>过来，有时发现了bug，修复之后还可以issue一个 <code>Pull require</code>，作者认为你的修改很好，就会合并你的请求，这样你就成为了这个项目的<code>Contributor</code>，当以后项目的<strong><em>Star</em></strong>和<strong><em>fork</em></strong>多了，这还能成为求职的一个加分项，下图就是我在<code>Mellow</code>这个主题贡献的代码.<br><figure class="image-box">                <img src="https://i.loli.net/2018/11/18/5bf0e2af938d1.png" alt="添加fancybox" title class>                <p>添加fancybox</p>            </figure></p><blockquote><p>问题来了，具体要怎么做呢?</p></blockquote><p>首先，你得<code>fork</code>一个repo，你自己原创的repo就不存在这种情况。你的repo名下面就会有<code>fork from xxx</code>，同时你做了一些更改以后，就可以通过页面上方的<code>New pull request</code></p><figure class="image-box">                <img src="https://i.loli.net/2018/11/18/5bf0e39a567ab.png" alt title class>                <p></p>            </figure><h3 id="为项目添加web文档"><a href="#为项目添加web文档" class="headerlink" title="为项目添加web文档"></a>为项目添加web文档</h3><p>在我们的项目，完成到一定的程度以后，<code>README</code>的局限性就很大了，我们可以考虑添加<code>Web文档</code>,其实也不难，README文件就可以作为文档页面.在我们repo上方的setting选项卡里面能找到<code>GitHub Pages</code>这一个选项卡。<br><figure class="image-box">                <img src="https://i.loli.net/2018/11/18/5bf0e66a009a2.png" alt="GitHub Pages" title class>                <p>GitHub Pages</p>            </figure></p><ul><li><code>source</code> 也就是我们文档的位置，位于哪个分支，哪个文件，这个你自己规划好，你可以放在任意一个分支的根目录或者子目录<code>doc</code>，其实也是可以创建一个专门用来放web文档的分支: <code>doc</code>、<code>web</code>之类的名字都是比较见文知义的。</li><li><code>theme</code> 一些现成的主题可供选择，如果你对主题中的一些样式不太满意，充分利用<code>Chrome</code>的开发者模式修改元素，就能得到你预期的结果。</li><li><code>custom domain</code> 绑定自己的域名，可选。</li></ul><p>可以直接将README里面的内容拷贝一份，添加到主页的<code>index.md</code>(文档首页),或者你熟悉<code>html</code>，也可以自己写<code>index.htm</code></p><blockquote><p>本博客网站就是部署在<code>GitHub</code>和<code>Coding</code>上面的一个静态网站。搭建方法见<a href="https://blog.ourfor.top/2018/03/06/hexo-github-coding%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/">hexo个人博客</a></p></blockquote><h3 id="写日记"><a href="#写日记" class="headerlink" title="写日记"></a>写日记</h3><p>GitHub上面的每次更改都会有一个时间记录📝，如果你懂<code>MarkDown</code>语法，那自然写起来得心应手，除了GitHub以外，<a href="https://gist.github.com/ourfor" target="_blank" rel="noopener">Gist</a>也是一个不错的选择，只不过需要科学上网或者ipv6才能访问。Gist是GitHub专门提供的一个写<code>gist</code>的网站，你想写什么就写什么</p><h3 id="编译、部署以及添加贴纸"><a href="#编译、部署以及添加贴纸" class="headerlink" title="编译、部署以及添加贴纸"></a>编译、部署以及添加贴纸</h3><p>自动编译是使用我们的<a href="https://travis-ci.org/" target="_blank" rel="noopener">travis-ci</a>,我们只要在项目更目录下面创建一个<code>.travis.yml</code>,里面填写一些编译的指令以及依赖。具体写哪些，不同的语言写法不同，根据官方提供的文档写就是了。但是一般都需要声明编程语言、操作系统这些。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">language: sh</span><br><span class="line"></span><br><span class="line">os:</span><br><span class="line">  - linux</span><br><span class="line">  - osx</span><br></pre></td></tr></table></figure></p><p>可以参考别人写的<code>.travis.yml</code></p><h5 id="添加贴纸"><a href="#添加贴纸" class="headerlink" title="添加贴纸"></a>添加贴纸</h5><p>GitHub官方提供的贴纸图标:<a href="https://shields.io/#/" target="_blank" rel="noopener">Shields.io</a></p><figure class="image-box">                <img src="https://i.loli.net/2018/11/18/5bf0f13a56aa9.png" alt title class>                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/11/18/5bf0f13c42029.png" alt title class>                <p></p>            </figure><p>在<code>search/project URL</code>中填入你repo的address(https形式不带git后缀),它就会自动生成一些<code>icon</code>,因为是<code>svg</code>的矢量图，是可以动态更新的。<br><figure class="image-box">                <img src="https://i.loli.net/2018/11/18/5bf0f48c7b6dd.png" alt="动态更新" title class>                <p>动态更新</p>            </figure><br>你html排好版之后写进README就好了。<code>Your Badge</code>和<code>Styles</code>是一些可以自定义的<code>icon</code>,其实就和<code>printf</code>的格式化输出字串差不多。它都有英文说明的。</p><hr><p>不过像这样盲目的贴是不可取的.</p><figure class="image-box">                <img src="https://i.loli.net/2018/11/18/5bf0f3c462896.png" alt="file.ourfor.top" title class>                <p>file.ourfor.top</p>            </figure><p>又要开始我的折腾了。<br><img src="https://i.loli.net/2018/11/18/5bf0fa3109c01.png" alt="Raspberry pi 3B"></p>]]></content>
      
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大学规划</title>
      <link href="/2018/10/23/%E5%A4%A7%E5%AD%A6%E8%A7%84%E5%88%92/"/>
      <url>/2018/10/23/%E5%A4%A7%E5%AD%A6%E8%A7%84%E5%88%92/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="密码是一个美女的学号" />    <label for="pass">密码是一个美女的学号</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX1+afw9UXGJrX8LVXNzIdYWHeQwVlco54A4aVSPXyfzUZPUiKqSVm2doThYEWILi5BTNDSIP4y0dmps+zMl7n/mQtrLXIfrqjGwWDXdhXcLLKsrLuAQaOxvzsB9XTa52lYtdjdmSEKqcSujSlcgz58BFJ8JNEX94/E8uEWp3kmZJMrab/AAikkVhV7kzo8u56pgmpmYsOSrC3MN8uKcIUWAFY4h5jUbYcW9m5kPTojHP59w9WCpBJrBzYI53athsBUC4HuTghJraq/M+bxoj1L6+IJJFGqI+Slsf1Bxz1IByb9v/70eCQ5v0FAowfIHPPaOjPw0uPbgQbsztOFZfXzbXmLQJpv2GljC+/QjKB2zmvhxt4bHxd2niAtKCg5bJYci47Z9iXtzJTn5bo3SvbekzxFOLJjpqtxx3gBte4m1IeIfWzEMKCYpgwyxKMdOVyvh0SF/HCerLmqS/bsuaEUSKIiDB2XofNbK1+b1/GP0GAtOgY14rF2zgi27AVtj8W+9u0a+Vyhw56aknCReLqU4DCEMiBen3RkefewzTsnLqfxu/yhMAAJGcqKfQASXHewO0pr+yLPyRS6u+Y7FkR3731QuEolwMuCwKz3RmNradItbnOcGYxOUlldb024bnIqqkK5DdSkERS6M84rBc6j1ePZxzu7BvyLICa7G0rcFulfMgOBKelOe8gNAJ89qXCkLcCHvqsDgpVMrG5riDZS4gVvDyrWS6V6vI+vIR7NGZ8NLx3M/EfNQj1oExOEWlYVLP7oNWuolemwRp+zX0GC1XCTe3qRFyZNzy2KEz9ZMtRmPweij3pvZZsSs+y6GAULD9+rncMHXaRMxfqI5FMEIk14agw7gJXjJcs9tePT23LfsQOtid8rr5P70an6VLnroZElOBKa/MuXnhLYtUlCArNPmYWPD0S0XdvddMVmSk7EgqIVfbKhPrs5xWVkZCpFV5EoW91o4vmjhNclDQxCWUT0vf2uY5SQePGhguh1nNQJAiSsXT25TN7T8ny0HCJyOqEAkld+ouwcDj+MD/pCgIP/WETZBTnD+cTUcCbDvxDtcV5Aa5ShMNks93iHuLzUzu4qf/lNiJ/grvTxY8IvgmwaTfFAcKIpO8buIRM8LzmpvvMOJN8LeRqKWrUtZJodv0ZO1/hGo33eWwgCdz+3BxPSKMwyzmM/nvnunNcAZ1vntl1l4GU7P/Jn1Xmh0AkRiDbM9kmXd+hKoHGA3g9qwiIz3EDGH5ZjAac+1gZqhmvxGgaJQh2tSd69ybc3yV0IeSw5cNxW2L25tjx3osKNYuR8FIdpIlm0iFYjrOSBkUZg4K0fmC5I6bVzgcNAw07rfDLOr2aU+uHKHc9h9LRkAjGpXzZ1ERf9Ft9zKBtwxd12whLpjn1kFxyar6kSvPW16kIHfAmOviFkf+2Ks8amuVHVu1+CVZu5oud0mbzGQMGaQl9j/t5/GbiuVv5XCfLtIVpPLL+5ikVWINShZUkrs7Y+4smGe7DwLUel+a9RyQtxA181m0/kK1XXVQeb1HO9+5p7fJFdEJGKb/mml9388RAHlgrjR1MqEDDE4Nrsm18eE30tyLrwu3QB8juRagQQ2f9fst22kP+bJKXriy3uAyO+IuujpiaFOlX8ycjyTn7xbr0NakFkRr4UBcbBUiJndydWDrMN9nPm1b6lmM9fa69Pi7IoAR3bX9wAjQVTswbOD58WYy84a5vrHdlgBIBt3DydIbHkmB7MBVQwXGnbrxQdFw0UzV66/tvdmfqrjmirtzYlRPcRNb9MemGRkd4PDKWU/oz9O93FUb18oV8TVqPF7FmSGyhGUSttkHaQoKW2Uf8E10DyCE40fO8DBY9Lnz7V2IuANoAgLPj5nG8JuLWU38S0NaDh8LJGIkn+HolC9vlwYHMw16ALnvOUH14WhhUE09q/ZHcCmST/A4J2rfhUgr2MfpaJEUwMue8H54FdJJJly68jPgRJH7GJR6QZB5855sFIfeGBu+7KDeASEBTNSAwO9lMm48l8oio7qH28McX2rrfnjL8a1TDjlRBoG+1GaFJgiEfPVvKMtl8nSTvmLd30GyTnzHHaTZVKRYXO3ieSNLpeUdsOf3rwxptiQxGV2WDvCs/QmK2WZuX/80ccymb039eDe25r9y7IkP9Q6FERYXfFpqSO68HuV44yudFokB6jY3Ary6px8OvlMh/J2PrwUS6MtgZXPS2vJldmmRwzYEBoUcB5IOLwRMAqAbFTMU774ps8CdVZb19BzDUHuvpGWWFQDlOOaLP8gN9arYAd/oJWhRDkPmZ+7HzwWwgvocYMyYOTvOO3Q63uaO+d/FCQDLEv844BkcwAlwfGl2WoiOKUkejpUpQYYO2acAmoIKuGGfGS7pfNsnqpUJMnvUUek1w7HPxOIlx3f04pXS/K4/ft2udJqhOB1ztoxFA6eRlzGGpNXJ1mPfLDU6SxPEv4MABgv8V5UC7gPlfp2RWYnqzrUD2DGBKoFlEMnPDvQFA1kQ8/8live4w4+TIJ11XuTqvwov+c5zX14wEu3Y7Gv68hZvtiTA+QcAHM0s24t9f1Ys2EuQVgjvBSUdTRDlbZWz3LOPp2/f1YUv7h2zo5katNbAeIgwfa2rb0WedgG2vEB78vx/n+aVy8A4MThACm5WCCdTodeZky+odsuDBRf97q9FVC35CDZa5E9OlJcITgUu8iW66l4uu0XXiBQ8JbO/1Ym1CrYI+d6g9qSnXbKawTgHni9qf4nqRm0nGf0he/fCxOLdFeKjf87qeuArNtGLnr3xQjW6uMdYyod9usGh0N9B62EHZsvYfRKKNtgOJgFX4gedmrToqFWfd0ASY2gxcqKbDJOTelHviyiXyuLBDMmCd7ckO5u5N8AUGNCJ3mgIC1IaVUczMkd5REBbmbwa6EIHQwrxUbbzk81kIczEnOrl/XceoRS0QC66wUxtnOLw2JZpWEMByYlaYROFOEqKXbliux30Q5ZOb/ndMkvuZe9mYCWy/rZfhotUlLDwm24hy9H1AURtIm9V4dkjE3PUGb+KQs9vThAPJGysmW9U05T1bwO67FAijsYq7AEwYIYhu+DuoYoHTS6HgUgW8dPA18L/40WSCNfqysu3hfr04CPLbTk/mWWmKYoXfylgPi31UxIFGkoYAYXTE50AW0DUX0unyLPiS72ik2AHnZLDpd47Fo+NMTdkyAEgDEVjkmGtpEWE0yBqkfoqdok2Za/vdGS9cIgXnrk4HWj7Mf28V0sDLuQ1L1TskQ5fZjbHsfxNuTYs+QaQ3JCMQzfFA1UxrU1ihyWsKJtstFuhCbWZFBRvQYF1Bs0ZjRCZELqw8Mc67OwCRnoPmNU99Es10Up+jwSbP/TkZGJp7YpED1eklNx1il30II8rxHDFN/7B2z9HnZbmzqv2DrPEIScbt8dzYW2y+6688x3dmntNN6XHQ/CV5dFhgmPp8xAjhG1aYMjxkFawvTniZHBgJdFGUThwP13fp2WgB4tKSce7SS2FV3L3ys4wO8R9AROb2Y7wZHtOHxhCSC02q5zth3pzJq7MtCScQqD2l48IZn7Ck30ZlO8eCXOAiKsddRX9wWRpVobDaorHmV0+TlXkXfNw1u/EAMt1jTb5lDDglV62FuQ7UPvt37RVoVNPB575ruPeqAFK4+gDK2Hxf34YivNhVuZrwdKwFhXCIJGNAiSu40Lx75wuEfzAG/i7Vmt6N4zWK7snNk4QOGi9rwBd0KEbZbukzSxcfaf6Fax6qcngYxdM0AGHl/mete4qXXXtFlx8p+cyYGf0AiTL2NrolO597OzZb/7ZX1az1sLpoJH5uDgaE1zGZJynRd8ab0wLdgTEzPwAX+9stUKNuqBwCJ5SUB12eKIs/LTVQRnskc6dGmreYFO5SZrhRllAGiUhtSgMDKuvnqVoW+EBIBlDH5OoSW75q6Mt4hJvvAWjlFpoV/1cqd5KFuB4VGAFL817x1Rqc4UxZY53sw2MkNZexaE7PZX4tA8Gl+JavmXDRlmRPnCxPU2p8T87xtCfDXoz591cAGofx4xsaIWDI/cJ8SwU/dnv/SmMhoipqZXgEwTRHZo31GyqlT8zzzhHTCTCVvpKehm6ouYQeCFdxh0MuAHWpMLaoL1R21BTgLLyz9vX0AWpWoU9PaxHIiIEGesl1SJVx+2Bz/GfSq5A8CKrYxGMM8u0oMX4CARZu8JoGIFbAI0PM0vhHqFYLwo4z5PcuIbnHeLP23S5615aGhvaxxyCZuFIA09nnUw+KYbLxjLE577eyb0AWJN/Ac+7GPn+tRfopSTgQk47Yuodu5Pz7Oqh6Eq8fBXrUVUOMT8i2I6pyA/YHCqnnNhCvBHGRVQGNgE/LGbW8Safck380VbMClzMykzhLyijABabrhRWL9xDmrLAYLy0eF67zbwG7a8pcA+faForH0b40U8D2IPY0Q0CL0ZXGefYlwiZH9/TQ/sNO5EBdMVLulE1/GyGBVc/RYkp01G7IqNmGySIfqzPuf72zoJ9fgwuir6IYjfAb9W0yRGIIbybYcsz23b6j/AroUfM9sDJ/0o9ggpfuilo1sjSKdGrgRiwpJKq1MmHXiHYib9yb4CndjgHfw3V54BLr/m7WQ7BbJMiOyNL7jgCvJKVUOtPVl6naXfmEy1pTcQeL2F3fTz51h0SayX3WWkbwZhf5ou5xUnEPsvWAzRTA0Ng86+BHiE4XIiRDPVFiuJwjgUajyfbDQnDD3ZtoRCnvrV0RrCLPqbEdGYgRXj5jGIv02lo9xK1c2BybBseXcGWHIArxxY0ZNGAUQg/0YdTYOIYsBNa/xihJ1PVuaJjyqI/HF9Zi2c8GkO9Vdkm4bgiPDneWZfyZu4Y8ns88J7eIuLGlxbv8vLQz0kWS6VXf85D3mZexRzkCNipbGawWml5NRuvOKYEaddD88wwNrmbag7JCvfp4eHzC38oheaGBf3HBr5D2gB24zg0cWgYdIXjLspgJZES4vbb8Q6Ns7sSDpdJuD5x4+o5VXJBMQc08X57+N9sAN8b4iRSEtnaGUCemvyu4WhDEd2KGhEUTdRCoGpmM12kRlmeuc9jzfamWtLOuNQjjeIZS8hhQlOq2udPOge+Q0ri0fZ/CiKsFm8/dXd137Y6EskhRK7VVkUkHpVs0jdvaBaCmR8KrAZT/zIUHNbKVwllyr6A4nvF933lGCy0uscy8/IW0LtT575/ppCRxxVYbGF/V9uECH3ouJ8EinX9rP/7ngEN3fCNnC0z+4RHnNdIjmrvF32BqEi5Fjgj8kzr7mnaqbkBuwJhaZmOQUwURfMp40uWsTuuRtmzy+34lWtOY2Ilm5wtemzf6nyMqMVOGVFPPA/ehGFPo+8/u7tXvucTws+i6OPX2CF05HfiX5pmBXsvdk/fbxFhtL0/4dCG8Z7Od5kWQar+mqqKjBatmHXGpGipt8bYUAEclG2MtKFQnIY0i59CbJAy7ky6uxAfx/k4b08Epe+RN8JpnkMiYt62Oq4joS9HJeeLu6eFsTbWL4HwQH54PTCEbzpjA/LdBidXvCmrqlmvTGASA8Qi1LBgf8jv0utkK0EltfioOj0Z2XGKnUAeGWqpJWgc5I86+UEaoFPubRPACtEH4kb7mRm0eKHsa4FOOqs/X8LK1kjI9gYlBIypa3rTZM/yiDiRPjjnxbcWWqj93mlYKr1PcLLV9iakAwGLvLxATkseHrGTJUIX6TM49/Vj8/DB37IldrDLcaBbMfIW41tMK4w5tLSMGkxSyXFqcLhyxfvbNKAq+I5XtgzL2BUfxGmYYsrCCE0rw+VR++aqG60wweEYDZEQ0KdO0nXvlhGItbEWXtEpLNPrMXRx2kHzna7/XsE7V+0psQ0u6A34I/3nmOrl0C4zoRUHTv9MHX5yN9DG0AZ7UUlUB/Rdk6aNTVPRJ7J1SwIxPQ3VSc5znIhbVmnrB7fXQMdtGFGldyOx1ANIkDz0QSpGuAt+dd6y9S89dSMkmETTX0J+wz7KlsYq4mvMlgH43HexP9YITp3RY+mKXeavSRaGzPrDsbanf34VJlIs3YSQMyRQuY3WEt7eT0nZ0Sjmz9DR6kl9xwkZFamAGvkl1gCYKVLMcsdw01u6CykAZPK2Encj9EhUEzXGtC0hET327eOU/a1c3uA6kFAR2uJhFaVRK4/Ka3Fw5veyRie7kiZGbK+Oq3OvtsX98leaASX92CtgXVz861CgvGXmYTN7bOsr5m9jgo+dx+R7XUaqzNjDoDz3lqGR28MPoU19DofGdg9VdIsGQSbNlvOAVD7MQ3iSs1M/jjFoNhgsh+zorPO4fAIjYB+gdSVFWXWsWBhYccCBZWUXPfCJRrwofBsO02HB3CGFhwn8abRXL0tlBtUGIQ3wLpZUtTQ9lZ6qRfafQtOoiSrhafZvhysVXXLmiVEysnHAEPdr5zsq7nZzV0J6L6j2MDvy0A0D3hwhczdinl7Qwg72QdCalD/lR1iafxgFg0x11ozuZU6gwYNvJv0O9/xVOz7cB+FuyEsJvku9W43oUPLyeIHE7gthOrSnRK+IAwQWYD76UEI/fmkqBYJeP2SN3Qo9+yuHcKNeoyOeOnfQ+ZNNCjbeCKfPNX1JmJPnHeLaNi717rZ8bfxWli5dNN68CCkSa4pauPcgzccr8wkqMoKIysdR6//zUP/MeLEup/fw3mq//HjKaZgYcLxm9BQV6LjCuUfN5HfoBLDfhEpR655uIEX3IHBxNTO0lNS2Xpkvo3WS1iojMjovtnOGPRHa17eoUvbUtvyxfI9zUW00GsaBAKQp3ctpGyoKfMrbod7kYE02ZY3JURhKeuAwg/v7oMV518N37i3+c+huawgYYsONM/IRGz9NEFMsiPQ+lmHfoKG5DMb4RBhLTT4Q1JeYYo4qRnSMsq4Lk3DwWGugKZ+80aiOLd9+d+lI5+9+0+geI9tBH9ALFsYQhgX2mbNkleHE71dtQzJnvokidyi8nUzFAHzN/8r69mi3XzWMgv87pLZZNYy2yB8e/sD0aSxEQ67SZmsNViPLtk2o9XJJ/mLxDULGeZmbsUCiPxES8h9EXQ/Tie2mqRosMPFnHg9JaI4K0lNde2IhdBXec5XJQ7A36Hv2N6Z5oK6vnMb8UQNBNSMg3NK8qvPHys8jhN3kP7AeFZc8Ishd8eh0K7cdfOgDbKp82/zPfhZvWugE/nA7CEQQxRXeI9ENlnkAyYQgQLqonyJnml40eLC60vgKvpKqCI8TF4zg6hXdJ95KmuRDLMqi8XESwp54iuAgOR651S+WEaRAnGMtgInCKxbPuBHgFVU16JLg7W/FVjjRd9Mhmt5Wv25SHHX26xSqJywCeYVC+Mg7VYS0b+nowiYxPGufr2uUTd8lsKbJRSq5IHXBdDnhGh+NEXY2MV19ds8FP0EliOM4lUWVHTZag8QR+8lkUTTxLXdNDudSc+PFsk/xS6X8mdrOrmny+Bgtn12ifOSzTXZIMQFLdtIIAX83zfot/9tpRKv42olUHSolUQn7osnhvAeC97V34NDY1EGwxtAdTEcnAqoUqoOfavqLMPIsJUopA2bRTaz9fN/R6+Jl39f9H/b3K1MTx7M3t3mETKqXoVg8baZH0GIUzdidCEtTaECS9uBOoGc4/cLql9NqX3a3e/QN1ZHw1YM2C8kcA//sez93Q4UJTNbpdNL3VkkK72Lhyr7h+hREF0EpgFzm+mJbZ1wkdnwT7F2GqjgqhAOBeIe8XV94WdscnOCtXr5xc8NSOkxiEBYBC2Po2UjxLge8+yuGtWEraHV8wFa0Eyt1utifSl49YrCmCKtDsKBel6kMSa5HKIXFbLwR+EJ/VTVwq2OGce0KNZhYOZwPRrGYeu98DfHaWaoslkW3vVTYK+e1ZXluFgs6BZbtymb/ilOpc7QSGhtG3DMOP480LXknut3VoE9Mo+NxHdo55DkwPZrCWSGeMPnO7vVdT76aN/F8ePqr7pkTB3/qc8y/nTfmu4O2RQbhxWlggChhzkk8cdHug1HFQmimycSUNYw2eD12wZNHnWgKg35KqfoS9FSDJ4bLIBtXiXr9Gw5FgQIUYuuRbPsaEembycBvxfU2ZKOkx1EQb/IK4GsjdCe+vxgUGIW2SpDtpaeUAqdJObZuTGv+Bnwm5QFwKgQ+R49fuXgWMPWrIex/CMGB1tdkiSYiGlbZJ8QBXsdzrRzpKPMi2635+f3/BxwOxDXXNkPRFH8EZRnCwSJWRUcwlx+2C+pT8zLX8qTyU08vQSncRpIwevxWBX65qIq8CONebm53oiHYgDY9X/6cSy+PSYd7/XhtCDGm/YbbtgNPHH1YuQ+qhbECU4ElllsiAZJZvdL7KMXbeh80eXJMDrqaNmNMYWdEAJtcro7m6einHSOAYTnrqfvIVvDEm404+MeynEClNHwjSyjuutbhZJjaEzJiItjUxH2IZglDh0WTqC/3BERCzd7mLcPGEK1FadwRT0cbMHnlXEZDEBWUCHLjngBxHA4N0yj1CbFTAwu1AoIVKON7McPsfl30twIjsd3krRnnXZbxkKcqX/2rErlTPxIYfIFkRn9bXASFaU4u0CSDSgMiE7HiJkLVU1t1XGxSG+hTJWGLOTq9Ds5Psh6LoluoyoEP1CKj3jcrvANo6gtfPLZHlArlF+Fk8pbQqOyaJ7AhvGVe+X17PxiH+GAG4nLhWOOskbmf9qMH2+M2gFhaHmKvhgjkYj9+Rxuxi6ulWd1PmfIvKvoKlLVaEElQDSKmNYtZ1RcgnubXFgv36NS6WY5O0i3aQHf1qL9lx3IlPn4sLcMmvmX3UBfTWts0tRspLo1WMFz7IJMoyCPrpUJAa4eGyrNz+T1Plma+cSGo0NhB4fsy8oonwQAU4EuHZrl6dR42RFUmivH9carO/ebHZ9QovF1HQGTN/GjdfQghxFAkkH7o1cmSTiBQYC2O/Q4RObwRQQAUR2/2Q0YU2yzr9BhbmL80XqZyOemVMmDDixhY8M4+PaRyGhfGzSsGCwuZ1JGbRouTaBVHa31psugtynTSNHk1ZLAd7khwq+tnkhPEUP71u+BcAl74xBhGlFVZ1r90WhTtmG8gO2Xq2g/v9KummhQ4YtUqVOCoRGGkO/P7bclwol8L8mP8GhhQwbolNtORivCUIJMP+xjn4cIS4Yvtoi0Hv59Fjn37iFKjL/wt+FgPURSlGrXKLsoVKuCaMMK2U3qZRAm38GlRd4QAkyuj3PK+kA/f+BEyWNlThKFV4N7/tC9DdZ5c0w8TpjzjcaPu3KupABe5h+GPPeQSoUjyveXYfzIcvpsgp39Elw6G7iX6elDpZ8KE8JXW/esNdc+5edQpEugsTmINXg5L1eMGA4XKZv+eYh3YJkhD6OM+VRjx0rYtFabfjWD1M+vZB9JaeUXyS7OAHbsMcLzWsFBXrOhLk8aDFyFQR7KaiXaPAplDPGUL90NsIuxFstoQcdg4yvCeHY6b3YaK1c/uSDJbyBhqQRdaWMsV+AADNdcPQKmmC6MB3mU+jl7dIEr0w3esRMwPRxsWi3MHDX1VDK0A8LVZo2clip1lCA+m0LvZeyb4KUUbmyUa6a18DzG+k5H9BAcVI+4tvniP0HtwnQIFCYnuHAKg0mt2o9dzUGgDn9Xf8WwhQLTivsIxr8xQHEDheVDCPeV5i7AgGbyUkwGaiavJREstVYL6uK3qezrwxPKtitSXQZu+oPbSLkRc6IvnRiff0RnCMqFcimybOet5L5A/d3RbVgZOsPHkwPr1t0TPv2jV44uVwOtaS/TwA+KVBZsXT65Jl8LL97+eyuUb1+sGi/Hkr5DwwTrLF7mOxFN4yaWktWZ9F+ppfUZdRVYU0Vdwh9C8W1NVjV6fCEkBfBwu6j1FN7Rsw5e2nyU7HNypCYL8iZM0BdrdeBxTYJ9UvZCe9DaFew3WLnCX+33TMi+Pj8xdro6Q/Ied2KSo1NxrAB7jmQmuCNxnwNYMZzLotMpnxk0e8aTuHwaanxPyktiEGfCXBDn5USdGUWHOGA8izpGZFnEzJFz9DtbZHYOfu/i071GiAdcxBLl+YH7eksCIl8Y5vjOYE0PgTjxxq3o5xOxEQVEe04hxUG9nQ0d3OGsCleBdX8P6bmOAR0mzTWyQjx5KJBttDv56ao0IA5GsSZbdN0fqbOdGgikTXtw3c5Lgq2atc9EObJlv5R9RAw45FLBOVVanXggvk7D1Nr2ZZLtaEmVreDV/sxJk3cTRZegUyKqI/YCgzaX+/PRctwyFkQKZ5F1YszLLFGMoBtdu0e+bjgDx76yaKyEn2yikv9zoR6JTOrRkYyjcvOB/wgookwWs4uP72bkBKDGTb9L/i5nQ+7f8HWDz9jvG5tlmMUQtyaRGvt4Pr57Utw3R9tG154498enhAqKBGLwXEi/W1VjLBqN89Bu+NJXysx8yBKzL3hMhhSXEI3GFDTH7HJENxVhraNYPtNopy+DNjcMLo610tKXl+FhA/EHgs7euan8qBWGLdvbvrLDE3T3UnR1SsvCbShIhjEs7i73BnqVfkKae6KrY9K97N2aS2DAawE5ZjBH51rxoiy9KUsN7NU56ahG03QtLsA1Q/+uptOYfn9XA16CMGswP2CYUpUZwlK14x5/LeSIpvy+J4qtKDliJD73iiEEMxfvyI/yNpn92tnagfkg68AKbGlCvZDJZfZ2drncCRlEIfJxihM0b4E/zW8iIEddDezOmfBVXzujxKmJ6dhnJDSx3lCtH9dLSkhoAZakYIsljT5VycjqyaNXirNS8LHSu4/dM460/ugKLvjac3iQPjHhp/U9NlWreMmg9bCQCtVKngfXoBdGD8j+Sas7Dr+X68yJOXjfi3v/YjFrCVE8GYnWdIp1a8yZB2sruNWX78K73V3zh3KILR3C0VqrAsQZc76VKp44Wvaz1TMBsnsPveSA6yPEeojAbJwF3Vxk7SwLo7Uy6bI8+LpysOJeYbD2oj204kEqKL2mn0E3iK3enjEYpyh9XldJSRz+wDSgEBiyLBS+AoIUivQWQ05BOJQ9sPtSdCNz5FpHYIJnqigpEtxO4amLnpEJi5jr5Cz17U/CsoHq1EN2JRofyxcKhYShoUNv35qvA7U9tRWYHp4Nr+dBMXaxltFnbEKXIHCC6xl3TxYy443Kb+8cXSBG6StzVf3PPgEd59ZkJjlZqWQG2xpZ+sDQNpTolnwEB8KuNaQr+/nIdykcaeH+LT+KrWlzWXmV9IeABUSn5LgMQhEY3gZo3oRDkjy/tiu7ObplSnxwDQbBeMTiasq3fsMDMih4JH8eVdUehbhqsWcAyK9CmNKp1xsPBOgopm94hm22MAgUzVwIrnJYT2or2DIpJpTjjRLtO7PhhEFB9QchJrMvnOVz4bdUEqu8CoGU/m98k9HMvBuUGel+t5z6KsuXtZF5cCg7AKPJm8f8aeuC19Fky5neqIyghYtDnv4SiTHwzWh0wIlW9966bQCOpJRzDbUy0v2zXmmquymd6uzvmbERb94tkuTVuzfDx3HbpA0/EgLjJkBHr7T3qqB8KQ8Ou6h+Hd+TWIzQMltPnOnzQHMg1dImyzLxjU+BPRJTItczDO2SwIqEvQ8yAucVa6kXu3RY5ObjJUdD2yHr/qHl3N+8VOhkYWzZO3rzv2Z5IxEPR6fq9+5iNQfSGZXqFESS2Ags+GQCZKAiSN73ZtUbpI79QFgY7oECCmYmGC+GZMT1Az0PtwsjClRaXX7KYvIPjSWVg88AtwtohOGZ+sO6BO2CcQmwAYoHHRZs/bpnl0i7NVBd7oZPXXesXbiUC982K3Xuf3oifrsF4DEm/Iy4wCCsjJ6nRCoAPYuEggcpuuI6VYPUTujAN6iblYSqH/qWXik1WNCPb4moBvwqqJIor+xqiWfRhtzwLWQTIf/PuGcWtnoF68qPN222LjltdKIc8LLWjxF0qKXn8cof2FaD1zHZ+84BrQYSgGgN/80BJSWvIEG401Tr/p69TozPC8sFsrMSXbzboryOoKYEk/5fSD2PrJrFr6p5BfRb6twoP0kLzkv39Ug1AWr26vnL6FUszrkrqe7jOoIgbIysNdTsCHNdBX/jLTy7+cAWSnAvRCujNi02OGs9L32tCh+Q4dU5RsMDYFBGLvEfz4Y2J3dSZ1hOGCW78Obif5vRO0EebX9ZMS/mA3UNqz6uoEXhYRpXFwB8CeECbf2AvkpDaLbdFvcE2UAUPuHZXqwIJ81myy3+WtY3EawXDHeVP+MzyqW8q5XBJsRcIcoFeH899ZProUvVEDaEAMK/3GDoxtmOekcJLASAv3g135jchzmRu1VA438rDG2WR8lIuAPTpRf/PlivwDM/O3J2CNk9AkbrWzGlp7brK4pA8haBBo+qh1eHPDpf4A4B6ZhzwKPxo+5fK2yzesjHrfbg/7xQjo4TCnv1nQ1aikOXTcGEYiit2Q2v41DDjARsv3z/ft4LdesH67NRD305AEMRJ5TZHtFnH8BBajVmg2XMXRGIiMfKDByMeITVmqgm9OMKvxDVE3d3tmVxN9z80cRNXhEWZKMemcjexraocAam6dOpXRg+WjQcX2pOVTDQz3enV+cC+DOk4gSwgousBKZtrPm4FMXgFOTMU/xPK+2I7Xd9aqYeLiOyTFYHy/5JOtvMVgQHrNMr5qdGvTznS1fWtx92+c1NdzRLdCeYIf/5JYzXtbTNbaN+5M+uXVaKOEm9cxzjCmuB3rsWRbNf3O0Tg8P8xOZimGz0iiHlTlJGMPgsxA9Cc7CaJqjUclY8+oQG+cYwvaLCzwd5eUq6Ma/VeDIZM0TAk8nDv3sic91rIc/e1twTdmyXnDWTNeGhAwuVXdd0wsZkOjQfltfoCTq2xYc80YMPWvWftJpMLnxRddJl51jdhv7fRbhwJDs4K0BXxW1yDa5gnQzbj6YkhTmzIGMkJHYgoarZvF8LmYN6FQGR7H5kmSTkl54xqcjsEQVHIPp+trvXYCC+yvnbk4LukhT3CYD2nhIXk1uqgu2B2r2tNjzvyO6AuL954T5TuR659CVNqGbQ5FpLJRA3siIZBX84mNC/5NrIhalIjreyfOotyrhPHfnCW4mXT6KEI1uXkst2UVExdRrY+9mWbeVuPnK87pQKego5eD/9+8IdyBNahaRgoLi7cQN2d+m4FvUrwv/Hk3X3mQKbfvkWYYAXqZyev95pm85P8i7rffMRhth1jSaNYnYKHeLTPabcNDo4wyns1sceS9FXTR0ZkYol0XGP5m+gBOamd5Pk/9cVPc2wZkPILDt2BE3cCicSmSAeBbySWKSKOW0eqEYADryKW63bdrQq0WWMHKSo8XwzrBpLPNhQprLpCZ4fFru8Z+jfuP7bxYaheZUBwmXlXwD1N29ywUuXG7SV9Jonfh+IUqONVj9fswGA2sXND25YlytnKFf3bQ2QEtSWmRnhffG2ZDRX1OwFbGco9eemxh0bHNoPSPBqI5DycCJdO+pDf0m6h5nv44QzaVRUkW6HWDi4+tUyXDmKaJdoC4X0CKDr3WhpzzUR8fIQ1XZzbH1RhIEHS4zYtEEy3EXafrRez+fJ6Uxz5wV9AIR0/ozh9yjli+OsU0vB5lP1aEZ27hVPdVunujyREM4EqlF5yPNdoA5Db4+5ix/TyPzckcXvy+ymPQUM5u/1yRFOecaftI059bVgdpz5NeH3+Gkw2ZAN6iuz1AaA3a7Kq8ibE9lsNlmuodoiKkug8+ubd2F1PTt+BJDanNhob8cXJvpnzksnDqvc+Y3ySjajJivW03RPsc42alJ8SESEUTuIcrcs75DPrcp5ydnEoFe3oJ3tPSjx/jv+J78OU4MaBznl69ps0fAde0DhqpqdaITSJIpxEOKUlCvvM5lwN3AyNCE3AbZAHaB0MeJ8wyRWY8pDbnlK2REXAFFS40c/slRtl2BGWMFtCI+mpJoiJNps3ri2HR1sjt9tG05B9pi0hfbcSdKCXq5x7JLRY76WcDfU3bS/njR00x4GU6N8oBrRA+Z2HGRXhlj4W2GjZclpjxhjecP47MWuxoRJwnsyjr5okvy2Gj8A7m1MvdjRG/TvYgtRl0OwVBeit4KBW9dOKumLlxQ6Z6W8LJl8bC/1cmN9PpC5J1K2NIxKRSpaI16kofxph0j+c2A2/yyZ+ay2PglEmG/OtF6NRAf4pwZl6K1NmWygANUhcLCsigBZyrGhtIyHOp5J+unI70BIcaod7eeO0uILhlFeJ7xBUDZqSycC1GJKte9jD7xT3pZ42tkwiPNk0VXm9tu1yAWzePUnJ8AsL+bKYsvUoTOl2vSGh3J3hBkPgVn8QvuMpisBVaSoZCBwdhrMO93OoQ1sxi42bzkiMvACDucILGGwD2vs9dnFmZe+5Rzqvs16amgMsTJTmeiVS1lILtWoKUKw5eg9loTJDkCKkKE/eBRBCcFRQyaO5Q7aru2MVeE6rHrcMyNKyxAjylBOc8kSomdI4sEGUcLoa+f426wH/WHipRNIw6pVniHMyYXCVIV1BXqNNt59ejTuejZbb1C/0hFCvBwQs1eo+1O/17FDVi2/gbetD/7LhX0PJUQXG2YX/Gf5tdzwE79+efXn1zEd+ILkZD1SOtQvuPPAmT3O0ZauXljFs0SpjD3HQjF6NmuVmbLtKV8xwQIimsA7VzdQlj7PgCL2zZOrBCSxRs4huQ9TwEBfMwsuWfqbtY0AeVUT883I352Mdvuu94UviTQasUn+ljYjK94Kz7RU+6BOWWj+jvSSwSWGlFiI/Hnc4zYwH61q1JR0w414yCl33WXLMUEu6JMqRgcX5PDvre0Nuk8/YFegcTstHWow1Yhn6SBSeyPfwI29eM6qBp6ZfUz6aMF0gwB+lykEj8XHt40FwfkcWrF9AygOWXpIGrnpnDZCY4uTj1R/IL6sTEz8=</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 职业生涯规划 </tag>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装配置WordPress</title>
      <link href="/2018/10/18/%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEWordPress/"/>
      <url>/2018/10/18/%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEWordPress/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>好久没玩过<code>WordPress</code>了，最近同学搞了个技术网站，顺便想搭个博客，同学不太熟悉<code>MarkDown</code>和<code>HTML</code>，我目前的这些网站绝大部分是静态的页面，之前也用过<code>WordPree</code>和<code>Typecho</code>，用不习惯，昨天搭了一下，还是那些常见的问题，随手记录一下。<br><a id="more"></a></p><p>$$<br>    \begin{pmatrix}<br>    🍇 &amp; 🍈 &amp; 🍉 &amp; 🍊 \\<br>    🍋 &amp; 🍌 &amp; 🍍 &amp; 🍎 \\<br>    🍏 &amp; 🍐 &amp; 🍑 &amp; 🍒 \\<br>    🍓 &amp; 🥝 &amp; 🍅 &amp; 😳<br>    \end{pmatrix}<br>$$</p><h1 id="安装LNMP环境"><a href="#安装LNMP环境" class="headerlink" title="安装LNMP环境"></a>安装LNMP环境</h1><p><a href="https://wordpress.org" target="_blank" rel="noopener">WordPress</a>是使用<code>PHP</code>语言开发的博客平台，对于<code>.php</code>浏览器无法直接打开，这就需要服务器有<code>PHP</code>的语言环境了，同时访客在站点的资料和信息会保存到数据库里面，在互联网中要访问到该站点还得用到http服务软件。</p><p>需要安装的软件：</p><ul><li style="list-style: none"><input type="checkbox" checked> PHP环境(php)</li><li style="list-style: none"><input type="checkbox" checked> 数据库(Mysql)</li><li style="list-style: none"><input type="checkbox" checked> http服务软件(Nginx或Caddy)</li></ul><blockquote><p>P、M、N都有了，那L是指什么？<strong>L</strong>就是Linux啊😥️</p></blockquote><p>安装LNMP环境，为了避免不必要的麻烦，这里我在<code>Vultr</code>新开一台机房位于<code>洛杉矶</code>的服务器：<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/18/5bc8186a14543.png" alt="系统选择的是CentOS 7" title class>                <p>系统选择的是CentOS 7</p>            </figure><br>等待系统安装好以后，我们就可以查看主机的详细信息了<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/18/5bc81938298cc.png" alt="主机信息" title class>                <p>主机信息</p>            </figure><br>有几项关键信息：</p><ul><li>主机<code>IP</code>(也就是公网ip)</li><li>ROOT用户的密码<br>在连接主机之前，我们先来测试下访问主机的速度，打开<code>Terminal</code>或着<code>命令提示符</code>，使用如下命令:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping 207.246.108.54 <span class="comment">#ping后面接你主机的ip地址</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="此处略过一些特殊问题，比如ping不通等等，与本教程无关，不参与讨论"><a href="#此处略过一些特殊问题，比如ping不通等等，与本教程无关，不参与讨论" class="headerlink" title="此处略过一些特殊问题，比如ping不通等等，与本教程无关，不参与讨论"></a>此处略过一些特殊问题，比如ping不通等等，与本教程无关，不参与讨论</h2><p>下面就是连接我们的主机了，<code>SSH</code>连接服务器，<code>Windows</code>下面建议使用<code>XShell</code>的家庭版(免费的)，<code>Unix/Linux</code>不需要额外安装软件，<code>Android</code>的话建议使用<code>Termux</code>安装<strong><em>openssh</em></strong></p><ul><li>在<code>Terminal</code>下面连接🔗️主机</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh root@207.246.108.54 <span class="comment">#用法 ssh 用户名@ip地址</span></span><br><span class="line">sudo passwd root  <span class="comment">#更改root密码，这vultr的密码设的也太复杂了吧</span></span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/18/5bc81ccd6bf66.png" alt="更改root密码" title class>                <p>更改root密码</p>            </figure><p>安装一些常用的软件和编译器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y git make curl wget vim nmap screen vim gcc</span><br></pre></td></tr></table></figure><p>由于使用源码编译安装，安装时间比较长，使用<code>screen</code>开启一个<code>session</code>这样即使退出终端，服务器的编译安装也会继续进行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -S install_lnmp <span class="comment">#创建名为install_lnmp的session</span></span><br></pre></td></tr></table></figure></p><p>这里使用一键安装脚本简化安装教程：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http://soft.vpser.net/lnmp/lnmp1.5.tar.gz</span><br><span class="line">tar -xvf lnmp1.5.tar.gz</span><br><span class="line"><span class="built_in">cd</span> lnmp1.5</span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure></p><p>这时候你就可以断开与服务器的连接了，约莫1个小时左右的样子，就能安装好。</p><p>约莫过了50分钟了，我看看服务器编译安装好了没有。<strong><em>ssh</em></strong>连接服务器后：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">screen -r install_lnmp</span><br></pre></td></tr></table></figure></p><p>当你看到下图显示的信息的时候就说明，我们的<code>LNMP</code>已经安装好了<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/18/5bc8313e29c51.png" alt="安装完毕" title class>                <p>安装完毕</p>            </figure><br>按下<code>Ctrl + c</code>退出。</p><blockquote class="normal">如果你已经安装好了<code>PHP环境</code>和<code>MySql数据库</code>的话，那么就可以跳过此部分</blockquote><h1 id="下载安装WordPress"><a href="#下载安装WordPress" class="headerlink" title="下载安装WordPress"></a>下载安装WordPress</h1><ul><li><a href="https://cn.wordpress.org/" target="_blank" rel="noopener">WordPress</a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://cn.wordpress.org/wordpress-4.9.4-zh_CN.tar.gz <span class="comment">#下载最新简体中文版</span></span><br><span class="line">tar -xvf wordpress-4.9.4-zh_CN.tar.gz   <span class="comment">#解压</span></span><br><span class="line">mkdir /home/wwwroot  <span class="comment">#在home目录下面创建一个网站的根目录，方便管理</span></span><br><span class="line">mv wordpress /home/wwwroot/  <span class="comment">#将博客网站的根目录一到wwwroot目录下</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="安装Caddy作为http服务软件"><a href="#安装Caddy作为http服务软件" class="headerlink" title="安装Caddy作为http服务软件"></a>安装Caddy作为http服务软件</h1><p>Q: 你为什么不用<code>Nginx</code>或者<code>Apache</code>这些老牌的<strong><em>http</em></strong>软件呢？<br>A: 主要是我懒，懒得配置这两个软件了，还有就是，<code>caddy</code>还是有很多优势的，体积小，很方便的</p><p>Q: 我就要用<code>Nginx</code>或许<code>Apache</code>，你用的这个软件和我的软件会冲突的吧，一个端口只能有一个守护进程吧，那这个软件怎么工作呢？<br>A: 我只是搭着玩一玩，我配置下<code>Caddy</code>不占用<strong><em>443</em></strong>和<strong><em>80</em></strong>这两个端口不就🐷️好了。</p><ol><li>安装<code>Caddy</code></li></ol><ul><li>可以去官网下载二进制文件，不过<code>YUM</code>源里面有这个软件，直接通过源安装。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y caddy vim <span class="comment">#vim等下要用到</span></span><br></pre></td></tr></table></figure><p>接下来就是配置我们的<code>caddy</code>了。首先我们切换到<code>/home/wwwroot</code>目录下，新建一个配置文件的目录。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/wwwroot</span><br><span class="line">mkdir caddy_config</span><br><span class="line"><span class="built_in">cd</span> caddy_config</span><br><span class="line">vim Caddyfile      <span class="comment">#按下i插入字符</span></span><br></pre></td></tr></table></figure></p><p>Caddyfile内容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">207.246.108.54:1018 &#123;</span><br><span class="line">root /home/wwwroot/wordpress</span><br><span class="line">timeouts 10m</span><br><span class="line">    gzip</span><br><span class="line">    fastcgi / 127.0.0.1:9000 php</span><br><span class="line">tls ourfor@foxmail.com  <span class="comment">#公网ip这一行不要</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ul><li><code>207.246.108.54</code>是你的公网ip</li><li>root <code>/home/wwwroot/wordpress</code>是我们网站根目录的路径，注意，wordpress下面一定是一些<code>.php</code>的文件</li><li><code>1018</code>是你想打开的端口，如果有其他进程占用此端口，你更换一个就是了</li><li>tls <code>ourfor@foxmail.com</code>是你想申请<strong><em>SSL</em></strong>证书的邮箱，如果是公网ip，那么这一行就别填了</li></ul><p>粘贴进Caddyfile后，按下<code>ESC</code>，键入<code>ZZ</code>保存退出</p><p>接下来，我们就可以来部署<code>WordPress</code>了。</p><hr><p>首先我们为<code>WordPress</code>创建一个数据库，为方便管理我就起名为<code>wordpress</code>.<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p  <span class="comment">#接下来会让你输入命令</span></span><br><span class="line">create DATABASE wordpress;  <span class="comment">#注意有个分号，这是一条语句</span></span><br><span class="line"><span class="built_in">exit</span>   <span class="comment">#退出</span></span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://i.loli.net/2018/10/18/5bc834cf05557.png" alt="创建数据库" title class>                <p>创建数据库</p>            </figure><p>接下来我们还要让<code>PHP</code>监听<code>9000</code>端口，这个<code>9000</code>端口我们在caddy的配置文件里面有用到，区别你网站占用的端口。</p><p>首先我们来查找一下<code>php-fpm</code>的配置文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">find / -name <span class="string">"php-fpm.conf"</span> <span class="comment">#我这里是在/usr/local/php/etc/这个目录下面</span></span><br><span class="line">vim /usr/<span class="built_in">local</span>/php/etc/php-fpm.conf</span><br></pre></td></tr></table></figure></p><p>光标移动到这一行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">listen = /tmp/php-cgi.sock</span><br></pre></td></tr></table></figure></p><p>按下<code>o</code>,在下面添加这一行：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">listen = 127.0.0.1:9000</span><br></pre></td></tr></table></figure></p><p>同样按下<code>ESC</code>后，使用大写的<code>ZZ</code>保存退出。更改了配置文件，需要重启下php：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart php-fpm</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="https://i.loli.net/2018/10/18/5bc8393a9cb1a.png" alt="重启php-fpm" title class>                <p>重启php-fpm</p>            </figure><p>接下来我们就得来打开http服务软件了。我们先来放行我们博客占用的端口，你关闭下防火墙也行。</p><ul><li>关闭防火墙吧，这个简单😿️</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br></pre></td></tr></table></figure><p>或者放行<code>1018</code>，并添加出站规则:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start firewalld <span class="comment"># 开启防火墙</span></span><br><span class="line">firewall-cmd --add-port=1018/tcp --permanent  <span class="comment"># 永久打开1018端口</span></span><br></pre></td></tr></table></figure></p><p>接下来，我们就要为这个端口添加服务，系统预先为一些端口配置了服务，我们复制一下，稍微改一改就行了。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cp /usr/lib/firewalld/services/https.xml /etc/firewalld/services/caddy.xml <span class="comment">#caddy.xml这个名字随意</span></span><br><span class="line">vim /etc/firewalld/services/caddy.xml</span><br></pre></td></tr></table></figure></p><p>改成这个样子就行了:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span>?&gt;</span><br><span class="line">&lt;service&gt;</span><br><span class="line">  &lt;short&gt;Secure WEB (Caddy)&lt;/short&gt;</span><br><span class="line">  &lt;description&gt;HTTPS is a modified HTTP used to serve Web pages when security is important. Examples are sites that require logins like stores or web mail. This option is not required <span class="keyword">for</span> viewing pages locally or developing Web pages. You need the httpd package installed <span class="keyword">for</span> this option to be useful.&lt;/description&gt;</span><br><span class="line">  &lt;port protocol=<span class="string">"tcp"</span> port=<span class="string">"1018"</span>/&gt;</span><br><span class="line">&lt;/service&gt;</span><br></pre></td></tr></table></figure></p><ul><li><code>short</code>里面的名字自己随意，主要是给人看的</li><li><code>port</code>是我们要的端口，我上面用的是<code>1018</code></li></ul><p>在防火墙中添加规则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --new-service-from-file=/etc/firewalld/services/caddy.xml --name=caddy <span class="comment">#这样做，管理服务器更清晰、高效。name选项可选</span></span><br><span class="line">firewall-cmd --reload   <span class="comment">#重新载入规则</span></span><br></pre></td></tr></table></figure><p>更多更详细的用法,参阅<a href="https://firewalld.org/documentation/man-pages/firewall-cmd.html" target="_blank" rel="noopener">官方文档</a></p><ul><li>打开<code>caddy</code></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/wwwroot/caddy_config   <span class="comment">#进入我们为caddy配置的目录</span></span><br><span class="line">caddy</span><br></pre></td></tr></table></figure><p>不出意外，我们打开终端显示的网站，就能看到<code>WordPress</code>的设置页面。<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/18/5bc83bfeed7f1.png" alt="WordPress" title class>                <p>WordPress</p>            </figure><br>按照之前我们配置的填写就行了。<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/18/5bc83c37b31ed.png" alt="配置信息" title class>                <p>配置信息</p>            </figure><br>不出意外，它会来到这个页面。这是由于这个目录权限的问题，需要手动操作一下。<br>按下<code>Ctrl + z</code>，暂停我们的caddy，来到博客的根目录下(即wordpress下面)。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim wp-config.php</span><br></pre></td></tr></table></figure></p><p>按下<code>i</code>插入，将提示的信息粘贴，保存退出(方法同上)。使用<code>fg %1</code>来恢复我们的caddy。</p><p>安装成功了，会出现下面的图片。<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/18/5bc83f426da7c.png" alt="安装成功了" title class>                <p>安装成功了</p>            </figure></p><p>到这里，你以为就成功了？<br>我们还得添加一个<code>ftp</code>的账户，用来安装主题插件。使用之前的一键安装脚本下面的<code>pureftpd.sh</code>来安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http://soft.vpser.net/lnmp/lnmp1.5.tar.gz</span><br><span class="line">tar -xvf lnmp1.5.tar.gz</span><br><span class="line"><span class="built_in">cd</span> lnmp1.5</span><br><span class="line">./pureftpd.sh</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/18/5bc84407af56f.png" alt="目录最好填博客的根目录" title class>                <p>目录最好填博客的根目录</p>            </figure><p>填上你的帐号密码;<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/18/5bc8444bc6b3b.png" alt="ftp" title class>                <p>ftp</p>            </figure></p><p>更改一下<code>wp-content</code>这个目录的权限，让<code>WordPress</code>可以写入。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chomd -R 777 wp-content  <span class="comment">#在wordpress目录下执行</span></span><br></pre></td></tr></table></figure></p><p>最后就是用screen为caddy创建一个<code>session</code>就可以断开和服务器的连接了。<br>或者也可以用<code>nohup</code>和<code>&amp;</code>来忽略中断并在后台运行，例如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup caddy &amp;</span><br></pre></td></tr></table></figure></p><h1 id="关于数据库的一些基本操作"><a href="#关于数据库的一些基本操作" class="headerlink" title="关于数据库的一些基本操作"></a>关于数据库的一些基本操作</h1><ul><li>更改<code>root</code>密码<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqladmin -uroot -p2320813747 password <span class="string">'newpassword'</span> <span class="comment">#更改原密码为newpassword</span></span><br></pre></td></tr></table></figure></li></ul><p>如果没有安装<code>mysqladmin</code>可以用<code>sql</code>语句修改root密码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use mysql; <span class="comment">#选择mysql这个数据库</span></span><br><span class="line">update user <span class="built_in">set</span> password=password(<span class="string">'new_password'</span>) <span class="built_in">where</span> user=<span class="string">'root'</span>; </span><br><span class="line">flush privileges;  <span class="comment">#刷新特权等级</span></span><br><span class="line">quit;</span><br></pre></td></tr></table></figure></p><ul><li><p>创建、删除和查看数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p2320813747</span><br><span class="line">mysql&gt; create database wordpress; <span class="comment">#创建名为wordpress的数据库</span></span><br><span class="line">mysql&gt; drop database wordpress; <span class="comment">#删除名为wordpress的数据库</span></span><br><span class="line">mysql&gt; show databases; <span class="comment">#显示已存在的数据库</span></span><br><span class="line">mysql&gt; <span class="built_in">exit</span>; <span class="comment">#退出</span></span><br></pre></td></tr></table></figure></li><li><p>备份和还原数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -hhostname -uroot -ppassword databasename | gzip &gt; pathtosave.sql.gz <span class="comment">#mysqldump -hlocalhost -uroot -p2320813747 wordpress | gzip &gt; /root/wordpress.sql.gz</span></span><br><span class="line">gunzip &lt; pathtosave.sql.gz | mysql -uroot -ppassword databasename <span class="comment">#gunzip &lt; /root/wordpress.sql.gz | mysql -uroot -p2320813747 wordpress</span></span><br></pre></td></tr></table></figure></li></ul><p></p><h1> Enjoy it !<p></p></h1>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> php </tag>
            
            <tag> WordPress </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随遇而安</title>
      <link href="/2018/10/16/%E9%9A%8F%E9%81%87%E8%80%8C%E5%AE%89/"/>
      <url>/2018/10/16/%E9%9A%8F%E9%81%87%E8%80%8C%E5%AE%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h1 id="学会珍惜"><a href="#学会珍惜" class="headerlink" title="学会珍惜"></a>学会珍惜</h1><p><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer@1.10/dist/APlayer.min.css"></p><script src="https://cdn.jsdelivr.net/npm/aplayer@1.10/dist/APlayer.min.js"></script><div class="aplayer" data-id="254485" data-server="netease" data-type="song"><br></div><script src="https://cdn.jsdelivr.net/npm/meting@1.2/dist/Meting.min.js"></script><a id="more"></a><figure class="image-box">                <img src="https://i.loli.net/2018/10/16/5bc5f8a5987a2.jpg" alt="岁月静好" title class>                <p>岁月静好</p>            </figure><div style="text-align: center;font-size: 18px;background: #f9f9f9;font-family: Helvetica,Arial,sans-serif"><br><i style="font-style: italic;color: #2e2ec7e6"><br>终于做了这个决定<br><br>别人怎么说我不理<br><br>只要你也一样的肯定<br><br>我愿意天涯海角都随你去<br><br>我知道一切不容易<br><br>我的心一直温习说服自己<br><br>最怕你忽然说要放弃<br><br>爱真的需要勇气<br><br>来面对流言蜚语<br><br>只要你一个眼神肯定<br><br>我的爱就有意义<br><br>我们都需要勇气<br><br>去相信会在一起<br><br>人潮拥挤我能感觉你<br><br>放在我手心里 你的真心<br><br>终于做了这个决定<br><br>别人怎么说我不理<br><br>只要你也一样的肯定<br><br>我愿意天涯海角都随你去<br><br>我知道一切不容易<br><br>我的心一直温习说服自己<br><br>最怕你忽然说要放弃<br><br>爱真的需要勇气<br><br>来面对流言蜚语<br><br>只要你一个眼神肯定<br><br>我的爱就有意义<br><br>我们都需要勇气<br><br>去相信会在一起<br><br>人潮拥挤我能感觉你<br><br>放在我手心里 你的真心<br><br>如果我的坚强任性<br><br>会不小心伤害了你<br><br>你能不能温柔提醒<br><br>我虽然心太急<br><br>更害怕错过你<br><br>爱真的需要勇气<br><br>来面对流言蜚语<br><br>只要你一个眼神肯定<br><br>我的爱就有意义<br><br>我们都需要勇气<br><br>去相信会在一起<br><br>人潮拥挤我能感觉你<br><br>放在我手心里 你的真心<br></i><br></div><figure class="image-box">                <img src="https://i.loli.net/2018/10/16/5bc5f89fa5b9f.jpg" alt="桃子湖·水💧️" title class>                <p>桃子湖·水💧️</p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/16/5bc5f8a45bea4.jpg" alt="日落·余晖" title class>                <p>日落·余晖</p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/16/5bc5f8a84585a.jpg" alt="补修·理化楼" title class>                <p>补修·理化楼</p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/16/5bc5f8a92e661.jpg" alt="漫步在湖畔" title class>                <p>漫步在湖畔</p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/16/5bc5f8aa853e8.jpg" alt="傍晚" title class>                <p>傍晚</p>            </figure><hr><div id="dplayer11" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer11"),"theme":"#FADFA3","loop":true,"video":{"url":"https://file.ourfor.top/youtube/Peru%208K%20HDR%2060FPS%20%28FUHD%29-1La4QzGeaaQ.mp4","pic":"https://i.loli.net/2018/10/16/5bc60071a4df0.png"},"danmaku":{"id":"9E2E3368B56CDBB4","api":"http://dplayer.daoapp.io"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script>]]></content>
      
      
      <categories>
          
          <category> 心·安 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> life </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fedora安装美化</title>
      <link href="/2018/10/07/fedora%E5%AE%89%E8%A3%85%E7%BE%8E%E5%8C%96/"/>
      <url>/2018/10/07/fedora%E5%AE%89%E8%A3%85%E7%BE%8E%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a id="mainKeywords">上操作系统</a>的课，这老师非得装Linux，说起Linux,从初三那年我有一台笔记本开始，那笔记本安装Windows，真是没意思😞️，我就装了ubuntu，那时候Linux的distribution都玩遍了，那时候觉得deepin和elementory os的ui还可以，后来我才明白那时候是真的傻啊。不过玩了这么久的linux，还是只喜欢RPM系的和gnome这个桌面。好久没用没在笔记本💻️上面装linux了，是觉得OS X和Windows以及一台Fedora的服务器已经够用了。</p><a id="more"></a><figure class="image-box">                <img src="https://i.loli.net/2018/10/07/5bba12ea4c4d9.png" alt="稳定强大" title class>                <p>稳定强大</p>            </figure><h1 id="下载安装镜像"><a href="#下载安装镜像" class="headerlink" title="下载安装镜像"></a>下载安装镜像</h1><ul><li><a href="https://getfedora.org/zh_CN/" target="_blank" rel="noopener">官网</a>下载</li></ul><figure class="image-box">                <img src="https://i.loli.net/2018/10/07/5bba12ea4ffcb.png" alt="Fedora 28" title class>                <p>Fedora 28</p>            </figure><h1 id="将安装镜像刷入到u盘"><a href="#将安装镜像刷入到u盘" class="headerlink" title="将安装镜像刷入到u盘"></a>将安装镜像刷入到u盘</h1><h2 id="烧录镜像到u盘"><a href="#烧录镜像到u盘" class="headerlink" title="烧录镜像到u盘"></a>烧录镜像到u盘</h2><ul><li>使用dd命令(macOS和Linux)<br>插入😎️U盘，查看分区<code>diskutil list</code>,如图，我的u盘被系统挂载到了<strong><em>/dev/disk3</em></strong>,现在要先卸载它，不然等下写盘的时候会提示设备忙的，<code>diskutil unmountDisk /dev/disk3</code>,好了，准备好你的镜像文件，键入如下命令：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dd <span class="keyword">if</span>=/path/to/imagefile of=/dev/disk3 bs=4m  <span class="comment">#注意if是input file 的意思，of是out put 的意思，这里在键入if=后，将你的镜像文件拖入终端，of=后面接你要操作的磁盘，即我们的u盘</span></span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/09/5bbcb0535c3f6.png" alt="卸载磁盘并烧录镜像" title class>                <p>卸载磁盘并烧录镜像</p>            </figure><p>由于没用加参数，所以在整个写入过程中不会有任何提示<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/09/5bbcb01f4efb9.png" alt="写入完毕" title class>                <p>写入完毕</p>            </figure></p><ul><li>使用第三方工具<br>这里推荐使用开源软件<code>etcher</code>,它支持的平台范围很广，包括<code>OS X</code>、<code>Linux</code>和<code>Windows</code>,<a href="https://etcher.io" target="_blank" rel="noopener">官网地址</a></li></ul><h2 id="免u盘安装-仅Windows下"><a href="#免u盘安装-仅Windows下" class="headerlink" title="免u盘安装(仅Windows下)"></a>免u盘安装(仅Windows下)</h2><ul><li>(免u盘)新建分区，fat32，将镜像文件解压到该分区，添加引导</li></ul><h1 id="开始安装，设置挂载点"><a href="#开始安装，设置挂载点" class="headerlink" title="开始安装，设置挂载点"></a>开始安装，设置挂载点</h1><ul><li>设置引导分区</li><li>设置根分区</li></ul><blockquote><p>注意：但凡有修改源安装软件的在操作,在修改源之后都需要使用<code>sudo dnf update</code>更新,不然包管理工具会找不到软件的.</p></blockquote><h1 id="装机必备软件"><a href="#装机必备软件" class="headerlink" title="装机必备软件"></a>装机必备软件</h1><p>首先，更新下系统(建议)<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/09/5bbcb11ed94c8.png" alt="Update System" title class>                <p>Update System</p>            </figure><br>如果太大了，也没必要安装。<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/09/5bbcb1775d11a.png" alt="更新" title class>                <p>更新</p>            </figure><br>保持一颗平常心，你需要耐心等待。<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/09/5bbcb1baec65a.png" alt="喝杯茶，回来" title class>                <p>喝杯茶，回来</p>            </figure></p><ul><li>some useful software<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install vim git zsh curl screen wget nmap -y</span><br></pre></td></tr></table></figure></li></ul><figure class="image-box">                <img src="https://i.loli.net/2018/10/09/5bbcb21d09cca.png" alt="常用软件" title class>                <p>常用软件</p>            </figure><ul><li>google-chrome<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install fedora-workstation-repositories</span><br><span class="line">sudo dnf config-manager --<span class="built_in">set</span>-enabled google-chrome</span><br><span class="line">sudo dnf update</span><br><span class="line">sudo dnf install google-chrome-stable <span class="comment">#如果找不到包，退出当前shell重试安装</span></span><br></pre></td></tr></table></figure></li></ul><figure class="image-box">                <img src="https://i.loli.net/2018/10/09/5bbcb65c583db.png" alt="最好的浏览器，没有之一" title class>                <p>最好的浏览器，没有之一</p>            </figure><h1 id="安装主题管理器"><a href="#安装主题管理器" class="headerlink" title="安装主题管理器"></a>安装主题管理器</h1><ul><li>gnome tweak tool<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum -y install gnome-tweak-tool</span><br></pre></td></tr></table></figure></li></ul><h1 id="图标主题更改"><a href="#图标主题更改" class="headerlink" title="图标主题更改"></a>图标主题更改</h1><ul><li><p>paper图标</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf config-manager --add-repo https://download.opensuse.org/repositories/home:snwh:paper/Fedora_25/home:snwh:paper.repo</span><br><span class="line">sudo dnf install paper-icon-theme</span><br></pre></td></tr></table></figure></li><li><p>papirus图标</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- https://raw.githubusercontent.com/PapirusDevelopmentTeam/papirus-icon-theme/master/install.sh | sh</span><br></pre></td></tr></table></figure></li></ul><figure class="image-box">                <img src="https://i.loli.net/2018/10/09/5bbcb248b346d.png" alt="papirus icon" title class>                <p>papirus icon</p>            </figure><ul><li>materia主题 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf copr <span class="built_in">enable</span> tcg/themes</span><br><span class="line">sudo dnf install materia-theme</span><br></pre></td></tr></table></figure></li></ul><figure class="image-box">                <img src="https://i.loli.net/2018/10/09/5bbcb3ce63367.png" alt="materia theme" title class>                <p>materia theme</p>            </figure><p>在优化(gnome-tweak)中应用图标和主题<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/09/5bbcb34e27dd1.png" alt="应用图标和主题" title class>                <p>应用图标和主题</p>            </figure></p><h1 id="更换Shell"><a href="#更换Shell" class="headerlink" title="更换Shell"></a>更换Shell</h1><ul><li><p>Zsh<br>自带的<code>bash</code>功能没有那么强大，这里推荐安装zsh，<code>zsh</code>不仅功能强大，而且插件丰富，主题也特别多。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>"</span></span><br></pre></td></tr></table></figure></li><li><p>powerline</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/jeremyFreeAgent/oh-my-zsh-powerline-theme.git powerline-theme</span><br><span class="line"><span class="built_in">cd</span> powerline-theme;./install_in_omz.sh</span><br></pre></td></tr></table></figure><p>powerline还可以，不过感觉没powerlevel9k功能强大</p><ul><li>powerlevel9k<br>作为一款<code>zsh</code>的主题，自定义功能极强，在github上面收获6k+的小星星。</li></ul><figure class="image-box">                <img src="https://i.loli.net/2018/10/09/5bbcb7febebc3.png" alt="powerlevel9k" title class>                <p>powerlevel9k</p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/09/5bbcb4f5a0893.png" alt="Fedora更换Terminal字体" title class>                <p>Fedora更换Terminal字体</p>            </figure><p>桌面环境美化后的效果。<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/09/5bbcb553bf1a9.png" alt="最终美化效果" title class>                <p>最终美化效果</p>            </figure></p><h1 id="Vim插件安装"><a href="#Vim插件安装" class="headerlink" title="Vim插件安装"></a>Vim插件安装</h1><ul><li>Airline</li><li>插件管理系统</li></ul><h1 id="更换引导程序"><a href="#更换引导程序" class="headerlink" title="更换引导程序"></a>更换引导程序</h1><ul><li>clover引导</li></ul><figure class="image-box">                <img src="https://i.loli.net/2018/10/07/5bba0b1c88f57.png" alt="Clover引导" title class>                <p>Clover引导</p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/07/5bba0b1b776d3.png" alt="OS X" title class>                <p>OS X</p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/07/5bba0b1bcdd74.png" alt="没有fedora的图标，我换成freebsd的图标了" title class>                <p>没有fedora的图标，我换成freebsd的图标了</p>            </figure><!--https://i.loli.net/2018/10/07/5bba0b1b776d3.pnghttps://i.loli.net/2018/10/07/5bba0b1bcdd74.pnghttps://i.loli.net/2018/10/07/5bba0b1c88f57.pnghttps://i.loli.net/2018/10/07/5bba12ea4c4d9.pnghttps://i.loli.net/2018/10/07/5bba12ea4ffcb.pnghttps://i.loli.net/2018/10/07/5bba1390d7003.jpg-->]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Fedora </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Audrey Hepburn</title>
      <link href="/2018/10/03/Audrey-Hepburn/"/>
      <url>/2018/10/03/Audrey-Hepburn/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p></p><h1 align="center"> 不朽的经典, 永远的女神<p></p><h1 id="罗马假日"><a href="#罗马假日" class="headerlink" title="罗马假日"></a>罗马假日</h1><p><strong>安</strong>（<code>奥黛丽·赫本</code>饰）是一位皇室的公主。她正在对欧洲的一些首都进行公开的访问，包括罗马。<br>一天夜晚，她对她第二天将要进行的非常紧张的公务感到难以承受而变得<code>情绪失控</code>。她的医生给她注射了一针镇静剂来帮助睡眠，<br><a id="more"></a><br><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb475070a2c8.png" alt title class>                <p></p>            </figure><br><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4750ed1615.png" alt="公主殿下" title class>                <p>公主殿下</p>            </figure><br><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4750a903f1.png" alt title class>                <p></p>            </figure></p><p>但是公主悄悄地离开了她所在的大使馆，希望自己来体验真正的<code>罗马</code>。</p><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb474dd4bc5e.png" alt="出逃" title class>                <p>出逃</p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb474f2b54aa.png" alt title class>                <p></p>            </figure><p>此时画面转向一个小房间<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4750e766fc.png" alt="电影中的男主人公正在打牌🃏️" title class>                <p>电影中的男主人公正在打牌🃏️</p>            </figure><br>不久，镇静剂开始发挥效力，公主在路边的一张长椅上睡着了，并被一位美国记者<code>乔伊·布莱德利</code>所发现。<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4750ca559b.png" alt="初识" title class>                <p>初识</p>            </figure><br>由于双方并不认识，他给了她一些钱让她坐出租车回家。但是非常困倦的<code>“安雅·史密斯”</code>（她本人如此自称）拒绝合作。<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4750749212.png" alt="出租车🚗️" title class>                <p>出租车🚗️</p>            </figure><br>最终，出于安全考虑，乔伊决定让她在自己的公寓度过一晚。一开始，他对她王室一般的举止感到非常好笑，<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4763ee4e3e.png" alt="更衣" title class>                <p>更衣</p>            </figure><br>但是当发现她占据了自己的床铺，<code>乔伊</code>感到很不高兴。他没有叫醒她就直接把她移到一把躺椅上。第二天早上，<code>乔伊</code>发现自己起晚了。慌忙中他冲出门去上班，没有顾及她。</p><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4764511321.png" alt="迟到" title class>                <p>迟到</p>            </figure><p>当他的主编<code>韩纳西</code>责问他为什么迟到，<code>乔伊</code>撒了谎。他声称自己已经参加过了为公主召开的记者见面会。当<code>乔伊</code>开始有头有脸地编造所谓的见面会上的细节时，<code>韩纳</code>西告诉他根本就没有什么记者见面会，因为公主突然“生病”了，原来准备进行的见面会也告取消。<code>乔伊</code>看到了一张公主的照片，并认出了她就是昨天晚上自己遇到的那个年轻女子。</p><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb476451af31.png" alt="报纸📰️" title class>                <p>报纸📰️</p>            </figure><p>最后，<code>乔伊</code>和<code>韩纳西</code>打赌说他能够写出一篇有关公主的独家报道，以逃过主编的斥责。</p><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4764531a93.png" alt="独家报道" title class>                <p>独家报道</p>            </figure><p><code>乔伊</code>意识到著名的公主在他的房间中，他仿佛感到自己面对的是一笔飞来横财。他小心地隐藏自己媒体记者的身份，主动提出带<code>安雅</code>在罗马参观。后来当他遇到自己的朋友，照相师<code>欧文·拉多维奇</code>时，事情变得更加顺利，因为他的朋友对暗中拍摄的本领掌握得非常娴熟。<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb47866b6d28.png" alt="拍照" title class>                <p>拍照</p>            </figure><br>这时<code>安雅</code>却不愿意让<code>乔伊</code>陪同自己而独自离开。<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4775401a50.png" alt title class>                <p></p>            </figure></p><p>享受着这样的自由（平时她总是有永远没有尽头的公务与访问），<code>安雅</code>心血来潮地在一家理发店把她的头发剪短。<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4774de260a.png" alt="理发💇🏻‍♀️" title class>                <p>理发💇🏻‍♀️</p>            </figure><br><code>乔伊</code>悄悄地跟着她，并且“意外地”再次遇到她。<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb47753a1ec0.png" alt="偶遇" title class>                <p>偶遇</p>            </figure><br><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4785ee6dfc.png" alt title class>                <p></p>            </figure><br>他们用了一天时间在罗马周游，去了很多景点。<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4786964560.png" alt="游玩" title class>                <p>游玩</p>            </figure><br>在真理之口，他们看到了一个据说能够咬下说谎者的手指的石雕。当<code>乔伊</code>把他的手拿出来时，他把手藏在了袖子里使之看起来像是被咬掉了。<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4786965cf4.png" alt="真理之石" title class>                <p>真理之石</p>            </figure><br>当<code>安雅</code>大声惊叫的时候，他却把手重新从袖子中拿出了并大笑。后来，<code>安雅</code>告诉<code>乔伊</code>她一直以来的一个梦想，那就是做一个普通的女孩，过一种常人的生活，而不需要承当作为公主那么深重的责任。那天晚上，当两个人在一只小船上跳舞时，八名特工发现了公主，想强行将公主带走。但在一阵混乱中，<code>乔伊</code>和<code>安雅</code>巧妙地逃脱。<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb47841d695b.png" alt="坠入爱河" title class>                <p>坠入爱河</p>            </figure><br>在这短短的一天里，两个人逐渐坠入爱河，</p><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb47841e173d.png" alt title class>                <p></p>            </figure><p>但<code>安雅</code>知道双方的关系是不可能持续的。在极度的痛苦中，她和<code>乔伊</code>道别，并且回到了大使馆。自始至终，她都没有主动说出自己真实的身份。</p><p>在这天所发生的一连串事件中，<code>韩纳西</code>逐渐了解到公主并不是像大使馆声称的那样生病了，而是失踪。想到<code>乔伊</code>和他打的那个赌，他立刻怀疑<code>乔伊</code>知道公主在哪里，并且试图让<code>乔伊</code>说出来，但是<code>乔伊</code>始终说自己对此一无所知。照顾到<code>乔伊</code>对公主的感情，<code>欧文</code>最终勉强同意不再出售自己所暗中拍摄的公主照片。<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb47868b4e64.png" alt title class>                <p></p>            </figure></p><p>第二天，<code>安公主</code>出现在了推迟举行的新闻发布会上，并且对<code>乔伊</code>和<code>欧文</code>的出现感到惊讶。<code>欧文</code>用打火机状的袖珍照相机拍了一张照片，而这正是他在前一天秘密拍摄公主照片的方法。<code>欧文</code>将这些照片还给了公主，当作“公主在罗马的回忆照片”。<code>乔伊</code>间接地让公主知道，她的秘密将永远不会外泄。<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb47868b6899.png" alt title class>                <p></p>            </figure><br>而公主，当回答记者的提问：“公主殿下旅途中最欣赏哪一个城市？”的问题时，在一串外交辞令之后，终于流露出自己的真情：<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4786481b0d.png" alt title class>                <p></p>            </figure></p><blockquote><p>Rome, by all means, Rome. I will cherish my visit here in memory, as long as I live!<br>罗马，当然是罗马。我会用我的一生来珍藏在这座城市里度过的每一分钟。</p></blockquote><p>新闻发布会结束了，公主离开了大厅。只有乔伊默默地站着，深沉地守着会目送公主离开的约定。<br><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb478a18274b.png" alt="深情👁️目送" title class>                <p>深情👁️目送</p>            </figure></p><div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"theme":"#FADFA3","loop":true,"preload":"none","video":{"url":"https://file.ourfor.top/source/ourfor/Roman_HolidayRoman.Holiday.part2.mp4","pic":"https://file.ourfor.top/source/ourfor/Roman_HolidayRoman.Holiday.1953.1080p.WEBRip.DD2.0.x264-FGT.00_12_04_23.%E9%9D%99%E6%AD%A2009.png"},"danmaku":{"id":"9E2E3368B56CDBB4","api":"http://dplayer.daoapp.io"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><h1 id="奥黛丽·赫本"><a href="#奥黛丽·赫本" class="headerlink" title="奥黛丽·赫本"></a>奥黛丽·赫本</h1><p>奥黛丽赫本（出生于奥黛丽凯瑟琳·拉斯顿,比利时 ; 1929年5月4日 - 1993年1月20日）是英国女演员，模特，舞蹈家和人道主义者。赫本被公认为电影和时尚偶像，在好莱坞的黄金时代也很活跃。她被美国电影学院评为好莱坞黄金时代第三大女性电影传奇人物，并入选国际最佳着装名单名人堂。</p><p>赫本出生于布鲁塞尔附近的伊克塞尔市，在比利时，英国和荷兰度过了童年。在阿姆斯特丹，她与Sonia Gaskell学习芭蕾舞，之后于1948年移居伦敦，继续与Marie Rambert一起进行芭蕾舞训练，然后在西区音乐剧制作中担任合唱女郎。</p><p>在几部影片中出现少量影片之后，赫本出演了1951年的百老汇戏剧“ 吉吉”，后来被法国小说家科莱特发现，该片以戏剧为基础。在<strong><em>罗马假日</em></strong>（1953年）担任主角后，她成为明星，她是第一位获得奥斯卡金像奖，金球奖和BAFTA奖的女演员。就在同一年，赫本赢得了托尼奖为在玩最佳女主角，她在演出代恩。她继续在一些成功的电影中出演，如<strong><em>萨布丽娜</em></strong>（1954），<strong><em>尼姑的故事</em></strong>（1959年），<strong><em>Tiffany Breakfast</em></strong>（1961年），<strong><em>Charade</em></strong>（1963年），<strong><em>My Lady Lady</em></strong>（1964年）和<strong><em>Wait Until Dark</em></strong>（1967 年），获得奥斯卡金像奖，金球奖和BAFTA提名。赫本获得三项英国电影艺术学院颁发的最佳英国女演员奖。为了表彰她的电影生涯，她获得了BAFTA终身成就奖，金球奖Cecil B. DeMille奖，电影演员公会终身成就奖和特别托尼奖。她仍然是15名获得学院，艾美奖，格莱美奖和托尼奖的人之一。</p><p>随着她的生活继续，赫本出现在较少的电影中，将她的大部分生活都献给了联合国儿童基金会。自1954年以来，她一直为该组织做出贡献，然后在1988年至1992年期间在非洲，南美洲和亚洲的一些最贫困社区工作。她被授予总统自由勋章，以表彰她1992年12月担任联合国儿童基金会亲善大使的工作。一个月后，赫本去世，享年63岁，在瑞士的家中死于阑尾癌。</p><hr><h1 id="Audrey-Hepburn-——-A-true-angel-in-this-world"><a href="#Audrey-Hepburn-——-A-true-angel-in-this-world" class="headerlink" title="Audrey Hepburn    —— A true angel in this world"></a>Audrey Hepburn    —— A true angel in this world</h1><p><img src="https://i.loli.net/2018/10/03/5bb4750f0524e.png" alt="Roman Holiday" title="Roman Holiday" class="justify-small" style="margin: 0;"></p><div class="custom" style="font-size: 16px"><br><br>Audrey Hepburn thrilled audiences with starring roles in <strong><em>noteworthy</em></strong>  films like <strong><em>Breakfast at Tiffany’s</em></strong>,<strong><em>Sabrina</em></strong> , <strong><em>Roman Holiday</em></strong>, <strong><em>My Fair Lady</em></strong>, <strong><em>War and Peace</em></strong>, and <strong><em>Always</em></strong> .<br><br>Despite her success in the film domain, the roles she most preferred portraying were not in movies. She was an exemplary mother to her two sons and a UNICEF (the United Nations International Children’s Emergency Fund) Ambassador of Goodwill serving victims in war-torn countries.<br><br>As a yong girl during the Nazi occupation of her native Holland, Audrey Hepburn was aware of the brutality, death and destruction of war. She was hungry and malnourished, as her family was bankrupted as a result of the invasion. Audrey’s father abandoned the family, and two of her uncles were taken captive and killed. Audrey was grabbed off the street by Nazis and placed in line to be sent to a work camp. When the guards glanced away she darted off, barely escaping, and huddled in a cold, foul basement full of rats.<br><br>The little girl who would become the world’s most magical actress began as an anonymous refugee confronting life’s horrors and fragilityy firsthand. But she refused to allow her spirit to be afflicted by the desperate reality of her young life. Instead, she transcended those chanllenges but never forgot what it felt like to suffer, to be hungry, alone and helpless.<br><br>After the war, Audrey and her mother left Holland, arrving in London as poor immigrants. Her dream of becoming a prime dancer drove her into a rigorous schedule at a famous ballet school. Later, she was spotted by a froducer and eventually landed a role in the film <strong><em>Roman Holiday</em></strong>  starring Gregory Peck, one of Hollywood’s top leading men.<br><br>Soon, Audrey was transformed from a malnourished immigrant to an internationally famous movie star. Director Billy Wilder complimented her, saying, “Audrey walked beautifully, she spoke beautifully.” Although she won many Academy Awards and other honors for acting, Audrey felt that her most significant work was hmanitarian divorces and from her memories of the war. Yet, Audrey neverlet her sadness overcome her or jeopardize her hope for a brighter future. Audrey finally met her soul mate, Robert Wolders, and spent the last 12 years of her life with him.<br><br>Becaming famous never changed Audrey’s generous and compassionate character. She felt a deep sense of responsibility to alleviate suffering of those in meed, especially children. Friends said Audrey had a complete lack of ego and accepted and appreciated others as they were.<br><br>Though she became very wealthy, she owned only one home in Switzerland. For Audrey it was a paradise wher she could hide from the world with her beloved family, work in her garden and take long walks in nature.<br><br>In 1998, Audrey was appointed a Goodwill Ambassador for UNICEF desinged toprovide emergency food and helthcare to children suffering the destruction of war or other catastrophes. In that role, her lifelong passion for helping those in need, found its greatest calling.<br><br>She turned down three million dollars to pen her autobiography and instead accepted one dollar a year in the more conscientious role as diplomat for UNICEF. For seven months out of each of her last five years, she and Robby left the peace and  beauty in their cozy home to embark on outreach trips into some of the most difficult places on earth. From Bangladesh, Sudan, India, Vietnam, Kenya, Ethiopia, Central and South America, to Somalia, Audrey Hepburn traveled representing UNICEF, making over 50 emotionally draining and physically dangerous missions into bleak destinations to raise world awareness of wars and droughts. Having been a bictim of war, she understood the blessing of being the beneficiary of food, clothing, and, most of all, hope.<br><br>Audrey felt it was wicked that billions of children were deprived of simple joys and drowned in ovewhelming misery. She believed dedplu int he ideology that all people share in the duty to care for those in need. Audruey Hepburn was always ready to lead by example. She said: “When you deny childhood, you deny life.” She saw UNICEF’s work as an integral, sacred force in people’s living and said of UNICEF’s work as an integral, sacred force in people’s lives and said of UNICEF’s results,<br></div><blockquote><p>Anyone who doesn’t believe in miracles is not a realist.</p></blockquote><p><blockquote class="imgur-embed-pub" lang="en" data-id="a/r7Xg9be"><a href="//imgur.com/r7Xg9be">Roman Holiday</a></blockquote><script async src="//s.imgur.com/min/embed.js" charset="utf-8"></script></p><div class="custom" style="font-size: 16px"><br>In 1992, Audrey was stricken by cancer. She, Robby and her sons returned to their home in Switzerland for their last Christmas together.<br><br>Audrey’s long-time friend and world-famous French fashion designer, Hubert de Givenchy, spoke to his cherished friend for the last time, just before she died. He said she was “…serene at the end because she knew she had achieved everything with perfection”.<br><br>Audrey Hepburn’s passion for service was enduring. Even as herlife ended at 63 years of age, she remained a gracious woman who perpetually signified simplicity, charity, charm and kindness.<br><br>The majesty of Audrey Hepburn’s spirit of social responsibility and dedication lives on in her words:<br></div><blockquote><p>Remember, if you ever need a helping hand, it’s at the end of your arm. As you ger older, remember you have another hand: The first is to help yourself, the second is to help others.” And “For beautiful eyes, look for the good in others; for beautiful lips, speak only words of kindness; and for poise, walk with the knowledge that you are never alone.</p></blockquote><!--<figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb474dd4bc5e.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb474f2b54aa.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb475070a2c8.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4750749212.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4750a903f1.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4750ca559b.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4750e766fc.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4750ed1615.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4750f0524e.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4750f3298c.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4763e89b28.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4763ee4e3e.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb476405d843.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb47641ca11e.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb47642e3515.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb47643f28ad.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4764511321.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb476451af31.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4764531a93.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4764568ce4.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb477482e25a.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4774c210d1.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4774d4316d.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4774de260a.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4774e52189.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4774fb18f4.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb477502bc22.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb477539d6e4.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb47753a1ec0.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4775401a50.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb47841d695b.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb47841e173d.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4785ee6dfc.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4786481b0d.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb47866b6d28.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb47867d92c1.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb47868b4e64.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb47868b6899.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4786964560.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4786965cf4.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb478a18117c.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb478a18274b.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4a08764b6d.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4a08766dbb.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4a08768122.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4a08820bb3.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4a08826153.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4a0882b49e.png" alt="" title="" class="">                <p></p>            </figure><figure class="image-box">                <img src="https://i.loli.net/2018/10/03/5bb4a08830193.png" alt="" title="" class="">                <p></p>            </figure><p>–&gt;</p>--></h1>]]></content>
      
      
      
        <tags>
            
            <tag> classic </tag>
            
            <tag> film </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷机、解锁-送给小白的教程</title>
      <link href="/2018/09/16/%E5%88%B7%E6%9C%BA%E3%80%81%E8%A7%A3%E9%94%81-%E9%80%81%E7%BB%99%E5%B0%8F%E7%99%BD%E7%9A%84%E6%95%99%E7%A8%8B/"/>
      <url>/2018/09/16/%E5%88%B7%E6%9C%BA%E3%80%81%E8%A7%A3%E9%94%81-%E9%80%81%E7%BB%99%E5%B0%8F%E7%99%BD%E7%9A%84%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>酷安上一直有酷友问我我的手机上的那些个性化的东西是怎么弄得，以及我制作的magisk模块该怎么使用？说来话长，要使用magisk模块，你需要做以下几件事：1.首先有bl🔒️，要解锁bootloader 2.输入第三方recovery 3.刷入<a href="//github.com/topjohnwu/Magisk">topjohnwu</a>的 <em>magisk</em> 环境 4.刷入制作好的magisk模块。必要时还要备份基带。就这么简单的几步，看似简单，却<strong><em>very important</em></strong></p><a id="more"></a><p>本教程涉及设备及环境：</p><ul><li>小米6 </li><li>Windows环境下解锁bootloader</li><li>Windows或OS X下都可以刷入第三方recovery</li></ul><h1 id="解锁bootloader"><a href="#解锁bootloader" class="headerlink" title="解锁bootloader"></a>解锁bootloader</h1><blockquote><p>如果你的手机没有bl锁，可以忽略这一步</p></blockquote><ul><li><a href="//www.miui.com/unlock/index.html">小米手机解锁</a><br>点击<code>立即解锁</code>之后登录<code>小米帐号</code>再次点击<strong><em>立即解锁</em></strong>就会跳转到解锁工具的下载页面。这个解锁工具只有windows版本的下载，所以需要一台联网的windows环境的电脑。需要登录自己的小米帐号才能解锁。</li></ul><hr><figure class="image-box">                <img src="https://i.imgur.com/vZQRgUn.png" alt="TWRP" title class>                <p>TWRP</p>            </figure><h1 id="刷入第三方recovery"><a href="#刷入第三方recovery" class="headerlink" title="刷入第三方recovery"></a>刷入第三方recovery</h1><p>推荐使用<a href="//twrp.me">twrp</a>适配的recovery，点击右侧的menu，选择device，找到你的设备，在你的设备详情页面里面的<code>Downlink Links</code>里面有两个镜像站，可以点击<code>Americas</code>或者<code>Europe</code>下载。</p><h3 id="刷入recovery"><a href="#刷入recovery" class="headerlink" title="刷入recovery"></a>刷入recovery</h3><p>下面有几种方法刷入recovery：</p><ol><li>Install Android SDK </li></ol><p>以OS X为例(假定你已经安装了brew)，在<code>Terminal</code>中输入:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install android-platform-tools</span><br></pre></td></tr></table></figure><p>安装完毕后，数据线连接电脑，执行下面命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">adb reboot bootloader  <span class="comment">#或者关机后，按下电源键和音量减进入fastboot模式</span></span><br><span class="line">fastboot flash recovery twrp.img     <span class="comment">#twrp.img替换成你下载的recovery的绝对路径，或者之间将recovery文件拖进Terminal窗口</span></span><br><span class="line">fastboot reboot</span><br></pre></td></tr></table></figure><p>2.如果你之前root了手机，手机安装Terminal之后，可以使用dd刷入recovery，在Terminal里面输入:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">su  <span class="comment">#将root权限授予Terminal</span></span><br><span class="line">dd <span class="keyword">if</span>=/sdcard/twrp.img of=/dev/block/bootdevice/by-name/recovery       <span class="comment">#将下载的recovery改名为twrp.img,放在sdcard目录下，或者input file填写你下载的recovery的绝对路径</span></span><br></pre></td></tr></table></figure><p>再刷入第三方ROM前，一些必要的备份就特别重要</p><ul><li>备份EFS(基带)</li><li>备份所有分区(非必须,类似于Windows下面的一键ghost)</li></ul><figure class="image-box">                <img src="https://i.imgur.com/ii80ddI.png" alt="Backup" title class>                <p>Backup</p>            </figure><figure class="image-box">                <img src="https://i.imgur.com/dP6q47X.png" alt="Backuo Complete" title class>                <p>Backuo Complete</p>            </figure><h2 id="刷入第三方ROM"><a href="#刷入第三方ROM" class="headerlink" title="刷入第三方ROM"></a>刷入第三方ROM</h2><ul><li>刷入第三方ROM前需要在twrp里面清除部分Data分区、Cache分区以及虚拟机Dalvik缓存，俗称<code>三清</code></li></ul><figure class="image-box">                <img src="https://i.imgur.com/8J9vXGq.png" alt="Wipe" title class>                <p>Wipe</p>            </figure><blockquote><p>如果原系统是miui，在刷入原生ROM之后，可能还好格式化内部存储，因为miui对内部存储加密了，不格式化，原生rom无法开机和使用内部存储空间</p></blockquote><p>在TWRP主界面，在Wipe之后，点击Install选择刷机包：<br><figure class="image-box">                <img src="https://i.imgur.com/a6bhzgV.png" alt="Install" title class>                <p>Install</p>            </figure></p><h1 id="Other"><a href="#Other" class="headerlink" title="Other"></a>Other</h1><p>刷入PE的小米6:<br><figure class="image-box">                <img src="https://i.imgur.com/faweJ0T.png" alt="Setting" title class>                <p>Setting</p>            </figure><br><figure class="image-box">                <img src="https://i.imgur.com/aBsSayO.png" alt="酷安" title class>                <p>酷安</p>            </figure><br><figure class="image-box">                <img src="https://i.imgur.com/AqJw18B.png" alt="Lancher" title class>                <p>Lancher</p>            </figure><br><figure class="image-box">                <img src="https://i.imgur.com/JukJAIC.png" alt="开关" title class>                <p>开关</p>            </figure></p>]]></content>
      
      
      
        <tags>
            
            <tag> 刷机 </tag>
            
            <tag> 解锁 </tag>
            
            <tag> twrp </tag>
            
            <tag> root </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ShadowsocksR使用教程</title>
      <link href="/2018/09/08/ShadowsocksR%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
      <url>/2018/09/08/ShadowsocksR%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>谈到科学上网，相信大家并不陌生，<code>翻墙</code>、<code>vpn</code>早就是大家耳熟能祥的名词了,其实各国都有网路审查，只不过国内比较严，<em>GFW-Great Firewall Wall</em>中国长城防火墙负责对网络上面传输的内容进行审查，目前比较流行的科学上网方式是<strong><em>ssr</em></strong>，vpn的话，这个太容易被封了，特别是逢年过节开大会，一不小心服务器ip就被封了，如果你用的是vultr的主机还好，按小时计费，随时更换ip，如果你是包年包季的话，那你就的小心点了，<code>Shadowsocks</code>（下面简称SSR、酸酸乳）有很多优点，速度较vpn有很大提升…..<br><a id="more"></a></p><h1 id="Shadowsocks有哪些优点"><a href="#Shadowsocks有哪些优点" class="headerlink" title="Shadowsocks有哪些优点"></a>Shadowsocks有哪些优点</h1><ul><li>路由功能强大<br>用过vpn的同学都知道，一旦设备与服务器建立VPN连接，设备上面的所有流量都要通过服务器，如果你是访问国外网站这倒没什么，但是如果你访问国内网站，访问的响应速度就会大幅下降，感觉好像网络变差了。</li></ul><p>而<code>SSR</code>的路由功能很好的解决了这个问题：</p><table><thead><tr><th style="text-align:center">选项</th><th style="text-align:center">-</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">全局</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">绕过局域网地址</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">绕过中国大陆地址</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">绕过局域网及中国大陆地址</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">仅代理中国大陆无法访问的地址</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">仅代理中国大陆地址</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">自定义ALC文件</td></tr></tbody></table><ul><li>设置DNS<br>有些网站ip没有被墙,但是却无法访问。就是DNS污染了，我们知道每个服务器都有一个ip，我们可以通过ip来获取服务器上面的资源，目前比较常用的是ipv4，当然ipv6也在逐步普及，ipv4地址由32位二进制数（4个字节）组成，如11000000,10101000,00000000,00000001.为了表示方便，同时也为了便于用户理解和记忆，将每一个字节用一个十进制数（0~255）表示，每个十进制数之间用小数点分开，称为点分十进制地址，如上述的二进制地址所对应的点分十进制地址是192.168.0.1,这个地址有没有很熟悉？如果有设置过路由器的，路由器一般打开dhcp前的默认后台地址就是这个，每个域名都解析到一个ip，我们可以在终端查看设备的ip地址和域名的ip：<br>以unix/linux为例:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ifconfig           <span class="comment">#查看前设备ip</span></span><br><span class="line">ping ourfor.top     <span class="comment">#查看ourfor.top这个域名解析的ip，也就是服务器的ip</span></span><br></pre></td></tr></table></figure></li></ul><hr><p>(未完待续)</p>]]></content>
      
      
      
        <tags>
            
            <tag> 酸酸乳 </tag>
            
            <tag> 科学上网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用软件及网站</title>
      <link href="/2018/07/27/Android_Beta_Software/"/>
      <url>/2018/07/27/Android_Beta_Software/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>由于经常搞机，记录一下精品软件和常用的网站，这些软件不仅功能强大，而且UI美观简洁，个人强烈推荐，这些软件能够满足日常需要。</p><a id="more"></a><div align="center"><br><img src="//i.loli.net/2018/07/27/5b5ada87c29b0.jpg" width="100%" height="100%"><br></div><hr><ul><li><a href="//www.duokan.com/">多看阅读</a> 精致的读书软件，书籍排版美观。</li><li><a href="//www.google.cn/chrome/">Chrome</a> 为数不多的值得长期使用的浏览器</li><li><a href>Via</a> 小而全的浏览器，自定义极强</li><li><a href>谷歌相机</a> 强大的算法，继承的谷歌一贯的基因</li><li><a href="//www.youtube.com">Youtube</a> 全球最大的视频网站（新闻、教程和搞笑视频）</li><li><a href="//www.coolapk.com/">酷安</a> 集软件、社交、搞基和分享于一体的交流平台。在酷安，你甚至可以学会做菜。</li><li><a href="//github.com/topjohnwu/Magisk">Magisk</a> 搞🐓️必备，功能强大。</li><li><a href>Gboard</a> 绝对强大的多语言输入法</li><li><a href="//office.qq.com/">Tim</a> 学生狗🐕️一枚，得用腾讯的即时社交软件</li><li><a href="//everphoto.cn/">时光相册</a> 时光易逝，让图片留下岁月的回忆</li><li><a href="//music.163.com">网易云音乐</a> 走情怀路线的在线音乐播放器</li><li><a href>SSR</a> 科学上网必备神器</li><li><a href="http://xmcs.mi.com/" target="_blank" rel="noopener">小米超神</a> 一款竞技类的Moba手游，不氪金也能创造快乐</li><li><a href="//dl.xunlei.com/">迅雷</a> 下载神器，国内下载一家独大</li><li><a href="//binmt.cc">MT管理器</a> 搞机必备，文本编辑、解压、反编译神器</li><li><a href="//www.videolan.org">VLC</a> 开源、强大的媒体播放软件(本地在线)</li><li><a href>知乎</a> 只有会编，每个人都是故事的主角😄️😄️</li><li><a href="https://mail.google.com/mail/u/0/#inbox" target="_blank" rel="noopener">Gmail</a> 不仅仅是邮件客户端</li><li><a href="//www.bilibili.com/">哔哩哔哩</a> 在线弹幕视频网站，二次元</li><li><a href="//termux.com/">Termux</a> 仿真的Linux终端</li><li><a href="//github.com">GitHub</a> 全球最大的开源社区，它会教你更多。</li><li><a href="//play.google.com">Play 商店</a></li><li><a href="//google.com">Google</a></li></ul><hr><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><ul><li>隐藏“允许任何来源的应用”选项问题</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo spctl --master-disable</span><br></pre></td></tr></table></figure><ul><li>笔记本开启插入电源提示音</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.PowerChime ChimeOnAllHardware -bool <span class="literal">true</span>; open /System/Library/CoreServices/PowerChime.app &amp;</span><br></pre></td></tr></table></figure><ul><li>MacOS系统下导出man手册内容</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">man <span class="built_in">log</span> | col -b &gt; ~/Desktop/log_manual.txt</span><br></pre></td></tr></table></figure><ul><li>macOS终端教你英语</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">say <span class="string">'单词'</span></span><br></pre></td></tr></table></figure><ul><li>终端地图</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install mapscii</span><br></pre></td></tr></table></figure><ul><li>黑客帝国字节流</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install cmatrix</span><br></pre></td></tr></table></figure><ul><li>美化单词</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install toilet</span><br></pre></td></tr></table></figure><ul><li>蒸汽机开过</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install sl</span><br></pre></td></tr></table></figure><ul><li>牛说</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install Cowsay</span><br><span class="line">Cowsay 可以</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>初尝Typecho</title>
      <link href="/2018/07/20/%E5%88%9D%E5%B0%9DTypecho/"/>
      <url>/2018/07/20/%E5%88%9D%E5%B0%9DTypecho/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>昨天笔记本重装10.13不小心把博客的源代码删了，虽然我有保存有多个副本，但是最近的一次副本保存在机械硬盘里面的，而这机械硬盘我放在宿舍没拿回家，所以我就暂时没有去碰服务器和Coding上面的<code>HTML源码</code>，但是我也不能闲着啊，毕竟有两个月的时间在家，除了平时的笔记push到<code>Github</code>仓库之外，我还会把一些东西记录下来，也是一个偶然的机会发现了 <strong><em>Typecho</em></strong>，原本是在应用商店里面看<code>Rime输入法</code>，无意中点进去一个博客，发现底部的博客框架是<code>Typecho</code>，点进去就来到了<a href="http://typecho.org/" target="_blank" rel="noopener">Typecho官网</a>,反正我也闲来无事，就搭一个耍耍，顺便记录下来，可能会帮到搭建遇到问题的人。<br><a id="more"></a></p><h1 id="初识Typecho"><a href="#初识Typecho" class="headerlink" title="初识Typecho"></a>初识Typecho</h1><ul><li>这<code>Typecho</code>究竟是什么博客框架？<br>这个博客框架和<code>WordPress</code>一样属于动态博客框架，之前有看过我写的<a href="https://blog.ourfor.top/2018/03/06/hexo-github-coding%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/">hexo+github/coding搭建个人博客</a>就知道这二者的区别。</li></ul><p>其实二者最本质的区别就是对[编辑语法]的支持以及[环境的依赖]。如果你跟喜欢Word文档或者Powerpoint式的写作，那么我并不推荐你使用静态博客，也就是<code>HTML语法</code>的网页，<code>PHP语法</code>更适合你。所以二者环境的区别就是是否需要安装<code>Php</code>和<code>Mysql数据库</code>，这里不深入展开讨论，回归正题，<code>Typecho</code>有哪些优点呢？官网首页这样写到：</p><ul><li><p>轻量高效 仅仅 7 张数据表，加上不足 400KB 的代码，就实现了完整的插件与模板机制。超低的 CPU 和内存使用率，足以发挥主机的最高性能。</p></li><li><p>先进稳定 原生支持 Markdown 排版语法，易读更易写。支持 BAE/GAE/SAE 等各类云主机，即使面对突如其来的高访问量，也能轻松应对。</p></li><li><p>简洁友好 精心打磨过的操作界面，依然是你熟悉的面孔，更多了一份成熟与贴心。每一个像素的剪裁，都只为离完美更进一步。</p></li></ul><p>我补充几点：</p><ul><li><p>丰富的主题及插件 你可以上<code>Github</code>上面搜索 <strong><em>Typecho</em></strong>,你就会发现很多精美的开源主题和异常丰富的插件，此外原生支持评论，这类动态博客都可以这web端随时随地管理，同样缺点也很明显，文章不利于保存，还得拥有一台有公网IP的主机。</p></li><li><p>用户量还算比较多 据说有500,000 用户。</p></li></ul><blockquote><p>建议还算适当的掌握 <strong><em>MarkDown语法</em></strong> 和一些简单的 <strong><em>HTML语法</em></strong>，虽然此框架不要求。</p></blockquote><h1 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h1><p>昨天我在Vultr上面的服务器上面搭建好了，今天我就以<code>树莓派</code>上面的<code>CentOS</code>为例，下面👇🏻贴出我的详细配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Last login: Fri Jul 20 15:40:12 2018 from 192.168.1.174</span><br><span class="line">Nice To Meet You!</span><br><span class="line">                 ..                    root@localhost.localdomain</span><br><span class="line">               .PLTJ.                  --------------------------</span><br><span class="line">              &lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;                 OS: CentOS Linux 7 (Core) armv7l</span><br><span class="line">     KKSSV<span class="string">' 4KKK LJ KKKL.'</span>VSSKK        Host: Raspberry Pi 3 Model B</span><br><span class="line">     KKV<span class="string">' 4KKKKK LJ KKKKAL '</span>VKK        Kernel: 4.14.52-201.el7.armv7hl</span><br><span class="line">     V<span class="string">' '</span> <span class="string">'VKKKK LJ KKKKV'</span> <span class="string">' '</span>V        Uptime: 12 hours, 22 mins</span><br><span class="line">     .4MA.<span class="string">' '</span>VKK LJ KKV<span class="string">' '</span>.4Mb.        Packages: 468 (rpm)</span><br><span class="line">   . KKKKKA.<span class="string">' '</span>V LJ V<span class="string">' '</span>.4KKKKK .      Shell: zsh 5.0.2</span><br><span class="line"> .4D KKKKKKKA.<span class="string">''</span> LJ <span class="string">''</span>.4KKKKKKK FA.    Terminal: /dev/pts/0</span><br><span class="line">&lt;QDD ++++++++++++  ++++++++++++ GFD&gt;   CPU: Generic DT based system (4)</span><br><span class="line"> <span class="string">'VD KKKKKKKK'</span>.. LJ ..<span class="string">'KKKKKKKK FV     Memory: 173MiB / 974MiB</span></span><br><span class="line"><span class="string">   '</span> VKKKKK<span class="string">'. .4 LJ K. .'</span>KKKKKV <span class="string">'</span></span><br><span class="line"><span class="string">      '</span>VK<span class="string">'. .4KK LJ KKA. .'</span>KV<span class="string">'</span></span><br><span class="line"><span class="string">     A. . .4KKKK LJ KKKKA. . .4</span></span><br><span class="line"><span class="string">     KKA. '</span>KKKKK LJ KKKKK<span class="string">' .4KK</span></span><br><span class="line"><span class="string">     KKSSA. VKKK LJ KKKV .4SSKK</span></span><br><span class="line"><span class="string">              &lt;&gt;&lt;&gt;&lt;&gt;&lt;&gt;</span></span><br><span class="line"><span class="string">               '</span>MKKM<span class="string">'</span></span><br><span class="line"><span class="string">                 '</span><span class="string">'</span></span><br></pre></td></tr></table></figure><p>首先安装<code>lnmp环境</code>，由于安装<code>lnmp</code>并不是本文的重点，你可以去官网下载源码编译安装，也可以在仓库安装，为了节约时间，这里使用一键安装脚本。<br>一键安装脚本<a href="https://lnmp.org/download.html" target="_blank" rel="noopener">官网</a>,这里提供<code>version=1.5</code>的在线安装脚本<a href="http://soft.vpser.net/lnmp/lnmp1.5.tar.gz" target="_blank" rel="noopener">下载链接</a></p><p>ssh接入服务器，键入如下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget http://soft.vpser.net/lnmp/lnmp1.5.tar.gz</span><br><span class="line">tar -xvf lnmp1.5.tar.gz     <span class="comment">#解压压缩文件，会生成一个名为lnmp1.5的目录，可以通过ls查看</span></span><br><span class="line"><span class="built_in">cd</span> lnmp1.5          <span class="comment">#进入解压后的文件夹</span></span><br><span class="line">yum install -y screen   <span class="comment">#安装screen，让脚本后台安装</span></span><br><span class="line">screen -S Install_lnmp  <span class="comment">#创建一个名为Install_lnmp的session。</span></span><br><span class="line">./install.sh   <span class="comment">#执行安装脚本</span></span><br></pre></td></tr></table></figure></p><p>执行安装脚本后它会提示你安装哪个版本，你可以直接回车，当然🙄️也可以按照自己的喜好安装，不过安装Mysql时会让你创建数据库<code>root</code>用户的密码，记住此密码待会有用到。此时你只需要等待它安装完毕即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">PHP: OK</span><br><span class="line">PHP-FPM: OK</span><br><span class="line">Clean src directory...</span><br><span class="line">+------------------------------------------------------------------------+</span><br><span class="line">|          LNMP V1.5 <span class="keyword">for</span> CentOS Linux Server, Written by Licess          |</span><br><span class="line">+------------------------------------------------------------------------+</span><br><span class="line">|           For more information please visit https://lnmp.org           |</span><br><span class="line">+------------------------------------------------------------------------+</span><br><span class="line">|    lnmp status manage: lnmp &#123;start|stop|reload|restart|<span class="built_in">kill</span>|status&#125;    |</span><br><span class="line">+------------------------------------------------------------------------+</span><br><span class="line">|  phpMyAdmin: http://IP/phpmyadmin/                                     |</span><br><span class="line">|  phpinfo: http://IP/phpinfo.php                                        |</span><br><span class="line">|  Prober:  http://IP/p.php                                              |</span><br><span class="line">+------------------------------------------------------------------------+</span><br><span class="line">|  Add VirtualHost: lnmp vhost add                                       |</span><br><span class="line">+------------------------------------------------------------------------+</span><br><span class="line">|  Default directory: /home/wwwroot/default                              |</span><br><span class="line">+------------------------------------------------------------------------+</span><br><span class="line">|  MySQL/MariaDB root password: 2320813747                          |</span><br><span class="line">+------------------------------------------------------------------------+</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">|    Manager <span class="keyword">for</span> LNMP, Written by Licess    |</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">|              https://lnmp.org             |</span><br><span class="line">+-------------------------------------------+</span><br><span class="line">nginx (pid 24643 24642 24641 24640 24639) is running...</span><br><span class="line">php-fpm is runing!</span><br><span class="line"> SUCCESS! MySQL running (25190)</span><br><span class="line">Active Internet connections (only servers)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State</span><br><span class="line">tcp        0      0 127.0.0.1:25            0.0.0.0:*               LISTEN</span><br><span class="line">tcp        0      0 0.0.0.0:3306            0.0.0.0:*               LISTEN</span><br><span class="line">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN</span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN</span><br><span class="line">tcp6       0      0 :::22                   :::*                    LISTEN</span><br><span class="line">Install lnmp takes 162 minutes.</span><br><span class="line">Install lnmp V1.5 completed! enjoy it.​</span><br></pre></td></tr></table></figure><p>显示此信息就说明安装完毕，其中上面的<code>0.0.0.0:3306</code>中的 <strong><em>3306</em></strong> 是Mysql默认监听的端口，<code>0 0.0.0.0:80</code>中的<code>80</code>是<code>Nginx</code>占用的端口。如后续使用<code>Caddy</code>就可以停用<code>Nginx</code>。</p><h2 id="网站根目录"><a href="#网站根目录" class="headerlink" title="网站根目录"></a>网站根目录</h2><p>这里安装的<code>lnmp</code>是默认把<code>/home/wwwroot</code>作为主机的目录。以后添加目录以后都会在这里相应的创建文件夹方便管理。</p><ul><li>添加虚拟主机</li></ul><p>使用命令<code>lnmp vhost add</code>添加虚拟主机目录，其中：</p><table><thead><tr><th style="text-align:center">Q</th><th style="text-align:center">A</th></tr></thead><tbody><tr><td style="text-align:center">Please enter domain(example: <a href="http://www.lnmp.org)" target="_blank" rel="noopener">www.lnmp.org)</a>:</td><td style="text-align:center">填写你的域名，同时dns解析到服务器ip</td></tr><tr><td style="text-align:center">Enter more domain name(example: lnmp.org .lnmp.org):</td><td style="text-align:center">保存默认，回车即可</td></tr><tr><td style="text-align:center">Default directory: /home/wwwroot/share.ourfor.top:</td><td style="text-align:center">回车</td></tr><tr><td style="text-align:center">Allow Rewrite rule? (y/n)</td><td style="text-align:center">y</td></tr><tr><td style="text-align:center">Enable PHP Pathinfo? (y/n)</td><td style="text-align:center">y</td></tr><tr><td style="text-align:center">Allow access logs (y/n)</td><td style="text-align:center">y</td></tr><tr><td style="text-align:center">Add SSL Certificate (y/n)</td><td style="text-align:center">y</td></tr><tr><td style="text-align:center">1.: Use your own SSL Certificate and Key 2.: Use Let’s Encrypt to create SSL Certificate and Key</td><td style="text-align:center">建议使用2，自动添加https证书</td></tr></tbody></table><p>接下来它会自动开始配置，当提示此信息我们就可以进行下一步了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">================================================</span><br><span class="line">Virtualhost infomation:</span><br><span class="line">Your domain: share.ourfor.top</span><br><span class="line">Home Directory: /home/wwwroot/share.ourfor.top</span><br><span class="line">Rewrite: other</span><br><span class="line">Enable <span class="built_in">log</span>: yes</span><br><span class="line">Create database: no</span><br><span class="line">Create ftp account: no</span><br><span class="line">Enable SSL: yes</span><br><span class="line">  =&gt;Let<span class="string">'s Encrypt</span></span><br><span class="line"><span class="string">================================================</span></span><br></pre></td></tr></table></figure><blockquote><p>如果你使用的是VPS，这里忽略</p></blockquote><p>其中由于现在我用的是树莓派，没有做内网穿透，没有公网ip，所以我得修改nginx的配置才能在局域网中访问树莓派。<br>使用 <strong><em>find</em></strong>命令搜索🔍️配置文件<code>find / -name nginx.conf</code>,搜索结果显示我的配置文件在:<code>/usr/local/nginx/conf/nginx.conf</code>,使用vi编辑<code>vi /usr/local/nginx/conf/nginx.conf</code>将其中的:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">listen 80 default_server;</span><br><span class="line">         <span class="comment">#listen [::]:80 default_server ipv6only=on;</span></span><br><span class="line">         server_name _;</span><br><span class="line">         index index.html index.htm index.php;</span><br><span class="line">         root  /home/wwwroot/default;</span><br></pre></td></tr></table></figure></p><p>改为：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">listen 80 default_server;</span><br><span class="line">         <span class="comment">#listen [::]:80 default_server ipv6only=on;</span></span><br><span class="line">         server_name _;</span><br><span class="line">         index index.html index.htm index.php;</span><br><span class="line">         root  /home/wwwroot/share.ourfor.top;</span><br></pre></td></tr></table></figure></p><p>其中<code>/home/wwwroot/share.ourfor.top</code>就是上文我们添加的网站目录，按照你添加的修改，使用<code>lnmp restart</code>重启<strong><em>Nginx</em></strong>使配置生效，那么接下来我们就可以去官网下载源码了。</p><hr><h3 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h3><ul><li><p>下载源码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://typecho.org/downloads/1.1-17.10.30-release.tar.gz&amp;&amp;tar -xvf 1.1-17.10.30-release.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>移动到网站根目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv build/* /home/wwwroot/share.ourfor.top/ <span class="comment">#也就是上文的网站根目录，按照实际情况修改</span></span><br></pre></td></tr></table></figure></li><li><p>创建一个名为typecho的数据库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p   <span class="comment">#回车，接下来输入之前创建root用户所设置的密码</span></span><br><span class="line"><span class="comment">#password</span></span><br><span class="line">create DATABASE typecho; <span class="comment">#创建名为typecho的数据库</span></span><br><span class="line"><span class="built_in">exit</span>  <span class="comment">#退出，保存。</span></span><br></pre></td></tr></table></figure></li></ul><p>接下来就可以打开域名或者局域网ip(树莓派)了，这时候如果打开Dashboard(控制面板)出现没有权限或者<code>Not Found</code>的话，就需要修改<code>php.ini</code>,同样使用find命令搜索<code>find / -name php.ini</code>,使用vi编辑，键入<code>/cgi.fix_pathinfo</code>，查找字符，将<code>cgi.fix_pathinfo=0</code>改为<code>cgi.fix_pathinfo=1</code>,随后重启php,<code>lnmp restart</code></p><ul><li>常见问题：<a href="http://docs.typecho.org/faq" target="_blank" rel="noopener">官方帮助文档</a></li></ul><hr><ul><li>未监听9000端口<br>在php配置文件（一般应该是叫<code>php-fpm.conf</code>）中添加：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">listen = /tmp/php-cgi.sock  <span class="comment">#一般有，这一段不用添加，只是定位</span></span><br><span class="line">listen = 127.0.0.1:9000</span><br></pre></td></tr></table></figure></li></ul><p>使用<code>Caddy</code>代替<code>Nginx</code>作为 <strong><em>Http</em></strong> 服务器(推荐)，相比之前的步骤，使用<code>Caddy</code>则相对比较简单，首先去官网下载<code>Caddy</code>，</p><ul><li><a href="https://caddyserver.com/" target="_blank" rel="noopener">Caddy</a>优势：<ul><li style="list-style: none"><input type="checkbox" checked> 自动签发 HTTPS</li><li style="list-style: none"><input type="checkbox" checked> 目录浏览界面美观强大</li><li style="list-style: none"><input type="checkbox" checked> 容易上手，插件众多，官方文档介绍详细</li></ul></li></ul><p>这里我选择了几个实用的插件：</p><ol><li>http.cache</li><li>http.filemanager</li><li>http.filter</li><li>http.git </li><li>http.jekyll </li><li>http.locale   </li><li>http.login  </li><li>http.upload </li><li>http.webdav  </li><li>tls.dns.vultr</li></ol><p>按照自己的需要选择，这里将<code>caddy</code>下载解压后的文件放到<code>/home/wwwroot</code>下，方便管理网站，并在该目录下创建一个名为<code>Caddyfile</code>的文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">blog.ourfor.top:443 &#123;</span><br><span class="line">root /home/wwwroot/blog.ourfor.top/</span><br><span class="line">timeouts 10m</span><br><span class="line">        gzip</span><br><span class="line">        fastcgi / 127.0.0.1:9000 php</span><br><span class="line">tls 2320813747@qq.com</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><ul><li><code>blog.ourfor.top:443</code>域名以及端口，其中<code>http为80</code>而<code>https为443</code></li><li><code>root /home/wwwroot/blog.ourfor.top/</code>网站根目录路径</li></ul><hr><p>主题推荐：</p><ul><li><a href="https://github.com/WeicMa/Typecho-Theme-Life" target="_blank" rel="noopener">life</a></li><li><a href="https://github.com/chakhsu/pinghsu.git" target="_blank" rel="noopener">pinghsu</a></li><li><a href="https://github.com/chakhsu/lpisme.git" target="_blank" rel="noopener">lpisme</a></li><li><a href="https://github.com/zgq354/typecho-theme-next" target="_blank" rel="noopener">next</a></li><li><a href="https://github.com/jiangmuzi/jianshu.git" target="_blank" rel="noopener">jianshu</a></li></ul><p>插件推荐：</p><p><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/aplayer@1.10/dist/APlayer.min.css"></p><script src="https://cdn.jsdelivr.net/npm/aplayer@1.10/dist/APlayer.min.js"></script><div class="aplayer" data-id="4220599045" data-server="tencent" data-type="playlist"><br></div><script src="https://cdn.jsdelivr.net/npm/meting@1.2/dist/Meting.min.js"></script><h1 id="相关文档"><a href="#相关文档" class="headerlink" title="相关文档"></a>相关文档</h1><ul><li><a href="https://blog.coding.net/blog/CS-Hexo?utm_source=newsletter&amp;utm_medium=email&amp;utm_campaign=monthly&amp;utm_content=2018-04" target="_blank" rel="noopener">最快的 Hexo 博客搭建方法</a></li></ul><blockquote><p>这个是Coding发给我的电子邮件里面附上的，很少用<code>Cloud Studio</code>，不过看了它的教程似乎还行，当然仅作参考</p></blockquote><ul><li><a href="https://coding.net/help/cloud-studio/wordpress" target="_blank" rel="noopener">Cloud Studio 部署 WordPress 示例</a></li></ul><blockquote><p>这个可以在<code>最快的 Hexo 博客搭建方法</code>里面找到</p></blockquote><ul><li><a href="https://blog.ourfor.top/2018/03/06/hexo-github-coding%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/">hexo+github/coding搭建个人博客</a></li></ul><blockquote><p>😥️这个是我写的</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VPS </tag>
            
            <tag> Typoche </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>暑假规划</title>
      <link href="/2018/07/13/%E6%9A%91%E5%81%87%E8%A7%84%E5%88%92/"/>
      <url>/2018/07/13/%E6%9A%91%E5%81%87%E8%A7%84%E5%88%92/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><table class="table"><br>    <tr><br>    <th>H/周</th><br>    <th>周日</th><br>    <th>周一</th><br>    <th>周二</th><br>    <th>周三</th><br>    <th>周四</th><br>    <th>周五</th><br>    <th>周日</th><br>  </tr><br>  <tr><br>    <td align="center">7:00</td><br>    <td align="center" colspan="7">🍇🍈🍉 岁月静好，现世安稳 🍇🍈🍉</td><br>  </tr><br>  <tr><br>    <td>8:30~11:00</td><br>    <td>C++</td><br>    <td>数据结构</td><br>    <td>C++</td><br>    <td>数据结构</td><br>    <td>C++</td><br>    <td>数据结构</td><br>    <td>C++</td><br>  </tr><br>  <tr><br>    <td>12:20~2:10</td><br>    <td align="center" colspan="7">🍒🍓🥝🍅🥑 午休 🍒🍓🥝🍅🥑</td><br>  </tr><br>  <tr><br>    <td>2:30~4:30</td><br>    <td>鸟哥的Linux私房菜</td><br>    <td>离散数学</td><br>    <td>鸟哥的Linux私房菜</td><br>    <td>离散数学</td><br>    <td>鸟哥的Linux私房菜</td><br>    <td>离散数学</td><br>    <td>鸟哥的Linux私房菜</td><br>  </tr><br>  <tr><br>    <td>4:30~5:30</td><br>    <td>Rasp Pi</td><br>    <td>小说</td><br>    <td>Rasp Pi</td><br>    <td>小说</td><br>    <td>Rasp Pi</td><br>    <td>小说</td><br>    <td>Rasp Pi</td><br>  </tr><br>  <tr><br>    <td>7:30~9:00</td><br>    <td align="center" colspan="7">Youtube视频，GitHub…</td><br>  </tr><br>  <tr><br>    <td align="center">9:30</td><br>    <td align="center" colspan="7">🌯🥙🍥🍡🥃🍺 晚安 🌯🥙🍥🍡🥃🍺</td><br>  </tr><br></table><p></p><h3 align="right">贰零壹捌年 夏，于長沙</h3><p></p><h4 align="right">By ourfor   </h4> <a id="more"></a><blockquote><p>2018年7月13日 天气：多云​ </p></blockquote><h2 id="空空如也"><a href="#空空如也" class="headerlink" title="空空如也"></a>空空如也</h2><p>这是在长沙的最后一天了，台风玛莉亚登陆本土后似乎没有之前那么迅猛了，长沙也就昨天风雨大作，我的愁思也随着这股热带风暴的减弱而烟消云散。之所以愁思万缕，我想大概有这几个原因吧：</p><ul><li>专业课程学习不够深入，没有学到什么真正有用的东西</li><li>这个学期没有好好学习，感觉时间就这样过去了，懵懵懂懂的过了一年，这一年似乎没有改变，空空如也。</li><li>没有好好锻炼身体，也没有养成一些好习惯</li></ul><p>这一年，从机械专业转到了软件，软件专业的老师都很严谨负责，同时也对学生很关心，虽然至今在班上我也没认识几个人，但是我能感受到对转专业学生的关照，我不太善于表达，平时也很少说话，感谢同学们的照顾，然而，不知不觉，这个学期就这样结束了，心里面好空虚，这一年的学习收获甚微，我想应该要好好规划一下暑假的学习和生活了，所以我特意把<code>数据结构</code>、<code>离散数学</code>、<code>C++</code>以及<code>Linux系统学习</code>带回家，树莓派自然也放进了书包。这两个月的时间我想做好这几件事：</p><ul><li>深入Linux的学习，系统优化以及管理</li><li>强化数据结构的算法以及离散数学的思维</li><li>提高C++编程技巧和思维</li><li>熟练运用 <strong><em>MarkDown</em></strong> 以及 <strong><em>HTML</em></strong> 语言书写</li><li>做好学习小结。</li></ul><h3 id="真的猛士敢于直面惨淡的人生，敢于正视淋漓的鲜血，这是怎样的哀痛者和幸福者，然而造化又常常为佣人设计，以时间的流逝来洗涤旧迹，仅使留下淡红的血色和微末的悲哀。"><a href="#真的猛士敢于直面惨淡的人生，敢于正视淋漓的鲜血，这是怎样的哀痛者和幸福者，然而造化又常常为佣人设计，以时间的流逝来洗涤旧迹，仅使留下淡红的血色和微末的悲哀。" class="headerlink" title="真的猛士敢于直面惨淡的人生，敢于正视淋漓的鲜血，这是怎样的哀痛者和幸福者，然而造化又常常为佣人设计，以时间的流逝来洗涤旧迹，仅使留下淡红的血色和微末的悲哀。"></a>真的猛士敢于直面惨淡的人生，敢于正视淋漓的鲜血，这是怎样的哀痛者和幸福者，然而造化又常常为佣人设计，以时间的流逝来洗涤旧迹，仅使留下淡红的血色和微末的悲哀。</h3>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>运算符重载</title>
      <link href="/2018/05/28/%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD/"/>
      <url>/2018/05/28/%E8%BF%90%E7%AE%97%E7%AC%A6%E9%87%8D%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>今天5月28日，老师说大概还有一个月就会搞那个上机考试，回顾我这半年来的学习，感觉没能坚持每天敲代码成了唯一的遗憾，是啊，还有一个月，我还是每天练练手感吧，这不，<code>C++</code>也快学完了，把作业里面的代码写一写。前几天重写了<a href="https://blog.ourfor.top/2018/03/06/hexo-github-coding%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/">博客的搭建教程</a>,我觉得还算详细吧。有兴趣可以看看👀。</p><a id="more"></a><h2 id="C-运算符重载"><a href="#C-运算符重载" class="headerlink" title="C++ 运算符重载"></a>C++ 运算符重载</h2><ul><li><p>在<code>C++</code>中<code>分数</code>不是<em>预先定义的</em>，需要建立一个<strong><em>分数类</em></strong>，使之具有下述功能：能防止分母为<em>0</em>,当分数不是最简形式时进行约分以及避免分母为<code>负数</code>，用重载运算符完成加法、减法、乘法以及除法等四则运算。</p></li><li><p>在第一问的基础上，用重载关系符<code>==</code>判断两个分数是否相等。</p></li></ul><p>写一个交换的函数：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">void Swap(int &amp;Num_u,int &amp;Num_d)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(Num_u&gt;Num_d)                 //确保Num_d&gt;=Num_u</span><br><span class="line">&#123;</span><br><span class="line">int temp=Num_u;</span><br><span class="line">Num_u=Num_d;</span><br><span class="line">Num_d=temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>首先，定义下分数类。</p><ul><li style="list-style: none"><input type="checkbox" checked> 在类中重载操作符时，为了使运算符函数能够访问类中的私有成员，那么运算符函数就必须重载为<code>非静态成员函数</code>或者<code>友元函数</code></li><li style="list-style: none"><input type="checkbox" checked> 由于类成员函数<code>this指针</code>的缘故，运算符函数重载为类的成员函数时，所需的参数个数总比它的操作数少<em>1</em>.</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分数类的定义</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fraction</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">MaxNum</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span></span>;</span><br><span class="line">fraction(<span class="keyword">int</span> u_,<span class="keyword">int</span> d_)&#123;num_u=u_;num_d=d_;&#125;</span><br><span class="line">fraction()&#123;num_u=<span class="number">0</span>;num_d=<span class="number">0</span>;&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Display</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Sample</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//运算符重载</span></span><br><span class="line"><span class="keyword">int</span> <span class="keyword">operator</span> == (fraction a1);</span><br><span class="line"><span class="keyword">friend</span> fraction <span class="keyword">operator</span> + (fraction a1,fraction a2);</span><br><span class="line"><span class="keyword">friend</span> fraction <span class="keyword">operator</span> - (fraction a1,fraction a2);</span><br><span class="line"><span class="keyword">friend</span> fraction <span class="keyword">operator</span> * (fraction a1,fraction a2);</span><br><span class="line"><span class="keyword">friend</span> fraction <span class="keyword">operator</span> / (fraction a1,fraction a2);</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">int</span> num_u;                 <span class="comment">//分子</span></span><br><span class="line"><span class="keyword">int</span> num_d;   <span class="comment">//分母</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> fraction::MaxNum(<span class="keyword">int</span> a,<span class="keyword">int</span> b)</span><br><span class="line">&#123;</span><br><span class="line">Swap(a,b);</span><br><span class="line"><span class="keyword">if</span>(a==<span class="number">0</span>) <span class="keyword">return</span> b;</span><br><span class="line"><span class="keyword">return</span> MaxNum(b-a,a);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> fraction::Display()</span><br><span class="line">&#123;</span><br><span class="line">Sample();</span><br><span class="line"><span class="keyword">if</span>(num_u==<span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">"0"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(num_d==<span class="number">1</span>&amp;&amp;num_u!=<span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; num_u &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; num_u &lt;&lt; <span class="string">"/"</span> &lt;&lt; num_d &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> fraction::Sample()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> b=MaxNum(num_u,num_d);</span><br><span class="line">num_u=num_u / b;</span><br><span class="line">num_d=num_d /b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> fraction::<span class="keyword">operator</span> == (fraction a1)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> d;</span><br><span class="line">d=MaxNum(num_d,num_u);</span><br><span class="line">num_u=num_u / d;</span><br><span class="line">num_d=num_d / d;</span><br><span class="line">d=MaxNum(a1.num_d,a1.num_u);</span><br><span class="line">a1.num_u=a1.num_u / d;</span><br><span class="line">a1.num_d=a1.num_d / d;</span><br><span class="line"><span class="keyword">if</span>(a1.num_u==num_u&amp;&amp;a1.num_d==num_d) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fraction <span class="keyword">operator</span> + (fraction a1,fraction a2)</span><br><span class="line">&#123;</span><br><span class="line">fraction c;</span><br><span class="line">c.num_d=a1.num_d * a2.num_d;</span><br><span class="line">c.num_u=a1.num_u * a2.num_d + a2.num_u *a1.num_d;</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fraction <span class="keyword">operator</span> - (fraction a1,fraction a2)</span><br><span class="line">&#123;</span><br><span class="line">fraction c;</span><br><span class="line">c.num_d=a1.num_d * a2.num_d;</span><br><span class="line">c.num_u=a1.num_u * a2.num_d - a2.num_u *a1.num_d;</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fraction <span class="keyword">operator</span> * (fraction a1,fraction a2)</span><br><span class="line">&#123;</span><br><span class="line">fraction c;</span><br><span class="line">c.num_d=a1.num_d * a2.num_d;</span><br><span class="line">c.num_u=a1.num_u * a2.num_u;</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fraction <span class="keyword">operator</span> / (fraction a1,fraction a2)</span><br><span class="line">&#123;</span><br><span class="line">fraction c;</span><br><span class="line">c.num_d=a1.num_d * a2.num_u;</span><br><span class="line">c.num_u=a1.num_u * a2.num_d;</span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">fraction <span class="title">c</span><span class="params">(<span class="number">12</span>,<span class="number">72</span>)</span></span>;</span><br><span class="line">c.Display();</span><br><span class="line"><span class="keyword">int</span> d=c.MaxNum(<span class="number">12</span>,<span class="number">72</span>);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; d &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">fraction <span class="title">m</span><span class="params">(<span class="number">1</span>,<span class="number">6</span>)</span></span>;</span><br><span class="line"><span class="keyword">if</span>(m==c) <span class="built_in">cout</span> &lt;&lt; <span class="string">"相等\n"</span>;</span><br><span class="line"></span><br><span class="line">fraction e;</span><br><span class="line">e=m + c;</span><br><span class="line">e.Display();</span><br><span class="line">e=m - c;</span><br><span class="line">e.Display();</span><br><span class="line">e=m * c;</span><br><span class="line">e.Display();</span><br><span class="line">e=m / c;</span><br><span class="line">e.Display();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="https://github.com/ourfor/My-C-Learning/blob/master/homework/fraction.cpp" target="_blank" rel="noopener">完整代码</a></p><h2 id="数据结构-二叉树"><a href="#数据结构-二叉树" class="headerlink" title="数据结构-二叉树"></a>数据结构-二叉树</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义状态代码</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OK 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ERROR 0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INFEASIBLE -1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> OVERFLOW -2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//类型定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> Status;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">char</span> TElemType;</span><br><span class="line"></span><br><span class="line"><span class="comment">//树的结构体定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">BiNode</span>&#123;</span></span><br><span class="line">TElemType data;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BiNode</span> *<span class="title">lchild</span>,*<span class="title">rchild</span>;</span></span><br><span class="line">&#125;BiNode,*BiTree;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一棵树🌲</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CreateTree</span><span class="params">(BiTree &amp;T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;ch);</span><br><span class="line"><span class="keyword">if</span>(ch==<span class="string">' '</span>) T=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!(T=(BiTree)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(BiNode)))) <span class="built_in">exit</span>(OVERFLOW);</span><br><span class="line">T-&gt;data=ch;</span><br><span class="line">CreateTree(T-&gt;lchild);</span><br><span class="line">CreateTree(T-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//先序遍历二叉树</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Pre</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(T)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; T-&gt;data;</span><br><span class="line">Pre(T-&gt;lchild);</span><br><span class="line">Pre(T-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//树的深度</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Leaves</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(T)&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!T-&gt;lchild&amp;&amp;!T-&gt;rchild) count++;</span><br><span class="line">Leaves(T-&gt;lchild);</span><br><span class="line">Leaves(T-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">depth</span><span class="params">(BiTree T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> level;</span><br><span class="line"><span class="keyword">if</span>(T==<span class="literal">NULL</span>) level=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">level=<span class="number">1</span>+(depth(T-&gt;lchild)&gt;depth(T-&gt;rchild)?depth(T-&gt;lchild):depth(T-&gt;rchild));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> level;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BiTree T;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"输入二叉树中的结点：\n"</span>;</span><br><span class="line">CreateTree(T);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"\n先序遍历二叉树：\n"</span>;</span><br><span class="line">Pre(T);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"\n二叉树叶子个数："</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; Leaves(T);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"\n树的层次为：\n"</span> &lt;&lt; depth(T);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>11点了，今天太晚了，立个目标，下次继续复习。</p><p><div id="app"></div><br><!-- 加载 cplayer 脚本 --></p><script src="https://cdn.jsdelivr.net/gh/MoePlayer/cPlayer/dist/cplayer.js"></script><script>  let player = new cplayer({    element: document.getElementById('app'),    autoplay: true,    showPlaylist: true,    playlist: [     {        src: 'https://file.ourfor.top/source/ourfor/%E8%B5%B5%E7%B4%AB%E9%AA%85-%E5%8F%AF%E4%B9%90.mp3',        poster: 'https://file.ourfor.top/source/ourfor/%E5%8F%AF%E4%B9%90-%E8%B5%B5%E7%B4%AB%E9%AA%85.jpg',        name: '可乐',        artist: '赵紫骅',        lyric: '[ti:可乐]\n[ar:赵浴辰]\n[al:可乐]\n[by:]\n[offset:0]\n[00:00.10]可乐 - 赵紫骅\n[00:00.20]词：赵紫骅\n[00:00.30]曲：赵紫骅\n[00:00.40]\n[00:31.20]可惜在遇见我那天你并不快乐\n[00:36.42]\n[00:38.20]可能是因为我们相遇的太晚了\n[00:44.47]\n[00:45.62]可是我要走了\n[00:48.51]\n[00:49.34]可温暖要走了\n[00:52.18]\n[00:53.08]可否有另一个我在你身后给予快乐\n[00:59.54]\n[01:01.37]可当我牵着你的手傻乎乎的乐\n[01:06.33]\n[01:08.17]渴望的爱情终于在我生命出现了\n[01:14.57]\n[01:15.65]可时间倒数了\n[01:18.55]\n[01:19.23]可你的答案停住了\n[01:22.49]\n[01:23.10]可想到你的脸我还是很快乐\n[01:30.16]可能你不快乐\n[01:33.39]\n[01:34.09]可惜你不快乐\n[01:36.89]\n[01:37.74]可能是我的爱情它来的太晚了\n[01:44.66]\n[01:45.64]可他给了你些什么\n[01:49.82]你是不是真快乐\n[01:53.50]可要听我的话别再为他犯傻了\n[02:00.16]可能你不快乐\n[02:03.93]可我要你快乐\n[02:07.37]\n[02:07.94]可能是我的爱情它来的太晚了\n[02:14.99]\n[02:15.68]可我只想对你说\n[02:19.40]我绝对不退出了\n[02:23.16]可以让你快乐是我的快乐\n[02:32.58]\n[02:42.46]可当我牵着你的手傻乎乎的乐\n[02:47.64]\n[02:49.43]渴望的爱情终于在我生命出现了\n[02:55.87]\n[02:56.96]可时间倒数了\n[03:00.00]\n[03:00.58]可你的答案停住了\n[03:03.82]\n[03:04.39]可想到你的脸我还是很快乐\n[03:11.04]\n[03:11.72]可能你不快乐\n[03:15.15]可惜你不快乐\n[03:18.51]\n[03:19.16]可能是我的爱情它来的太晚了\n[03:26.26]\n[03:26.91]可他给了你些什么\n[03:30.52]\n[03:31.09]你是不是真快乐\n[03:34.82]可要听我的话别再为他犯傻了\n[03:41.40]可能你不快乐\n[03:45.16]可我要你快乐\n[03:49.22]可能是我的爱情它来的太晚了\n[03:56.96]可我只想对你说\n[04:00.65]我绝对不退出了\n[04:04.45]可以让你快乐是我的快乐\n[04:16.24]\n[04:24.76]不快乐\n[04:25.87]\n[04:26.60]可惜你不快乐\n[04:29.42]\n[04:30.55]可能是我的爱情它来的太晚了\n[04:38.19]可他给了你些什么\n[04:41.92]\n[04:42.44]你是不是真快乐\n[04:46.04]可要听我的话别再为他犯傻了\n[04:52.72]可能你不快乐\n[04:56.35]可我要你快乐\n[04:59.81]\n[05:00.44]可能是我的爱情它来的太晚了\n[05:08.16]可我只想对你说][05:11.39][05:11.91]我绝对不退出了[05:15.09][05:15.63]可以让你快乐是我的快乐'      }    ]  })</script>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
            <tag> C++ </tag>
            
            <tag> 运算符重载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android手机多系统教程</title>
      <link href="/2018/05/12/Android%E6%89%8B%E6%9C%BA%E5%A4%9A%E7%B3%BB%E7%BB%9F%E6%95%99%E7%A8%8B/"/>
      <url>/2018/05/12/Android%E6%89%8B%E6%9C%BA%E5%A4%9A%E7%B3%BB%E7%BB%9F%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>其实在小米4之前的每一代小米手机都可以安装双系统，这是由于MIUI的频繁更新而设置的一种保护机制,不过之后就取消了,目前Android手机多系统教程,是通过软件<code>Dual Boot Patcher</code> 来实现的,顾名思义就是可以在一部手机上面安装多个基于UI,比如国内基于安卓系统的UI-<code>MIUI、Flyme、Mokee这些</code>，安卓系统使用的是Linux的内核，这个多系统只是借助了<strong><em>chroot</em></strong>而已.网上关于这款软件有很多教程，但是很多教程写的都不够详细，对新手不够友好，也没有做到详略得当，所以我就把我安装多系统的过程记录下来。</p><a id="more"></a><p><strong><em>名词释义</em></strong></p><ul><li><p>chroot<br>chroot命令用来在指定的根目录下运行指令。chroot，即<code>change root directory</code> （更改 root 目录）。在 linux 系统中，系统默认的目录结构都是以/，即是以根 (root) 开始的。而在使用<code>chroot</code> 之后，系统的目录结构将以指定的位置作为/位置。</p></li><li><p>UI<br>即<code>user interface</code> (用户界面)</p></li></ul><p>效果预览：</p><table class="table"><br>  <tr><br>    <td><img src="./desktop.png"></td><br>    <td><img src="./interface.png"></td><br>  </tr><br>  <tr><br>    <td><img src="./interface_mokee.png"></td><br>  <td><img src="./interface_miui.png"></td><br>  </tr><br></table><h3 id="用到工具"><a href="#用到工具" class="headerlink" title="用到工具"></a>用到工具</h3><p>记得老师总说，做题就像做菜一样，首先要把原料准备好，这里我们主要用到的工具有：</p><ul><li><p><a href="https://dbp.noobdev.io/" target="_blank" rel="noopener">Dual Boot Patcher</a> <a href="https://dbp.noobdev.io/files/9.3.0.r493.g32c14fd5/Android/DualBootPatcherAndroid-9.3.0.r493.g32c14fd5-snapshot.apk" target="_blank" rel="noopener">Android下载</a></p></li><li><p><a href="#">MT工具箱</a></p></li><li><p><a href>files</a></p></li></ul><h4 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h4><ul><li>获取root权限</li><li>解锁system分区</li><li>解密data分区</li></ul><h4 id="注意事项及常见问题"><a href="#注意事项及常见问题" class="headerlink" title="注意事项及常见问题"></a>注意事项及常见问题</h4><ul><li>刷入系统后，先不要重启，复制内部存储下的<code>multiboot</code>文件夹📁下的启动文件到root分区，注意是root分区，不是boot分区，这样做是为了保证当data未解密时仍然能够通过recovery刷入boot镜像切回主系统，路径：<code>/storage/emulated/0/multiboot/</code>下面的所有文件夹复制到根目录的root分区</li><li>解密<code>data</code>分区，使用twrp中的解密data，然后刷入supersu，防止data加密</li><li>刷入<code>recovery</code>，推荐刷入T W R P，使用一键刷入recovery工具包</li><li>处理刷机包，选择刷入分区，建议都安装在data分区</li><li>下载刷机包，使用MT工具箱文本编辑，删除基带验证。</li><li>带BL锁的，要先解BL锁。</li><li>刷入<code>Supersu</code>，获取ROOT权限，同时还能防止data再次加密</li><li>使用<code>syslock</code>解锁system分区，从而获取完整root权限，针对MIUI从官方下载root包获取的权限，如果使用Supersu获取的话可以忽略。</li><li>刷入位置：推荐data分区，其他位置一般刷入失败的概率比较大，填写ID时，根据个人喜好填写，仅仅只是为了区分系统安装的位置而已。</li><li>文件乱码，内部存储无读写权限：这种情况属于未解密data分区，可以在recovery中刷入你想启动的系统的boot.img文件，即可切回主系统。</li><li>解密<code>data</code>会清空所有数据，所以提前备份好重要数据，推荐使用小米云服务备份。</li><li>由于<code>8.x</code>系统分区结构改变，并且会自动加密data分区，dual boot patcher作者尚未更新，所以8.x系统大部分不能用作副系统。</li><li>为除<code>主系统</code>外的其他系统刷入Supersu以及xposed都需要处理，处理方式与刷入系统方式相同，同时安装位置要与待安装到的系统位置相同，即填写id标识与系统相同。</li><li>设置锁屏密码;刷入其他系统后，最多只能有一个系统设置锁屏密码，并且只有最后一次设置的密码能够解锁对应系统，其他系统均会出现密码错误。</li><li>密码错误，无法解密:此时只需要在TWRP自带的Terminal下面删除锁屏密码保存的文件即可，锁屏密码锁在路径，系统的相对路径(系统安装位置)假设为～，密码保存文件位于：<code>~/data/system/</code>，以主系统为例 <code>cd /data/system</code>,查看文件<code>ls</code>,其他后缀名为 <strong><em>key</em></strong>的就是要删除的文件,<code>rm *.key</code>同样的，因为密码错误无法进入系统也可以删除对应的密码保存文件。</li></ul><h3 id="刷机指南"><a href="#刷机指南" class="headerlink" title="刷机指南"></a>刷机指南</h3><h4 id="通过Recovery-卡刷"><a href="#通过Recovery-卡刷" class="headerlink" title="通过Recovery 卡刷"></a>通过<code>Recovery</code> 卡刷</h4><h4 id="通过Fastboot-线刷"><a href="#通过Fastboot-线刷" class="headerlink" title="通过Fastboot 线刷"></a>通过<code>Fastboot</code> 线刷</h4><p>（未完待续…）</p><p><div id="app"></div><br><!-- 加载 cplayer 脚本 --></p><script src="https://cdn.jsdelivr.net/gh/MoePlayer/cPlayer/dist/cplayer.js"></script><script>  let player = new cplayer({    element: document.getElementById('app'),    autoplay: true,    showPlaylist: true,    playlist: [      {        src: 'https://file.ourfor.top/source/ourfor/%E6%A3%AE%E6%B0%B8%E7%9C%9F%E7%94%B1%E7%BE%8E-Mermaid%20girl%20%28Extended%20RRver.%29.flac',        poster: 'https://file.ourfor.top/source/ourfor/Mermaid%20girl%20%28Extended%20RRver.%29.jpg',        name: 'Mermaid girl (Extended RRver.)',        artist: '森永真由美'      },      {        src: 'https://file.ourfor.top/source/ourfor/%E6%A3%AE%E6%B0%B8%E5%8D%83%E6%89%8D-%E3%83%9F%E3%83%81%E3%83%8E%E3%83%81%E3%83%A2%E3%82%B7%E3%83%BC%E3%82%AD%E3%83%9F%E3%83%8E%E3%82%AD%E3%83%A2%E3%83%81%20%28%E8%B7%AF%E4%B8%8A%E7%9A%84%E7%8C%AB%E5%B0%BE%E8%8D%89%20%E4%BD%A0%E7%9A%84%E5%BF%83%E6%83%85%29.mp3',        poster: 'https://file.ourfor.top/source/ourfor/%E3%83%9F%E3%83%81%E3%83%8E%E3%83%81%E3%83%A2%E3%82%B7%E3%83%BC%E3%82%AD%E3%83%9F%E3%83%8E%E3%82%AD%E3%83%A2%E3%83%81%20%28%E8%B7%AF%E4%B8%8A%E7%9A%84%E7%8C%AB%E5%B0%BE%E8%8D%89%20%E4%BD%A0%E7%9A%84%E5%BF%83%E6%83%85%29.jpg',        name: '路上的猫尾草 你的心情',        artist: '森永千才'      },      {        src: 'https://file.ourfor.top/source/ourfor/%E5%AD%99%E9%9C%B2-%E6%9B%BE%E7%BB%8F%E7%88%B1%E8%BF%87%E8%B0%81.flac',        poster: 'https://file.ourfor.top/source/ourfor/%E6%9B%BE%E7%BB%8F%E7%88%B1%E8%BF%87%E8%B0%81.jpg',        name: '曾经爱过谁',        artist: '孙露'      },      {        src: 'https://file.ourfor.top/source/ourfor/%E8%B5%B5%E7%B4%AB%E9%AA%85-%E5%8F%AF%E4%B9%90.mp3',        poster: 'https://file.ourfor.top/source/ourfor/%E5%8F%AF%E4%B9%90-%E8%B5%B5%E7%B4%AB%E9%AA%85.jpg',        name: '可乐',        artist: '赵紫骅',        lyric: '[ti:可乐]\n[ar:赵浴辰]\n[al:可乐]\n[by:]\n[offset:0]\n[00:00.10]可乐 - 赵紫骅\n[00:00.20]词：赵紫骅\n[00:00.30]曲：赵紫骅\n[00:00.40]\n[00:31.20]可惜在遇见我那天你并不快乐\n[00:36.42]\n[00:38.20]可能是因为我们相遇的太晚了\n[00:44.47]\n[00:45.62]可是我要走了\n[00:48.51]\n[00:49.34]可温暖要走了\n[00:52.18]\n[00:53.08]可否有另一个我在你身后给予快乐\n[00:59.54]\n[01:01.37]可当我牵着你的手傻乎乎的乐\n[01:06.33]\n[01:08.17]渴望的爱情终于在我生命出现了\n[01:14.57]\n[01:15.65]可时间倒数了\n[01:18.55]\n[01:19.23]可你的答案停住了\n[01:22.49]\n[01:23.10]可想到你的脸我还是很快乐\n[01:30.16]可能你不快乐\n[01:33.39]\n[01:34.09]可惜你不快乐\n[01:36.89]\n[01:37.74]可能是我的爱情它来的太晚了\n[01:44.66]\n[01:45.64]可他给了你些什么\n[01:49.82]你是不是真快乐\n[01:53.50]可要听我的话别再为他犯傻了\n[02:00.16]可能你不快乐\n[02:03.93]可我要你快乐\n[02:07.37]\n[02:07.94]可能是我的爱情它来的太晚了\n[02:14.99]\n[02:15.68]可我只想对你说\n[02:19.40]我绝对不退出了\n[02:23.16]可以让你快乐是我的快乐\n[02:32.58]\n[02:42.46]可当我牵着你的手傻乎乎的乐\n[02:47.64]\n[02:49.43]渴望的爱情终于在我生命出现了\n[02:55.87]\n[02:56.96]可时间倒数了\n[03:00.00]\n[03:00.58]可你的答案停住了\n[03:03.82]\n[03:04.39]可想到你的脸我还是很快乐\n[03:11.04]\n[03:11.72]可能你不快乐\n[03:15.15]可惜你不快乐\n[03:18.51]\n[03:19.16]可能是我的爱情它来的太晚了\n[03:26.26]\n[03:26.91]可他给了你些什么\n[03:30.52]\n[03:31.09]你是不是真快乐\n[03:34.82]可要听我的话别再为他犯傻了\n[03:41.40]可能你不快乐\n[03:45.16]可我要你快乐\n[03:49.22]可能是我的爱情它来的太晚了\n[03:56.96]可我只想对你说\n[04:00.65]我绝对不退出了\n[04:04.45]可以让你快乐是我的快乐\n[04:16.24]\n[04:24.76]不快乐\n[04:25.87]\n[04:26.60]可惜你不快乐\n[04:29.42]\n[04:30.55]可能是我的爱情它来的太晚了\n[04:38.19]可他给了你些什么\n[04:41.92]\n[04:42.44]你是不是真快乐\n[04:46.04]可要听我的话别再为他犯傻了\n[04:52.72]可能你不快乐\n[04:56.35]可我要你快乐\n[04:59.81]\n[05:00.44]可能是我的爱情它来的太晚了\n[05:08.16]可我只想对你说][05:11.39][05:11.91]我绝对不退出了[05:15.09][05:15.63]可以让你快乐是我的快乐'      }    ]  })</script><details><br><summary>截图</summary><br><table class="table"><br>  <tr><br>    <td> <figure class="image-box">                <img src="desktop.png" alt="mokee" title class>                <p>mokee</p>            </figure> </td><br>    <td> <figure class="image-box">                <img src="interface.png" alt="miui" title class>                <p>miui</p>            </figure> </td><br>  </tr><br>  <tr><br>    <td> <figure class="image-box">                <img src="interface_mokee.png" alt="mokee_app" title class>                <p>mokee_app</p>            </figure> </td><br>  <td> <figure class="image-box">                <img src="interface_miui.png" alt="miui_app" title class>                <p>miui_app</p>            </figure> </td><br>  </tr><br></table><br></details><!--origin-->]]></content>
      
      
      <categories>
          
          <category> 玩机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> Dual Boot Patcher </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx以及私有云搭建</title>
      <link href="/2018/04/28/Nginx%E4%BB%A5%E5%8F%8A%E7%A7%81%E6%9C%89%E4%BA%91%E6%90%AD%E5%BB%BA/"/>
      <url>/2018/04/28/Nginx%E4%BB%A5%E5%8F%8A%E7%A7%81%E6%9C%89%E4%BA%91%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>平时没事经常去GitHub看看开源的项目，昨天看见一个下载<code>Youtube</code> 视频的项目，觉得很不错，国外网速快，4个G不到30s下好了，要是能VPS上面在线播放就好了，这不，Nginx就派上用场了，平时下载国外资源网速慢，可以先下载到服务器，再从服务器下载。回归正题，本文需要<code>LNMP</code> 环境。<br><a id="more"></a></p><h2 id="一键安装LNMP"><a href="#一键安装LNMP" class="headerlink" title="一键安装LNMP"></a>一键安装LNMP</h2><p>所谓的<strong><em>LNMP</em></strong>是指：</p><ul><li style="list-style: none"><input type="checkbox" checked> Linux系统</li><li style="list-style: none"><input type="checkbox" checked> Nginx</li><li style="list-style: none"><input type="checkbox" checked> mysql(数据库)</li><li style="list-style: none"><input type="checkbox" checked> Php</li></ul><p>下面使用一键安装脚本：<br>ssh连接VPS，使用<code>root</code> 登录主机：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http://soft2.vpser.net/lnmp/lnmp1.4-full.tar.gz  <span class="comment">#下载lnmp完整包</span></span><br><span class="line">tar -xvf lnmp1.4-full.tar.gz      <span class="comment">#解压</span></span><br><span class="line"><span class="built_in">cd</span> lnmp1.4-full                   <span class="comment">#进入lnmp1.4-full文件夹</span></span><br><span class="line">chmod +x install.sh                        <span class="comment">#为安装脚本添加可执行权限，遇到确实执行权限，可以添加运行权限</span></span><br></pre></td></tr></table></figure></p><ul><li>安装<code>screen</code> （可选）<br>因为编译时间比较长，大概半个小时左右，如果不慎关闭终端，那么远程服务器的操作就会终止，这时候使用<code>screen</code> 来创建一个会话，这样即使断开本地终端与服务器的连接，安装操作也会继续进行，一般Linux预装了<strong><em>screen</em></strong><br>如果没有安装的话，可以通过<code>yum install screen</code> (centOS等),<code>apt-get install screen</code> (Ubuntu等)</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">screen -S lnmp          <span class="comment">#创建名为lnmp的对话窗口</span></span><br><span class="line">bash install.sh         <span class="comment">#执行安装脚本</span></span><br></pre></td></tr></table></figure><p>安装过程我就不细说了，按照提示操作就可以了。</p><h2 id="配置Nginx"><a href="#配置Nginx" class="headerlink" title="配置Nginx"></a>配置Nginx</h2><ul><li>通过源码编译安装Nginx<br>通过源码编译安装<code>Nginx</code> 是为了能够使用<code>Nginx</code> 的一些模块，这里为了美化Nginx的目录浏览，会安装<code>Fancy Index module</code> ,<a href="http://nginx.org/en/download.html" target="_blank" rel="noopener">Nginx源码</a>.下面我以<code>version=    1.14.0</code> 为例;</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">wget http://nginx.org/download/nginx-1.14.0.tar.gz      <span class="comment">#你也可以选择使用curl下载</span></span><br><span class="line">gunzip -c nginx-1.14.0.tar.gz | tar -xvf -         <span class="comment">#解压源码压缩包到当前目录</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/aperezdc/ngx-fancyindex.git ngx-fancyindex   <span class="comment">#需要安装git</span></span><br><span class="line"><span class="built_in">cd</span> nginx-1.14.0              <span class="comment">#进入目标文件夹</span></span><br><span class="line">./configure --user=www --group=www --prefix=/usr/<span class="built_in">local</span>/nginx \      <span class="comment">#每条命令都要回车</span></span><br><span class="line">--with-http_stub_status_module \ </span><br><span class="line">--with-http_ssl_module \</span><br><span class="line">--with-http_v2_module \</span><br><span class="line">--with-http_gzip_static_module \ </span><br><span class="line">--with-ipv6 \ </span><br><span class="line">--with-http_sub_module \</span><br><span class="line">--add-module=../ngx-fancyindex              <span class="comment">#添加Fancy Index module</span></span><br><span class="line">make &amp;&amp; sudo make install                   <span class="comment">#编译并安装</span></span><br></pre></td></tr></table></figure><p>安装好<code>Nginx</code> 之后我们需要简单设置一下来开启<code>目录浏览功能</code> 并启用<code>Fancy Index module</code> ,在<code>/usr/local/nginx/conf/nginx.conf</code> 中添加以下代码：</p><p>service字段中添加：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">  fancyindex on;              <span class="comment"># Enable fancy indexes.</span></span><br><span class="line">  fancyindex_exact_size off;  <span class="comment"># Output human-readable file sizes.</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>http字段中添加：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">autoindex on;</span><br><span class="line">include fancyindex.conf;</span><br></pre></td></tr></table></figure></p><p>接下来执行如下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/TheInsomniac/Nginx-Fancyindex-Theme.git /usr/<span class="built_in">local</span>/nginx/fancyindex</span><br></pre></td></tr></table></figure></p><p>效果预览：<a href="https://file.ourfor.top" target="_blank" rel="noopener">@-@</a></p><p>主题项目地址：</p><ul><li><a href="https://github.com/TheInsomniac/Nginx-Fancyindex-Theme.git" target="_blank" rel="noopener">TheInsomniac</a></li><li><a href="https://github.com/Naereen/Nginx-Fancyindex-Theme.git" target="_blank" rel="noopener">Naereen</a></li></ul><h2 id="安装Youtube-dl"><a href="#安装Youtube-dl" class="headerlink" title="安装Youtube-dl"></a>安装<code>Youtube-dl</code></h2><ul><li><a href="https://github.com/rg3/youtube-dl" target="_blank" rel="noopener">youtube-dl</a></li></ul><p>GitHub上面有详细的使用教程；按照上面的介绍，你可以在<code>Terminal</code> 中键入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/<span class="built_in">local</span>/bin/youtube-dl</span><br><span class="line">sudo chmod a+rx /usr/<span class="built_in">local</span>/bin/youtube-dl</span><br></pre></td></tr></table></figure><p>嗯，就这样就安装好了，接下来你就可以去油管找你想下载的视频了。我就不详细介绍命令的用法了。</p><figure class="image-box">                <img src="https://file.ourfor.top/source/sagit/youtube-dl.png" alt="youtube-dl" title class>                <p>youtube-dl</p>            </figure><p>分辨率最高的视频是不包含音频的，所以还要下载音频，最后用<code>ffmpeg</code> 来将音频文件和视频文件合成新的视频文件。</p><figure class="image-box">                <img src="https://file.ourfor.top/source/sagit/ffmpeg.png" alt="ffmpeg" title class>                <p>ffmpeg</p>            </figure><h2 id="ownCloud"><a href="#ownCloud" class="headerlink" title="ownCloud"></a>ownCloud</h2><ul><li><a href="https://owncloud.org/" target="_blank" rel="noopener">ownCloud</a></li></ul><p>首先你得有一个域名，大部分域名还是很便宜的，像阿里云、腾讯云的新用户首年1元的域名还是很多的<br>添加一个虚拟主机目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lnmp vhost add</span><br><span class="line">cloud.ourfor.top             <span class="comment">#你的域名，同时将域名dns解析到服务器ip</span></span><br></pre></td></tr></table></figure></p><p>进入网站更目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/wwwroot/cloud.ourfor.top</span><br><span class="line">curl -L https://download.owncloud.org/download/community/owncloud-latest.zip -o oc.zip   <span class="comment">#下载ownCloud源码，并重命名为oc.zip</span></span><br><span class="line">unzip oc.zip    <span class="comment">#解压源码压缩包</span></span><br><span class="line">cp -R owncloud/* .      <span class="comment">#递归拷贝文件到网站根目录</span></span><br></pre></td></tr></table></figure></p><blockquote><p>注意：ownCloud需要Php版本高于5.6.0，如果你的PHP版本比较低可以在lnmp文件夹下面执行<code>upgrade.sh</code> 脚本升级Php</p></blockquote><p>接下来打开你绑定的域名，设置一下就好了。</p><p>（未完待续）</p>]]></content>
      
      
      <categories>
          
          <category> 私有云 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> ownCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>进制转化</title>
      <link href="/2018/04/21/%E8%BF%9B%E5%88%B6%E8%BD%AC%E5%8C%96/"/>
      <url>/2018/04/21/%E8%BF%9B%E5%88%B6%E8%BD%AC%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>上个星期学了栈和队列，正好下个星期的上机作业是“进制转换”,一般进制转换是通过短除法（除k取余法）来转化，除完之后由下往上将这些数组合在一起,这不这好和栈的特点一样吗？嗯，顿时我的手就有点痒了，于是中午就敲了敲，下午Debug了一下，感觉这问题要考虑全面有点难啊，写个简单的得了。这大于10进制的还涉及字母，还是简单的考虑吧。<br><a id="more"></a></p><h2 id="基本思路"><a href="#基本思路" class="headerlink" title="基本思路"></a>基本思路</h2><ul><li>首先你得把用户输入的数转化为10进制(暂时不要考虑输入大于10进制)</li><li>将十进制的数转化为其他进制(同样只考虑不大于10进制的)</li></ul><p>@timeline{</p><h5 id="输入数-eg-1998-类型为int，以及对应的进制k"><a href="#输入数-eg-1998-类型为int，以及对应的进制k" class="headerlink" title="输入数(eg:1998),类型为int，以及对应的进制k"></a>输入数(eg:1998),类型为<strong><em>int</em></strong>，以及对应的进制<code>k</code></h5><p>@item{</p><h6 id="将组成这个数的这些数字分开，1-9-9-8"><a href="#将组成这个数的这些数字分开，1-9-9-8" class="headerlink" title="将组成这个数的这些数字分开，1 9 9 8"></a>将组成这个数的这些数字分开，1 9 9 8</h6><p>这里并不能用<code>char</code> 来分开它们，因为<code>数据类型</code> 不仅仅包含一个取值集合，同时也包含了定义在这个取值集合上的一组 <code>操作</code> ,可以通过<code>除10</code> 取余来分离</p><p>}</p><p>@item{</p><h6 id="转化为10进制"><a href="#转化为10进制" class="headerlink" title="转化为10进制"></a>转化为10进制</h6><p>将分离出来的数字依次与对应的<code>k</code> 的幂相乘，最后求和</p><p>}</p><p>@item{</p><h6 id="除m取余，转化为m进制"><a href="#除m取余，转化为m进制" class="headerlink" title="除m取余，转化为m进制"></a>除m取余，转化为m进制</h6><p>这里使用<code>%</code> 求模，<code>int</code> 强制类型转化求商</p><p>}</p><h5 id="输出计算后的结果"><a href="#输出计算后的结果" class="headerlink" title="输出计算后的结果"></a>输出计算后的结果</h5><p>}</p><h2 id="栈的实现"><a href="#栈的实现" class="headerlink" title="栈的实现"></a>栈的实现</h2><h2 id="k进制转化为10进制-k-lt-10"><a href="#k进制转化为10进制-k-lt-10" class="headerlink" title="k进制转化为10进制(k&lt;=10)"></a>k进制转化为10进制(k&lt;=10)</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//--------------------------------------其他进制转化为十进制--------------------------------------</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">SwitchNum_10</span><span class="params">(Stack &amp;S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//输入的数、对应进制、待转化进制</span></span><br><span class="line"><span class="keyword">int</span> data,n,i,num,num_input;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"输入待转化的数："</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; data;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"它为几进制："</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; num_input;</span><br><span class="line"></span><br><span class="line"><span class="comment">//转化为10进制</span></span><br><span class="line">num=<span class="number">10</span>;</span><br><span class="line">InitStack(S);</span><br><span class="line"></span><br><span class="line"><span class="comment">//记录有多少个数字</span></span><br><span class="line">    <span class="keyword">int</span> record_num_total=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//除10取余</span></span><br><span class="line"><span class="keyword">for</span>(i=data;i!=<span class="number">0</span>;data=i)</span><br><span class="line">&#123;</span><br><span class="line">i=data / num; <span class="comment">//取商</span></span><br><span class="line">j=data % num;    <span class="comment">//取余</span></span><br><span class="line">        record_num_total++;</span><br><span class="line">Pop(S,j);</span><br><span class="line"></span><br><span class="line">&#125;<span class="comment">//入栈</span></span><br><span class="line"></span><br><span class="line">SElemType *r=S.base + <span class="number">1</span>;</span><br><span class="line">n=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//转化为10进制</span></span><br><span class="line"><span class="keyword">for</span>(data=<span class="number">0</span>;r!=S.top;r++)</span><br><span class="line">&#123;</span><br><span class="line">        data=data + (*r) * <span class="built_in">pow</span>(num_input,n);</span><br><span class="line">        n++;</span><br><span class="line">&#125;</span><br><span class="line">    data=data + (*r) * <span class="built_in">pow</span>(num_input,n);</span><br><span class="line">    <span class="comment">//cout &lt;&lt; data;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//返回10进制数</span></span><br><span class="line"><span class="keyword">return</span> data;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10进制转化为m进制-m-lt-10"><a href="#10进制转化为m进制-m-lt-10" class="headerlink" title="10进制转化为m进制(m&lt;=10)"></a>10进制转化为m进制(m&lt;=10)</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//--------------------------------------十进制转化为其他进制--------------------------------------</span></span><br><span class="line"><span class="function">Status <span class="title">SwitchNum</span><span class="params">(Stack &amp;S)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> data,i,num;</span><br><span class="line"><span class="comment">//cout &lt;&lt; "输入待转化的数：";</span></span><br><span class="line">data=SwitchNum_10(S);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"你想把它转化为几进制："</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; num;</span><br><span class="line">InitStack(S);</span><br><span class="line"></span><br><span class="line"><span class="comment">//除k取余</span></span><br><span class="line"><span class="keyword">for</span>(i=data;i!=<span class="number">0</span>;data=i)</span><br><span class="line">&#123;</span><br><span class="line">i=data / num;</span><br><span class="line">j=data % num;</span><br><span class="line">Pop(S,j);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"转化为"</span> &lt;&lt; num &lt;&lt; <span class="string">"进制后为：\n"</span>;</span><br><span class="line">    <span class="comment">//出栈后即为k进制</span></span><br><span class="line">Push(S);</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>(未完待续。。。。)</p><p>代码已经同步到仓库：<a href="https://github.com/ourfor/My-C-Learning/blob/master/C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8A%E6%9C%BA/Stack.cpp" target="_blank" rel="noopener">Stuck</a></p><figure class="image-box">                <img src="https://file.ourfor.top/source/sagit/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-04-22%20%E4%B8%8A%E5%8D%8812.12.30.png" alt="花了我一个小时才配置好powerline&airline" title class>                <p>花了我一个小时才配置好powerline&airline</p>            </figure><p>又到了毕业季🎓，回首高中的日子，满满的回忆。</p><p><div id="app"></div><br><!-- 加载 cplayer 脚本 --></p><script src="https://cdn.jsdelivr.net/gh/MoePlayer/cPlayer/dist/cplayer.js"></script><script>  let player = new cplayer({    element: document.getElementById('app'),    autoplay: true,    showPlaylist: true,    playlist: [      {        src: 'https://file.ourfor.top/source/sagit/%E5%A5%BD%E5%A6%B9%E5%A6%B9%E4%B9%90%E9%98%9F-%E4%B8%8D%E8%AF%B4%E5%86%8D%E8%A7%81.mp3',        poster: 'https://file.ourfor.top/source/sagit/%E5%A5%BD%E5%A6%B9%E5%A6%B9%E4%B9%90%E9%98%9F.jpg',        name: '不说再见',        artist: '好妹妹乐队'      }    ]  })</script>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
            <tag> 栈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MIUI Theme</title>
      <link href="/2018/04/07/Theme/"/>
      <url>/2018/04/07/Theme/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>最近闲的没事，改了改手机上的主题。虽然主题商店里面有不少精美的主题的，但是这些主题都不够完美，有些图标精致，有些锁屏强大，所以总能勾起修改的欲望。接触主题制作这么久了，<strong><em>主题商店</em></strong>还仅仅上架过一款主题，说实话我PS弄得一般般，所以这款唯一上架的主题也仅仅分成了10多块大洋，设计不太会，代码还是懂一点的，主题描述文件是遵循<code>xml</code>语法的，所以就借用其他主题的素材，修改部分代码，东拼西凑了一下，最后效果还不错。（仅限自用，请勿上传到主题商店）</p><a id="more"></a><h3 id="效果预览"><a href="#效果预览" class="headerlink" title="效果预览"></a>效果预览</h3><figure class="image-box">                <img src="https://file.ourfor.top/source/sagit/autojump_0.png" alt="主屏" title class>                <p>主屏</p>            </figure><p>这个<code>AT&amp;T</code>是在手机的<code>设置-状态栏-运营商</code>这里修改。而这个<code>Love you %d days</code>是修改了主题的状态栏描述文件，这个数字就是电池实时电量的百分比。</p><figure class="image-box">                <img src="https://file.ourfor.top/source/sagit/autojump_1.png" alt="Time" title class>                <p>Time</p>            </figure><p>时间设置成<code>星期+日期|时间</code>也在主题的描述文件里面设置的，图标则是使用了<strong><em>H2SO</em></strong>的图标。</p><figure class="image-box">                <img src="https://file.ourfor.top/source/sagit/autojump_2.png" alt="Tips" title class>                <p>Tips</p>            </figure><h3 id="时间居中"><a href="#时间居中" class="headerlink" title="时间居中"></a>时间居中</h3><p>状态栏时间居中是在解锁System后使用<code>MiUI Statusbar Pro</code>设置的，当然你也可以反编译<code>system/priv-app/miuisystemui</code>里的<code>miuisystemui.apk</code>,这同样需要<em>root</em>权限。</p><p>相关教程<a href="https://file.ourfor.top/source/sagit/%E7%8A%B6%E6%80%81%E6%A0%8F%E5%B8%83%E5%B1%80%E8%AF%A6%E7%BB%86%E6%95%99%E7%A8%8B%EF%BC%88%E4%BF%AE%E8%AE%A2%E7%89%88%EF%BC%89.pdf" target="_blank" rel="noopener">下载</a></p><h3 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h3><p>下载地址：<br><a href="https://file.ourfor.top/source/sagit/H2OS.mtz" target="_blank" rel="noopener">v1.0</a>(仅限自用，请勿上传到主题商店)<br><a href="https://file.ourfor.top/source/sagit/H2OS_2.0.mtz" target="_blank" rel="noopener">v2.0</a></p><p><a href="#">MIUI Theme Editor</a></p><p>我使用的是星空的官改rom，由于这手机平时用得着，所以就退出体验版内测了，估计大部分人用的是官方的开发版或者稳定版，没更新过系统的话，用<code>MIUI Theme Editor</code>（不需要root）注入主题，就可以在主题里面应用，只不过这个软件第一次使用需要下载大概60m的数据文件，需要翻墙下载。</p><h1 id="免破解个性化状态栏"><a href="#免破解个性化状态栏" class="headerlink" title="免破解个性化状态栏"></a>免破解个性化状态栏</h1><p>首先，请确保您已经完成下述工作：</p><ul><li>获取<code>root</code> 权限</li><li>解锁<code>system</code> 分区,推荐使用<a href="#">syslock</a>,改软件可在酷安下载。</li><li>安装<code>RE文件管理器</code>(其他具有相同功能的软件也行,当然终端也是可以的)</li></ul><h2 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1"></a>Step 1</h2><p>下载你喜欢的主题包,在此分享一个简单的方法:1.在<code>MIUI主题商店</code>免费试用主题 2.在主题商店没有下载完成主题包之前,打开系统自带<code>下载管理</code>,暂停当前下载主题的任务. 3.点击查看之前暂停的下载任务详细，复制下载地址，删除暂停下载的主题包，新建一个下载任务。</p><h2 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2"></a>Step 2</h2><p>找到下载好的主题包<code>mtz</code>文件，将后缀名改为<code>zip</code>。<br><figure class="image-box">                <img src="https://file.ourfor.top/source/other/theme_unzip.png" alt="theme_unzip" title class>                <p>theme_unzip</p>            </figure><br>接下来找到<code>com.android.systemui</code>,添加后缀<code>zip</code>,同样解压。主题资源文件在<code>res</code>下面。</p><p>相关文件夹说明：</p><ul><li><strong><em>raw-xxhdpi</em></strong>:电池变化的状态和图标保存在这里</li><li><strong><em>drawable-xxhdpi</em></strong>:状态栏的<code>网速、WiFi等</code>图标以及<code>通知栏背景</code>存放在该文件夹下面</li></ul><p>进入<code>drawable-xxhdpi</code>文件夹删除所有后缀名为<code>.9.png</code>的文件，可以自行删除,也可以在终端中用命令<code>rm -rf *.9.png</code>。</p><h2 id="Step-3"><a href="#Step-3" class="headerlink" title="Step 3"></a>Step 3</h2><p>打开手机上面的<code>RE文件管理器</code>(需要root权限),提取复制该路径下面的<code>/system/priv-app/MiuiSystemUI/</code>的<strong><em>MiuiSystemUI.apk</em></strong>文件(注意备份该文件),发送到电脑,在<code>Windows</code>下右键该apk文件，使用<code>RAR</code>打开查看:(可以先改后缀名apk为zip,记得最后改回来;也可以在打开方式里面找到RAR的安装位置打开)</p><ul><li>将<code>step 2中res/drawable-xxhdpi/</code>下面的所有文件复制,然后粘贴到 <code>MiuiSystemUI.apk\res\drawable-xxhdpi-v4\</code>,在<code>RAR</code>的查看界面按下<code>Ctrl + v</code>点击确认即可。</li><li>将<code>step 2中res/raw-xxhdpi/</code>按下<code>Ctrl + c</code>复制,在RAR中定位到<code>MiuiSystemUI.apk\res\raw-xxhdpi-v4\</code>，按下<code>Ctrl + v</code>替换即可。<figure class="image-box">                <img src="https://file.ourfor.top/source/other/rar.png" alt="查看,不需要解压" title class>                <p>查看,不需要解压</p>            </figure></li></ul><p>(注意保证文件名为<code>MiuiSystemUI.apk</code>)</p><h2 id="Step-4"><a href="#Step-4" class="headerlink" title="Step 4"></a>Step 4</h2><p>将修改后的状态栏文件替换原来的文件,同时修复权限为:<code>rw-r--r--</code><br><figure class="image-box">                <img src="https://file.ourfor.top/source/other/%E6%9D%83%E9%99%90.png" alt="权限" title class>                <p>权限</p>            </figure><br><figure class="image-box">                <img src="https://file.ourfor.top/source/other/%E4%BF%AE%E5%A4%8D%E6%9D%83%E9%99%90.png" alt="修复权限" title class>                <p>修复权限</p>            </figure></p><h2 id="懒人版"><a href="#懒人版" class="headerlink" title="懒人版"></a>懒人版</h2><ul><li>删除点9文件的主题资源<a href="https://file.ourfor.top/source/other/res.zip" target="_blank" rel="noopener">res</a></li><li>miui 10.8.6.6已修改<a href="#">MiuiSystemUI.apk</a><br>(note:OTA升级前确保<code>System</code>分区上锁,否则增量包升级会翻车)</li></ul><div id="dplayer5" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer5"),"theme":"#FADFA3","loop":true,"video":{"url":"http://file.ourfor.top/youtube/Army1.mp4","pic":"http://img0.c.yinyuetai.com/artist/fan/150810/0/-M-70f069427cca50778df6b121a8bf5a8a_0x0.jpg"},"danmaku":{"id":"9E2E3368B56CDBB4","api":"http://dplayer.daoapp.io","token":"tokendemo"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script>]]></content>
      
      
      
        <tags>
            
            <tag> Theme </tag>
            
            <tag> MIUI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据结构-线性表</title>
      <link href="/2018/03/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
      <url>/2018/03/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>又到周末了，第一天上机结果IDE都没有找到，感觉是不是自己命令行用习惯了，基本的编译器都不会用了，还好在下机前5分钟找到了IDE，每周总要做做笔记啥的，这周主要学了线性表，感觉线性表这东西老师讲的很清楚了，保持思考还是把它写下来吧，或许几个月以后我对它的理解又更进一步了。总之，这次上机的内容还算简单。<br><a id="more"></a><br>感觉这<strong><em>《数据结构》</em></strong>这门课还是挺有意思的，上课的时候不仅分析算法还补充下语法，我呢平时基本不做预习这东西，可能是以前高中自学高数留下来的坏毛病吧，不过老师上课讲的东西我的脑子里面记得还是很清楚的，回头看看书感觉更好了。我在枕头旁边放了两本数据结构，基本没翻，要是睡觉的时候会自动扩散到脑子里面就好了。平时没事会把代码输电脑里面进来，最后同步到仓库。其实我更喜欢在纸上写好代码之后再输进电脑，不知道为什么老是有这种感觉感觉只有一打开电脑又得浪费不少时间。</p><details><summary>我在GitHub上面的主页</summary><br><br><a href="https://github.com/ourfor" target="_blank" rel="noopener">Ourfor</a><br><a href="https://github.com/ourfor/My-C-Learning" target="_blank" rel="noopener">我的C/C++学习</a><br></details><h1 id="线性表"><a href="#线性表" class="headerlink" title="线性表"></a>线性表</h1><p>有必要弄清以下几个概念：</p><ul><li>线性表</li><li>顺序表</li><li>链表</li></ul><details><summary>线性表</summary><br><br>目前我是这样理解的，线性表之所以叫线性表就是因为表中的数据元素之间存在一对一的关系，这就好比<strong><em>离散数学</em></strong>里面讲的序偶，除了表头元素和表尾元素外表中每个元素都有唯一的一个直接前驱和直接后继，这样就使得这些元素在表中元素的位置唯一确定，同时这个表就有了逻辑顺序，满足这种特性有数组、字串之类的。<br></details><p>线性表根据存储方式不同可以分为<code>顺序表</code>和<code>链表</code>，其中以顺式存储的线性表叫做顺序表，以链式存储的线性表叫做链表。这两种表有各自的优缺点：</p><table><thead><tr><th style="text-align:center">类型（Type）</th><th style="text-align:center">优点（Advantages）</th><th style="text-align:center">缺点（Disadvantages）</th></tr></thead><tbody><tr><td style="text-align:center">线性表（Sqlist）</td><td style="text-align:center">可对表中元素随机存取</td><td style="text-align:center">表中的元素个数必须是确定的，虽然可用增加空间，但是初始化时还是会占用一定的空间，删除和插入元素比较复杂</td></tr><tr><td style="text-align:center">链表（Linklist）</td><td style="text-align:center">可用按照需要临时分配空间，删除与插入元素比较简单</td><td style="text-align:center">无法对表中元素随机存取，查找某个位置的元素也比较复杂。</td></tr></tbody></table><blockquote><p>预定义状态代码.</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span>    OK      1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>    TRUE    1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>    ERROR   0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>    FALSE   0</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>    INFEASIBLE    -1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>    OVERFLOW      -2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> Status;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">double</span> ElemType;</span><br></pre></td></tr></table></figure><h2 id="顺序表"><a href="#顺序表" class="headerlink" title="顺序表"></a>顺序表</h2><ul><li>顺式存储线性表的建立、初始化、元素的插入、查找、删除以及销毁。<h3 id="建立以及初始化"><a href="#建立以及初始化" class="headerlink" title="建立以及初始化"></a>建立以及初始化</h3>首先，该如何实现顺序表这种数据类型？使用结构体定义顺序表时需要定义哪些成员？顺序表中除了元素还有元素的位置顺序（通过物理相邻来反映逻辑顺序），同时还需要对顺序表分配空间。定义结构体<code>Sqlist</code>，它包含三个成员，基地址elem，和数组相同；当前顺序表的元素个数用length来表示，顺序表可以容纳的元素的大小可以用listsize来表示；也就是说只需要一个结构体Sqlist变量就可以表示顺序表，那么顺序表中的元素应该存放在哪个位置呢？通常我们使用数组来存放同一数据类型的多个数据，C编译系统在编译数组的时候将数组名作为该数组的首地址。<br>同样的在顺序表中，我们将数据存放在基地址elem后面，那么就要求elem的地址与length的地址之间有足够的空间来存放数据。因此，顺序表的结构体可以这样定义：</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>&#123;</span></span><br><span class="line">ElemType *elem;      <span class="comment">//结构体的基地址</span></span><br><span class="line"><span class="keyword">int</span> length;          <span class="comment">//顺序表中实际存放的元素个数</span></span><br><span class="line"><span class="keyword">int</span> listsize;        <span class="comment">//顺序表中能够存放的元素个数</span></span><br><span class="line">&#125;Sqlist;<span class="comment">//结构体名</span></span><br></pre></td></tr></table></figure><hr><hr><hr><details><summary>前方高能</summary><br><br>最近刷抖音小视频刷到几首好听的歌<br></details><p><div id="app"></div><br><!-- 加载 cplayer 脚本 --></p><script src="https://cdn.jsdelivr.net/gh/MoePlayer/cPlayer/dist/cplayer.js"></script><script>  let player = new cplayer({    element: document.getElementById('app'),    autoplay: true,    showPlaylist: true,    playlist: [      {        src: 'https://file.ourfor.top/source/sagit/%E7%83%9F%E6%8A%8A%E5%84%BF%E4%B9%90%E9%98%9F-%E7%BA%B8%E7%9F%AD%E6%83%85%E9%95%BF.flac',        poster: 'https://file.ourfor.top/source/sagit/%E7%BA%B8%E7%9F%AD%E6%83%85%E9%95%BF.jpg',        name: '    纸短情长',        artist: '烟把儿乐队',      },      {        src: 'https://file.ourfor.top/source/sagit/%E6%9E%97%E4%BF%8A%E6%9D%B0-%E9%86%89%E8%B5%A4%E5%A3%81.flac',        poster: 'https://file.ourfor.top/source/sagit/nice.jpg',        name: '醉赤壁',        artist: '林俊杰',      },      {        src: 'https://file.ourfor.top/source/sagit/%E5%B9%BF%E4%B8%9C%E9%9B%A8%E7%A5%9E-%E5%B9%BF%E4%B8%9C%E7%88%B1%E6%83%85%E6%95%85%E4%BA%8B.mp3',        poster: 'https://file.ourfor.top/source/sagit/nice.jpg',        name: '广东爱情故事',        artist: '广东雨神',      },      {        src: 'https://file.ourfor.top/source/sagit/%E5%8D%97%E5%AE%AB%E5%98%89%E9%AA%8F,%E5%A7%9C%E7%8E%89%E9%98%B3-%E5%9B%9E%E5%BF%86%E6%80%BB%E6%83%B3%E5%93%AD.flac',        poster: 'https://file.ourfor.top/source/sagit/nice.jpg',        name: '回忆总想哭',        artist: '南宫嘉骏,姜玉阳',      }         ]  })</script><p><img src="https://file.ourfor.top/source/sagit/g++_-v.png" alt="gcc/g++"></p><p>这是我所使用的编译器版本，如果遇到<code>malloc</code>出错，可以在预处理指令中加上<code>#include&lt;stdlib.h&gt;</code></p><p>顺序表基本操作</p><ul><li>初始化</li><li>输入、输出、查找</li><li>插入、删除</li><li>就地逆置</li></ul><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//-------------------线性表初始量-------------------</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LIST_INIT_SIZE 100</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LIST_ADD_SIZE 10</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//-------------------初始化线性表-------------------</span></span><br><span class="line"><span class="function">Status <span class="title">InitList</span><span class="params">(Sqlist &amp;T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//构造一个空的线性表L</span></span><br><span class="line">T.elem=(ElemType *)<span class="built_in">malloc</span>(LIST_INIT_SIZE * <span class="keyword">sizeof</span>(ElemType));            </span><br><span class="line"><span class="keyword">if</span>(!T.elem) <span class="built_in">exit</span>(OVERFLOW);</span><br><span class="line">T.length=<span class="number">0</span>;</span><br><span class="line">T.listsize=LIST_INIT_SIZE;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"线性表初始化成功！"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;<span class="comment">//InitList</span></span><br></pre></td></tr></table></figure><h3 id="输入、输出、查找"><a href="#输入、输出、查找" class="headerlink" title="输入、输出、查找"></a>输入、输出、查找</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//-------------------线性表数据的输出-------------------</span></span><br><span class="line"><span class="function">Status <span class="title">DisplayList</span><span class="params">(Sqlist T)</span></span></span><br><span class="line"><span class="function"></span>&#123;   </span><br><span class="line">ElemType * q=T.elem;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=T.length<span class="number">-1</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">q=T.elem+i;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; * q &lt;&lt; <span class="string">" "</span> ;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------------------线性表数据输入-------------------</span></span><br><span class="line"><span class="function">Status <span class="title">InputList</span><span class="params">(Sqlist &amp;T)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"线性表中有多少个元素："</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; T.length;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"请输入线性表中的各个元素："</span>;</span><br><span class="line">ElemType * p;</span><br><span class="line">p=T.elem;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=T.length<span class="number">-1</span>;i++,p++)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; * p;</span><br><span class="line">&#125;</span><br><span class="line">DisplayList(T);</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------------------查找-------------------</span></span><br><span class="line"><span class="function">Status <span class="title">LocalList</span><span class="params">(Sqlist &amp;T,ElemType find_elem)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ElemType *p;</span><br><span class="line"><span class="keyword">int</span> elem_num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> num=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(p=T.elem;p&lt;T.elem + T.length - <span class="number">1</span>;p++)</span><br><span class="line">&#123;</span><br><span class="line">num+=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(*p==find_elem)&#123;</span><br><span class="line">elem_num=num;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"元素"</span> &lt;&lt; find_elem &lt;&lt; <span class="string">"在线性表中位于第"</span> &lt;&lt; elem_num &lt;&lt; <span class="string">"个位置"</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(elem_num==<span class="number">0</span>) <span class="built_in">cout</span> &lt;&lt; <span class="string">"表中不存在元素"</span> &lt;&lt; find_elem;</span><br><span class="line"><span class="keyword">return</span> ERROR;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="插入、删除"><a href="#插入、删除" class="headerlink" title="插入、删除"></a>插入、删除</h3><blockquote><p>插入与删除的基本思路<br>顺序表插入元素主要操作应该是从输入流中获取用户输入的元素位置（插入位置）以及元素，插入位置后面的元素都要后移，如果空间不够，还应该重新申请空间，基本的算法应该是这样：</p></blockquote><ul><li>判断用户输入的插入位置是否正确，即参数合法性的问题</li><li>检查顺序表中是否还有足够的空间让用户插入元素，如果不够还得重新向系统申请空间</li><li>插入元素的位置确定后，应从表尾元素开始直到插入位置原来的元素，每个元素后移一个单位，插入完成后，顺序表中表示表中元素个数的 length + 1 ，自此插入操作完成，最后还应将表中元素逐个输出，便于后续调试和测试。</li></ul><blockquote><p>删除的思路与插入有所不同，首先你不需要考虑空间，正常的删除应该是输入待删除的位置，将删除的元素保存下来，从删除位置后的第一个元素开始逐个前移这样就自然完成了删除操作，最后 length - 1 。同时将表中元素逐个输出，以及删除的元素。</p></blockquote><ul><li>判断用户输入的位置是否合法</li><li>从删除位置后的第一个元素开始逐个前移，完成后更改成员<strong><em>length</em></strong>的值</li><li>输出现在表中的元素以及删除的元素</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//-------------------线性表元素的插入-------------------</span></span><br><span class="line"><span class="function">Status <span class="title">InsertList</span><span class="params">(Sqlist &amp;T,<span class="keyword">int</span> i,ElemType e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//在第i个元素之前插入，使其成为第i个元素，判断插入位置i的合法性</span></span><br><span class="line"><span class="comment">//如果空间不够，重新分配空间</span></span><br><span class="line"><span class="keyword">if</span>(i&lt;<span class="number">1</span>||i&gt;T.length+<span class="number">1</span>) <span class="built_in">exit</span>(ERROR);</span><br><span class="line"><span class="keyword">if</span>(T.length&gt;=T.listsize) </span><br><span class="line">&#123;</span><br><span class="line">ElemType * newbase=(ElemType *)<span class="built_in">malloc</span>((LIST_INIT_SIZE+LIST_ADD_SIZE)*<span class="keyword">sizeof</span>(ElemType));</span><br><span class="line">T.elem=newbase;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!T.elem) <span class="keyword">return</span> ERROR;             <span class="comment">//分配失败</span></span><br><span class="line"><span class="comment">//i后面的元素后移</span></span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line">ElemType * p=T.elem;</span><br><span class="line"><span class="keyword">for</span>(j=T.length - <span class="number">1</span>;j&gt;=i - <span class="number">1</span>;j--) *(p + j + <span class="number">1</span>)=*(p + j);</span><br><span class="line">*(T.elem + i - <span class="number">1</span>)=e;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"已将第"</span> &lt;&lt; i &lt;&lt; <span class="string">"个位置插入元素"</span> &lt;&lt; e &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">T.length=T.length + <span class="number">1</span>;</span><br><span class="line">DisplayList(T);</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//-------------------线性表元素的删除-------------------</span></span><br><span class="line"><span class="function">Status <span class="title">DeleteList</span><span class="params">(Sqlist &amp;T,<span class="keyword">int</span> i,ElemType &amp;f)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//删除位置的取值范围1&lt;=i&lt;=T.length</span></span><br><span class="line"><span class="comment">//删除第i个元素，其他元素往前移</span></span><br><span class="line"><span class="keyword">if</span>(i&lt;<span class="number">1</span>||i&gt;T.length) <span class="built_in">exit</span>(ERROR);</span><br><span class="line">ElemType *p=T.elem + i;</span><br><span class="line">f=*(p - <span class="number">1</span>);</span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line"><span class="keyword">for</span>(j=i;j&lt;=T.length;*(p - <span class="number">2</span>)=*(p - <span class="number">1</span>),j++)</span><br><span class="line">p++;</span><br><span class="line">T.length=T.length<span class="number">-1</span>;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"删除的元素为"</span> &lt;&lt; f &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">DisplayList(T);</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>全部<a href="https://github.com/ourfor/My-C-Learning/blob/master/C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8A%E6%9C%BA/SqList.cpp" target="_blank" rel="noopener">代码</a></p><h2 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h2><p>链表与顺序表不同</p><p>链表的定义：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//-------------------------定义结构体-------------------------</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span>&#123;</span></span><br><span class="line">ElemType data;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">LNode</span> *<span class="title">next</span>;</span></span><br><span class="line">&#125;LNode;</span><br><span class="line"></span><br><span class="line">LNode *head;</span><br></pre></td></tr></table></figure><ul><li>初始化</li><li>输入、输出、查找</li><li>插入、删除</li><li>就地逆置</li></ul><h3 id="初始化-1"><a href="#初始化-1" class="headerlink" title="初始化"></a>初始化</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//-------------------------初始化链表-------------------------</span></span><br><span class="line"><span class="function">Status <span class="title">InitList</span><span class="params">(LNode * &amp;head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">head=(LNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct LNode));</span><br><span class="line">head-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="输入、输出、查找-1"><a href="#输入、输出、查找-1" class="headerlink" title="输入、输出、查找"></a>输入、输出、查找</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//-------------------------输入链表-------------------------</span></span><br><span class="line"><span class="function">Status <span class="title">InputList</span><span class="params">(LNode * &amp;head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LNode *p,*r;</span><br><span class="line">p=r=(LNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct LNode));</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"输入链表中的元素："</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; p-&gt;data;</span><br><span class="line"><span class="keyword">char</span> stop;</span><br><span class="line">stop=<span class="built_in">cin</span>.get();</span><br><span class="line"><span class="keyword">int</span> n=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(stop!=<span class="string">'\n'</span>)</span><br><span class="line">&#123;</span><br><span class="line">n=n+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(n==<span class="number">1</span>)head-&gt;next=p;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">r=p;</span><br><span class="line">p=(struct LNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct LNode));</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; p-&gt;data;</span><br><span class="line">stop=<span class="built_in">cin</span>.get();</span><br><span class="line">r-&gt;next=p;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">p-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//-------------------------输出链表-------------------------</span></span><br><span class="line"><span class="function">Status <span class="title">DisplayList</span><span class="params">(LNode *head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LNode *p;</span><br><span class="line">p=head-&gt;next;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p-&gt;data &lt;&lt; <span class="string">" "</span>;</span><br><span class="line">p=p-&gt;next;</span><br><span class="line">&#125;<span class="keyword">while</span>(p-&gt;next!=<span class="literal">NULL</span>);</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; p-&gt;data &lt;&lt; <span class="string">"\n"</span>;</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//-------------------------查找链表元素-------------------------</span></span><br><span class="line"><span class="function">Status <span class="title">LocateList</span><span class="params">(LNode *head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"你想查找链表中的哪个元素："</span>;</span><br><span class="line">ElemType e;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; e;</span><br><span class="line">LNode *p;</span><br><span class="line"><span class="keyword">int</span> n=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(p=head-&gt;next;p-&gt;data!=e&amp;&amp;p-&gt;next!=<span class="literal">NULL</span>;p=p-&gt;next)</span><br><span class="line">&#123;</span><br><span class="line">n=n+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(p-&gt;data!=e&amp;&amp;p-&gt;next==<span class="literal">NULL</span>) &#123;<span class="built_in">cout</span> &lt;&lt; <span class="string">"链表中不存在元素"</span> &lt;&lt; e &lt;&lt; <span class="built_in">endl</span>;<span class="keyword">return</span> FALSE;&#125;</span><br><span class="line"><span class="keyword">if</span>(p-&gt;data==e) &#123;n=n+<span class="number">1</span>;<span class="built_in">cout</span> &lt;&lt; e &lt;&lt; <span class="string">"是链表中的第"</span> &lt;&lt; n &lt;&lt; <span class="string">"个元素"</span> &lt;&lt; <span class="built_in">endl</span>;&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; e &lt;&lt; <span class="string">"是链表中的第"</span> &lt;&lt; n &lt;&lt; <span class="string">"个元素"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="插入、删除-1"><a href="#插入、删除-1" class="headerlink" title="插入、删除"></a>插入、删除</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//-------------------------链表元素的插入-------------------------</span></span><br><span class="line"><span class="function">Status <span class="title">InsertLNode</span><span class="params">(LNode * &amp;head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"你想将元素插入到链表的哪个位置："</span>;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; i;</span><br><span class="line">ElemType e;</span><br><span class="line"><span class="keyword">while</span>(i&lt;=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"插入位置不对，请输入有效的插入位置："</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"插入什么元素："</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; e;</span><br><span class="line">LNode *p=head-&gt;next;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> n=<span class="number">2</span>;n&lt;=i<span class="number">-1</span>;n++)</span><br><span class="line">&#123;</span><br><span class="line">p=p-&gt;next;</span><br><span class="line"><span class="keyword">if</span>(p==<span class="literal">NULL</span>) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">LNode *r;</span><br><span class="line">r=(LNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">r-&gt;data=e;</span><br><span class="line">r-&gt;next=p-&gt;next;</span><br><span class="line">p-&gt;next=r;</span><br><span class="line">DisplayList(head);</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//-------------------------链表元素的删除-------------------------</span></span><br><span class="line"><span class="function">Status <span class="title">DeleteLNode</span><span class="params">(LNode * &amp;head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(head-&gt;next==<span class="literal">NULL</span>) &#123;<span class="built_in">cout</span> &lt;&lt; <span class="string">"链表为空"</span> &lt;&lt; <span class="built_in">endl</span>;<span class="keyword">return</span> ERROR;&#125;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"你想删除哪个元素："</span>;</span><br><span class="line">ElemType e;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; e;</span><br><span class="line">LNode *p,*r;</span><br><span class="line"><span class="keyword">for</span>(p=head;p-&gt;data!=e&amp;&amp;p-&gt;next!=<span class="literal">NULL</span>;)</span><br><span class="line">&#123;</span><br><span class="line">                r=p;</span><br><span class="line">p=p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(p-&gt;data==e)</span><br><span class="line">&#123;</span><br><span class="line">r-&gt;next=(p-&gt;next);</span><br><span class="line">                DisplayList(head);</span><br><span class="line">                <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(p-&gt;next==<span class="literal">NULL</span>)&#123;<span class="built_in">cout</span> &lt;&lt; <span class="string">"不存在要删除的元素"</span> &lt;&lt; e &lt;&lt; <span class="built_in">endl</span>;<span class="keyword">return</span> ERROR;&#125;</span><br><span class="line">r-&gt;next=p-&gt;next;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"已将元素删除"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">DisplayList(head);</span><br><span class="line"><span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="就地逆置"><a href="#就地逆置" class="headerlink" title="就地逆置"></a>就地逆置</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//-------------------------链表就地逆置-------------------------</span></span><br><span class="line"><span class="function">Status <span class="title">UnsLinklist</span><span class="params">(LNode * &amp;head)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LNode *p,*r,*first=head-&gt;next;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"将链表就地转置为：\n"</span>;</span><br><span class="line"><span class="keyword">for</span>(p=head-&gt;next;p-&gt;next!=<span class="literal">NULL</span>;)</span><br><span class="line">&#123;</span><br><span class="line">r=p-&gt;next;</span><br><span class="line">p-&gt;next=head-&gt;next;</span><br><span class="line">head-&gt;next=p;</span><br><span class="line">p=r;</span><br><span class="line">&#125;</span><br><span class="line">p-&gt;next=head-&gt;next;</span><br><span class="line">head-&gt;next=p;</span><br><span class="line">first-&gt;next=<span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">DisplayList(head);</span><br><span class="line">        <span class="keyword">return</span> OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>全部<a href="https://github.com/ourfor/My-C-Learning/blob/master/C%2B%2B/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8A%E6%9C%BA/LinkList.cpp" target="_blank" rel="noopener">代码</a></p><blockquote><p>代码已经全部同步到<a href="https://github.com/ourfor/My-C-Learning" target="_blank" rel="noopener">GitHub-ourfor</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
            <tag> 数据结构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编辑器推荐Sublime Text 3</title>
      <link href="/2018/03/24/3/"/>
      <url>/2018/03/24/3/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>之前百度了一下IDE(集成开发环境),安装了几款软件,发现这些软件不仅交互界面有待改善,而且体积巨大,自我学习计算机以来,我使用得比较多的文本编辑器是<code>Nodepad++</code> 、<code>vim</code> 、<code>nano</code> 、<code>Sulime Text 3</code>,其中<strong><em>vim</em></strong>和<strong><em>nano</em></strong>主要在Terminal下面使用,而Nodepad++仅支持Windows平台,而<strong><em>Sublime Text 3</em></strong>支持所有主流平台，虽然它不是免费的，但它也不强制用户付费。当然你也可以使用别人提供的激活码。之所以推荐Sublime Text 3是因为它不仅体积小而且功能强大，同时有不少人制作精美炫酷的主题，或许这个文本编辑器会给你不一样的感觉。<br><a id="more"></a></p><h1 id="下载安装Sublime-Text-3"><a href="#下载安装Sublime-Text-3" class="headerlink" title="下载安装Sublime Text 3"></a>下载安装Sublime Text 3</h1><p><a href="https://www.sublimetext.com/" target="_blank" rel="noopener">Sublime Text 3</a>  </p><p>可能会由于墙的原因，下载速度比较慢，这里我提供<code>Sublime Text 3 (Build 3143)</code>的安装包：</p><ul><li><a href="https://file.ourfor.top/source/ourfor/Sublime%20Text%20Build%203143%20%281%29.dmg" target="_blank" rel="noopener">DOWNLOAD FOR MAC</a></li><li><a href="https://file.ourfor.top/source/ourfor/Sublime%20Text%20Build%203143%20x64%20Setup.exe" target="_blank" rel="noopener">DOWNLOAD FOR WINDOWS</a></li><li><a href="https://file.ourfor.top/source/ourfor/sublime_text_3_build_3143_x64.tar.bz2" target="_blank" rel="noopener">DOWNLOAD FOR LINUX</a></li></ul><blockquote><p>linux就直接用命令安装就好了，不必使用安装包</p></blockquote><blockquote><p>Node:个人比较喜欢英文界面，如果你更习惯使用中文，可以自行百度下载汉化包。</p></blockquote><h1 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h1><p>下面是这两个主题在<strong><em>GitHub</em></strong>上面的项目地址，有时间可以关注一下。<code>stars</code>的人多了，作者才会有更新的动力。</p><ul><li><a href="https://github.com/ihodev/a-file-icon" target="_blank" rel="noopener">A File Icon</a></li><li><a href="https://github.com/equinusocio/material-theme" target="_blank" rel="noopener">Material Theme</a></li></ul><p>项目地址上面提供了几种安装的方法，我这里提供一种简单的方法。</p><h3 id="Step-1"><a href="#Step-1" class="headerlink" title="Step 1"></a>Step 1</h3><p>在菜单选项卡依次点开<code>Tools</code>-<code>Install Package</code>,过不了多久就安装好了<strong><em>Package Control</em></strong></p><h3 id="Step-2"><a href="#Step-2" class="headerlink" title="Step 2"></a>Step 2</h3><p>Type<code>Package Control: Install Package</code> ,它会自动安装,再输入需要安装的主题<code>A File Icon</code></p><h3 id="Step-3"><a href="#Step-3" class="headerlink" title="Step 3"></a>Step 3</h3><p>首先安装<code>A File Icon</code>再安装<code>Material Theme</code>,安装好以后找到<code>Preferences &gt; Packages Settings</code>,里面选择<code>Material Theme &gt; Activate</code></p><p>主题的相关设置,这个你懂的吧。</p><figure class="image-box">                <img src="https://file.ourfor.top/source/ourfor/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-24%20%E4%B8%8B%E5%8D%881.07.10.png" alt="Sublime Text 3" title class>                <p>Sublime Text 3</p>            </figure><figure class="image-box">                <img src="https://file.ourfor.top/source/ourfor/%E5%B1%8F%E5%B9%95%E5%BF%AB%E7%85%A7%202018-03-21%20%E4%B8%8B%E5%8D%8811.25.00.png" alt="@-@" title class>                <p>@-@</p>            </figure>        <div id="aplayer-NtjFRtYW" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-NtjFRtYW"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "阿刁 (Live)",              author: "张韶涵",              url: "https://file.ourfor.top/source/ourfor/%E5%BC%A0%E9%9F%B6%E6%B6%B5-%E6%B2%A1%E7%A6%BB%E5%BC%80%E8%BF%87.flac.tmp",              pic: "https://gss0.bdstatic.com/94o3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike272%2C5%2C5%2C272%2C90/sign=6ed5142a95510fb36c147fc5b85aa3f0/8326cffc1e178a8231192533fd03738da977e878.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script> ]]></content>
      
      
      <categories>
          
          <category> 编辑器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sublime Text 3 </tag>
            
            <tag> Theme </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Accelerate</title>
      <link href="/2018/03/10/Accelerate/"/>
      <url>/2018/03/10/Accelerate/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><table class="table"><br>    <tr><br>        <th>节次/周次</th><br>        <th>星期一</th><br>        <th>星期二</th><br>        <th>星期三</th><br>        <th>星期四</th><br>        <th>星期五</th><br>    </tr><br>    <tr><br>        <td>第一节</td><br>        <td rowspan="2">数据结构上机</td><br>        <td></td><br>        <td rowspan="2">高等数学（西205)</td><br>        <td rowspan="2">高等数学（西206)</td><br>        <td></td><br>    </tr><br>    <tr><br>        <td>第二节</td><br>        <td rowspan="3">C++（西205）</td><br>        <td></td><br>    </tr><br>    <tr><br>        <td>第三节</td><br>        <td rowspan="2">高等数学（西105)</td><br>        <td rowspan="2">数据结构（西205）</td><br>        <td rowspan="2">数据结构（西206）</td><br>        <td rowspan="2">大学英语（至205）</td><br>    </tr><br>    <tr><br>        <td>第四节</td><br>    </tr><br>    <tr><br>        <td>第五节</td><br>        <td rowspan="2">数据结构（西203）</td><br>        <td rowspan="2">离散数学（西407）</td><br>        <td rowspan="2">大学体育</td><br>        <td></td><br>        <td></td><br>    </tr><br>    <tr><br>        <td>第六节</td><br>        <td></td><br>        <td></td><br>    </tr><br>    <tr><br>        <td>第七节</td><br>        <td rowspan="2">近代史（至305）</td><br>        <td rowspan="2">C++上机</td><br>        <td rowspan="2">大学英语（至205）</td><br>        <td></td><br>        <td></td><br>    </tr><br>    <tr><br>        <td>第八节</td><br>        <td></td><br>        <td></td><br>    </tr><br></table><a id="more"></a><ul><li><a href="https://github.com/ourfor/My-C-Learning" target="_blank" rel="noopener">My C Learning</a></li></ul><blockquote><p><strong><em>古今之成大事业、大学问者，必经过三种之境界：”昨夜西风凋碧树。独上高楼，望尽天涯路。”此第一境也。”衣带渐宽终不悔，为伊消得人憔悴。”此第二境也。”众里寻他千百度，蓦然回首，那人却在灯火阑珊处。”此第三境也。此等语皆非大词人不能道。然遽以此意解释诸词，恐为晏欧诸公所不许也。”<br>——王国维《人间词话》</em></strong></p></blockquote><p>@timeline{</p><h5 id="T"><a href="#T" class="headerlink" title="T.."></a>T..</h5><p>@item{</p><h6 id="第一境"><a href="#第一境" class="headerlink" title="第一境"></a>第一境</h6><p>昨夜西风凋碧树。独上高楼，望尽天涯路</p><p>}</p><p>@item{</p><h6 id="第二境"><a href="#第二境" class="headerlink" title="第二境"></a>第二境</h6><p>衣带渐宽终不悔，为伊消得人憔悴</p><p>}</p><p>@item{</p><h6 id="第三境"><a href="#第三境" class="headerlink" title="第三境"></a>第三境</h6><p>众里寻他千百度，蓦然回首，那人却在灯火阑珊处</p><p>}</p><h5 id="T-1"><a href="#T-1" class="headerlink" title="..T"></a>..T</h5><p>}</p>        <div id="aplayer-agXmdrEl" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-agXmdrEl"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "123我爱你",              author: "新乐尘符",              url: "https://file.ourfor.top/source/ourfor/%E6%96%B0%E4%B9%90%E5%B0%98%E7%AC%A6-123%E6%88%91%E7%88%B1%E4%BD%A0.flac",              pic: "https://file.ourfor.top/source/ourfor/favicon.png",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script> ]]></content>
      
      
      <categories>
          
          <category> Accelerate </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Accelerate </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo个人博客</title>
      <link href="/2018/03/06/hexo-github-coding%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2018/03/06/hexo-github-coding%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>常见的博客系统有简书、新浪博客等等然而这些大多是使用官方域名，博客样式也比较单一，优点是容易上手，不必太注重编辑语法，缺点是博客的样式比较单一，无法使用自己的域名，同时也就意味访问量注定不高，随着QQ空间、微信朋友圈的流行，人们对博客的浏览也越来越少，然而QQ空间、微信朋友圈大多以生活记录、趣事分享为主，虽然微信公众号经常会发布一些资讯、技术帖，然而微信客户端的限制注定无法满足人们的需要，仅仅从经验分享、交流而言。博客还是有存在的必要的。<br><a id="more"></a></p><h2 id="胡说八道"><a href="#胡说八道" class="headerlink" title="胡说八道"></a>胡说八道</h2><blockquote><p>我为什么搭建博客？为什么不是WordPress而是Hexo？   </p></blockquote><p>21世纪是信息时代，这年头谁没有个QQ空间、微信朋友圈，你又是否觉得微信朋友圈、QQ空间并不是一个想说什么就能说的地方，QQ空间随处可见的广告，朋友圈的矫情，当浅尝辄止成为思维定式，急功近利成为文化景象，喧嚣肤浅成为人们喜闻乐见的行为方式时，人们势必难以用心而行，无法静下心来。浮躁是这个时代的集体病症，生活中充斥着QQ空间、微信朋友圈的无病呻吟。是否还能有一个地方能个静下心来研究高深之学问，我想大概就只有博客了吧。你可以用博客来分享经验、记录。总之，在这里你说了算。搭建个人博客系统，无需购买云主机，避免WordPress的繁琐与臃肿，0基础上手，(未完待续)</p><table><thead><tr><th style="text-align:center">type</th><th style="text-align:center">advantages</th><th style="text-align:center">disadvantages</th></tr></thead><tbody><tr><td style="text-align:center">WordPress</td><td style="text-align:center">可以更加专注于写作，媒体资源可以储存在主机上</td><td style="text-align:center">需要主机、公网IP以及LNMP/LAMP环境，同时具备一定的建站基础</td></tr><tr><td style="text-align:center">Hexo</td><td style="text-align:center">无需主机（相对而言）以及公网IP同时提供二级域名，比较稳定</td><td style="text-align:center">使用MarkDown纯文本语法写作兼容HTML，媒体资源一般使用外链</td></tr></tbody></table><p>虽然你可以在路由器上面跑<code>WordPress</code>,前提是你对<em>Linux</em>比较熟悉同时有宽带运营商提供固定的公网IP，公网IP资源相对比较匮乏，直接购买比较昂贵，向宽带运营商索要是不错的选择。当然如果你经常使用<code>Shadowsocks</code>(酸酸乳)的话，直接搭载同一台主机上面就行了，这样不至于性能过剩。而Hexo搭建静态博客是使用了<code>Github</code>和<code>Coding</code>提供的<strong><em>Pages</em></strong>服务，这个是比较稳定的，<strong><em>Github</em></strong>作为全球最大的开源社区，安全性和稳定性肯定不用担心，我们使用的<em>Pages</em>服务仅仅是<a href="https://github.com/" target="_blank" rel="noopener">Github</a>的冰山一角而已，或许从搭建blog以后你就会感受到Github的魅力。   </p><h2 id="必备组件"><a href="#必备组件" class="headerlink" title="必备组件"></a>必备组件</h2><ul><li><a href="https://git-scm.com/" target="_blank" rel="noopener">Git</a> </li><li><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a>   </li></ul><blockquote><p>Notice: 根据你使用的操作系统下载安装对于的版本即可，Linux和macOS可以通过命令行安装，对于macOS，安装包管理软件之后就可以通过源安装，对于新手不推荐使用这种方式，因为可能会用到root权限，这样以后生成、部署就比较麻烦。如果从来没有用过命令行，建议了解一下通配符。   </p></blockquote><h4 id="Linux下安装git和Node-js"><a href="#Linux下安装git和Node-js" class="headerlink" title="Linux下安装git和Node.js"></a>Linux下安装<code>git</code>和<code>Node.js</code></h4><p>通过下面命令安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update      <span class="comment">#检查更新</span></span><br><span class="line">sudo apt-get install git    <span class="comment">#安装Git</span></span><br><span class="line">sudo apt-get install nodejs    <span class="comment">#安装nodejs</span></span><br></pre></td></tr></table></figure></p><p>估计用<code>Linux</code>的用户应该看看官方的说明文档就会了。所以下面以<code>Windows</code>和<code>macOS</code>为例。其中macOS可以安装包管理软件来安装必须组件，例如MacPorts，Homebrew，Fink。     </p><h4 id="git、Node-js下载"><a href="#git、Node-js下载" class="headerlink" title="git、Node.js下载"></a>git、Node.js下载</h4><p>Windows、macOS通过下载安装包安装<br>下面链接均为64位系统长期支持版本。32位系统<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">点击这里</a>       </p><blockquote><p>Node.js</p><ul><li><a href="https://nodejs.org/dist/v8.10.0/node-v8.10.0.pkg" target="_blank" rel="noopener">macOS Installer (.pkg)</a></li><li><a href="https://nodejs.org/dist/v8.10.0/node-v8.10.0-x64.msi" target="_blank" rel="noopener">Windows Installer (.msi)</a> </li></ul></blockquote><blockquote><p>Git   </p><ul><li><a href="https://sourceforge.net/projects/git-osx-installer/files/git-2.16.2-intel-universal-mavericks.dmg/download?use_mirror=autoselect" target="_blank" rel="noopener">macOS</a></li><li><a href="https://github.com/git-for-windows/git/releases/download/v2.16.2.windows.1/Git-2.16.2-32-bit.exe" target="_blank" rel="noopener">Windows</a> </li></ul></blockquote><h4 id="macOS通过brew安装"><a href="#macOS通过brew安装" class="headerlink" title="macOS通过brew安装"></a>macOS通过brew安装</h4><p>macOS可以使用上面的方法下载安装包安装，而我更喜欢通过<code>brew</code>和<code>command line</code>安装，使用这种方法安装，你必须先安装包管理软件<code>brew</code>:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></span><br></pre></td></tr></table></figure><p>安装好<code>brew</code>后，键入以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">brew install git         <span class="comment">#安装git</span></span><br><span class="line">brew install nodejs      <span class="comment">#安装Node.js</span></span><br></pre></td></tr></table></figure></p><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g     <span class="comment">#安装Hexo</span></span><br><span class="line">hexo init blog              <span class="comment">#初始化博客</span></span><br><span class="line"><span class="built_in">cd</span> blog                     <span class="comment">#进入博客根目录</span></span><br><span class="line">npm install                 <span class="comment">#安装hexo到博客根目录</span></span><br></pre></td></tr></table></figure><p>(未完待续)</p><h2 id="高清重置"><a href="#高清重置" class="headerlink" title="高清重置"></a>高清重置</h2><p>由于学习和工作的需要，大部分同学使用的是<code>Windows</code> 操作系统，所以<code>Linux</code> 和 <code>macOS</code> 就先不写了，我在虚拟机里面安装了<code>Windows10</code> 所以下面以<code>Windows</code> 为例，来安装<code>hexo</code> 搭建博客。</p><ul><li><a href="https://file.ourfor.top/tools/node-v10.2.0-x64.msi" target="_blank" rel="noopener">Node.js</a></li><li><a href="https://file.ourfor.top/tools/Git-2.17.0-64-bit.exe" target="_blank" rel="noopener">git</a></li></ul><p>你可以到官网下载，不过可能由于<code>GFW</code> 的原因下载比较慢，所以我下载到了服务器，放在了<code>tools</code>这个目录里面。<a href="https://file.ourfor.top" target="_blank" rel="noopener">🔧Here</a>.下载好这两个软件，安装的时候保存默认就好。</p><h2 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装<code>hexo</code></h2><p>在<code>Windows10</code> 的搜索框中查找<strong><em>Git bash</em></strong>,或者点击Windows徽键，在最近添加中打开，在<code>Git bash</code>键入如下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pwd</span>                <span class="comment">#print working directory显示当前路径。</span></span><br><span class="line"><span class="built_in">cd</span> ~/Desktop       <span class="comment">#change directory,更改路径切换到桌面。如果提示找不到，那可能要把Desktop改成桌面</span></span><br><span class="line">mkdir blog         <span class="comment">#make directory 新建一个名为blog的文件夹，名字不一定叫blog可以根据你的喜好填写</span></span><br><span class="line">npm install hexo-cli -g   <span class="comment">#安装hexo</span></span><br><span class="line">hexo -v                <span class="comment">#检查是否成功安装hexo，并查看版本信息</span></span><br><span class="line">hexo init blog         <span class="comment">#初始化blog这个文件夹，这个文件夹就是第3条命令创建的文件夹，如果你使用的是其他名称，换成对应的名称即可。</span></span><br><span class="line"><span class="built_in">cd</span> blog                <span class="comment">#进入blog这个文件夹，和上面一样</span></span><br><span class="line">npm install            <span class="comment">#安装必要插件</span></span><br><span class="line">hexo generate          <span class="comment">#简写hexo g,即渲染并生成HTML页面。</span></span><br><span class="line">hexo server            <span class="comment">#简写hexo s,本地计算机启动服务，如果此时出现nodejs提示的防火墙，允许即可</span></span><br></pre></td></tr></table></figure></p><ul><li><code>hexo -v</code>出现如下信息则说明<code>hexo</code>安装好了。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">hexo-cli: 1.1.0</span><br><span class="line">os: Windows_NT 10.0.16299 win32 x64</span><br><span class="line">http_parser: 2.8.0</span><br><span class="line">node: 10.2.0</span><br><span class="line">v8: 6.6.346.32-node.8</span><br><span class="line">uv: 1.20.3</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">ares: 1.14.0</span><br><span class="line">modules: 64</span><br><span class="line">nghttp2: 1.29.0</span><br><span class="line">napi: 3</span><br><span class="line">openssl: 1.1.0h</span><br><span class="line">icu: 61.1</span><br><span class="line">unicode: 10.0</span><br><span class="line">cldr: 33.0</span><br><span class="line">tz: 2018c</span><br></pre></td></tr></table></figure><ul><li><code>hexo s</code>输出信息</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.</span><br><span class="line">INFO  Catch you later</span><br></pre></td></tr></table></figure><p><img src="https://file.ourfor.top/source/other/git_bash.PNG"><br>博客将会部署到本地，使用<code>4000</code> 的端口，在浏览器中打开<code>http://localhost:4000/</code> 就可以查看博客了。自此我们的hexo就安装好了。</p><h3 id="远程部署"><a href="#远程部署" class="headerlink" title="远程部署"></a>远程部署</h3><p>你逗我的吧，<code>hexo</code>就弄好了？那我为什么外网访问不了呢？手机上面也打不开啊！<br>嗯，<strong><em>hexo</em></strong> 确实已经安装好了，博客也确实安装好了，那么我要怎样才能在外网中访问它呢，同时我又能不能用自己喜欢的域名来访问我的博客呢？</p><ul><li><p>什么是域名？<br>举个简单的例子：<br>当你在浏览器地址栏中输入<code>baidu.com</code>,你的浏览器就会自动打开百度官网，像<strong><em>baidu.com</em></strong>这一串就是一个顶级域名，比如我的域名<code>ourfor.top</code> 也是一个顶级域名，而<code>file.ourfor.top</code>则是一个二级域名，它是<code>ourfor.top</code>的子域名，加了个<code>file.</code>，可以这样说只有一个<code>dot</code>的就是顶级域名，两个点<code>.</code>的就是二级域名，顶级域名拥有对其子域名的管理权。再举个例子,如果你在浏览器中输入<code>m.baidu.com</code>,你的浏览器将会访问百度的手机版页面，现在<code>google</code>要求强制使用<code>HTTPS</code>的协议，当你输入<code>http//:baidu.com</code>它会强制跳转到<code>https</code>，所以目前大部分网站<code>https</code>和<code>http</code>没什么区别，所以你在浏览器地址栏中输入网址不需要加协议（https://或者http://）就能打开。</p></li><li><p>说了半天我还是不懂，🤣🤣，好吧其实科普一下就OK，那么这个域名是干什么用的呢？<br>一般情况下计算机通过<code>ip</code>地址来访问服务器，但是通过<code>ipv4</code>来访问网站这样太麻烦了，太难记忆了，极不方便，于是人们便想出通过一串字母（网址）来访问网站。同时使用<code>DNS</code>解析到服务器ip，这样当你输入网址后计算机就会访问域名解析的<code>ip</code>地址。</p></li></ul><p>你可以按下<code>win + r(run)</code>,同时输入<code>cmd</code>来打开 <code>命令提示符</code>(原谅我Windows的命令懂得不多，Linux和macOS还行😅😅)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ping baidu.com       <span class="comment">#它会检测服务器的ip地址以及响应速度，按住Ctrl + c就可以停止</span></span><br><span class="line">ping ourfor.top      <span class="comment">#我用的是美国🇺🇸的服务器，服务器IP是144.202.15.107</span></span><br><span class="line">ping file.ourfor.top  <span class="comment">#这两个网站我放在同一个服务器上面的，所以IP地址是一样的。</span></span><br></pre></td></tr></table></figure></p><h2 id="更新文章"><a href="#更新文章" class="headerlink" title="更新文章"></a>更新文章</h2><p>博客安装好了，我要怎样写文章呢？<br>所以我们就有必要了解一下blog这个文件夹里面各个部分的作用了。</p><figure class="image-box">                <img src="https://file.ourfor.top/source/other/blog.png" alt="blog文件夹🏠" title class>                <p>blog文件夹🏠</p>            </figure><figure class="image-box">                <img src="https://file.ourfor.top/source/other/source.png" alt="source文件夹📂" title class>                <p>source文件夹📂</p>            </figure><figure class="image-box">                <img src="https://file.ourfor.top/source/other/themes.png" alt="themes文件夹😝" title class>                <p>themes文件夹😝</p>            </figure><ul><li><p>文章保存在<code>source/_posts</code>里面，是以<code>.md</code>结尾的文本文件，你可以用文本编辑器打开编辑它,不过我更推荐你用<a href="https://ourfor.top/2018/03/24/3/" target="_blank" rel="noopener">Sublime Text 3</a>，这个文本文件使用的是<code>MarkDown</code>这种轻量级的标记语法，同时兼容<code>HTML</code> ，是<strong><em>纯文本的</em></strong>，不像<code>WordPress</code>和<code>PPT</code>那样，当然这是优点。</p></li><li><p>写第一篇文章<br>在<code>Git bash</code>(注意你得cd到博客根目录下面，即上文的blog文件夹下面) ，输入<code>hexo new 我的XX</code>(我的XX-是标题，自拟)<br>这时候你就可以在<code>blog/source/_posts</code>里面看到它，编辑这个文件就OK了。</p></li><li><p>博客部署到远程仓库</p></li></ul><p>如何从外网访问博客呢？其实我们打开的<code>http://localhost:4000/</code>这个网址它的网站根目录是在<code>blog/public</code>下面，你可以打开public这个文件夹看看，里面就是网站页面的源码，你可以打开这个<code>index.html</code>文件，是不是就是你的博客的主页。只是没有图片而已，所以我们只需要将这个文件夹里面的东西放到一个外网可以访问的地方就行了，好在<code>hexo</code>的配置文件里面已经有相关的设置了，我们只需要稍作更改就行了。</p><p>首先我们先去<code>github</code>或者<code>coding</code>注册一个账号。</p><ul><li><a href="https://github.com/" target="_blank" rel="noopener">GitHub</a></li><li><a href="https://coding.net/" target="_blank" rel="noopener">Coding</a></li></ul><p>由于<code>Github</code>主机在美国，访问速度可能有点慢，所以你也可以部署到<code>Coding</code>，下面以全球最大的开源社区<code>GitHub</code>为例(今年是GitHub十周年)。</p><h4 id="1-打开GitHub官网-点击右上角的Sign-up注册一个账号。"><a href="#1-打开GitHub官网-点击右上角的Sign-up注册一个账号。" class="headerlink" title="1.打开GitHub官网,点击右上角的Sign up注册一个账号。"></a>1.打开<a href="https://github.com/" target="_blank" rel="noopener">GitHub官网</a>,点击右上角的<code>Sign up</code>注册一个账号。</h4><figure class="image-box">                <img src="https://file.ourfor.top/source/other/sing_up.png" alt="Sign up" title class>                <p>Sign up</p>            </figure><ul><li><p><code>Username</code>填一个简单一点的英文名，因为以后你的博客就通过<code>Username.github.io</code>来访问的，所以起一个好点的、不太长的名字就很有必要了，比如我的这个<code>Username</code>是<code>ourfor</code>,很短也很好记。</p></li><li><p><code>Email address</code>填个QQ邮箱📮也是OK的啦</p></li><li><p><code>Password</code>这个你懂得😳😳</p></li><li><p><code>step2和step3</code>这个由于我注册过了，我就没打开看了，你看着填吧。</p></li></ul><h4 id="2-新建一个Repository，点击页面上面的New-repository"><a href="#2-新建一个Repository，点击页面上面的New-repository" class="headerlink" title="2.新建一个Repository，点击页面上面的New repository"></a>2.新建一个<code>Repository</code>，点击页面上面的<code>New repository</code></h4><figure class="image-box">                <img src="https://file.ourfor.top/source/other/new_repository.png" alt="New repository" title class>                <p>New repository</p>            </figure><ul><li>这个<code>Repository name</code>填<code>username.github.io</code>,比如我的就填<code>ourfor.github.io</code>.你的根据你的<code>username</code>填。</li><li><code>Public</code>就是这个，点击<code>Create repository</code>就可以完成创建。</li><li><code>Description</code>可选，建议勾选☑️<code>Initialize this repository with a README</code></li></ul><p>这时候就会打开仓库主页，依次点击页面右侧的<code>Clone or download</code>、<code>Use SSH</code>复制框中的<code>Repo</code>地址，待会要用。</p><h4 id="3-修改配置文件-config-yml"><a href="#3-修改配置文件-config-yml" class="headerlink" title="3.修改配置文件_config.yml"></a>3.修改配置文件<code>_config.yml</code></h4><p>用<code>Sublime Text 3</code>或者其他文本编辑器打开博客根目录下面的<code>_config.yml</code>文件，在文件末尾，找到：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>:</span><br></pre></td></tr></table></figure></p><p>改成：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line">deploy:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: </span><br><span class="line">       github: git@github.com:ourfor/ourfor.github.io.git,master</span><br><span class="line">       <span class="comment">#coding: git@git.coding.net:ourfor/ourfor.git,master</span></span><br><span class="line">  branch: master     </span><br><span class="line">  message: blog update</span><br></pre></td></tr></table></figure></p><p>上面这个<code>git@github.com:ourfor/ourfor.github.io.git</code>是我的仓库的地址,你改成刚才复制的那个就行了，如果你用的是<code>coding</code>你可以把<code>github</code>这一行用<code>#</code>注释掉，去掉<code>coding</code>前面的<code>#</code>。最后保存更改。</p><h3 id="4-添加部署密钥"><a href="#4-添加部署密钥" class="headerlink" title="4.添加部署密钥."></a>4.添加部署密钥.</h3><p>打开<code>Git bash</code>，输入<code>ssh-keygen -t rsa -C &quot;2320813747@qq.com&quot;</code>,这个邮箱地址换成你的。连续四次回车就生成了一对密钥。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Your identification has been saved <span class="keyword">in</span> /c/Users/zip/.ssh/id_rsa.</span><br><span class="line">Your public key has been saved <span class="keyword">in</span> /c/Users/zip/.ssh/id_rsa.pub.</span><br></pre></td></tr></table></figure></p><p>它会告诉你密钥生成在那个文件夹,上面是我的密钥生成路径，下面要相应替换成你的，使用<code>cat</code>来查看公钥内容：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /c/Users/zip/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></p><p>复制输出的内容，打开<code>GitHub</code>，点击页面右侧头像旁边的倒三角，打开<code>Settings</code>，在页面左侧的<code>Personal settings</code>下面定位到<code>SSH and GPG keys</code>这一栏,点击右侧的<code>New SSH key</code>来添加一个密钥，其中<code>Title</code>随意,<code>Key</code>填写上一步<code>Git bash</code>里面生成的那个。最后<code>Add SSH key</code>就行了。</p><blockquote><p>当你写好文章之后,首先得使用<code>hexo g</code>来生成，而<code>hexo s</code>可以在本地查看实际效果，<code>hexo d</code>会自动<code>push</code>到远程仓库，你就可以在浏览器地址栏中输入<code>username.github.io</code>来访问你的博客<code>username</code>是你的<strong><em>GitHub</em></strong>用户名。</p></blockquote><ul><li>更换主题<br>是不是觉得默认的<code>landscape</code>太单调简洁了？不会前端设计？没关系，GitHub上面有很多开发者为<code>hexo</code>设计了许多精美的主题。诸如<code>Next</code>、<code>mellow</code>等等。<br>我个人比较喜欢这两个主题：</li><li style="list-style: none"><input type="checkbox" checked> <a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="noopener">Next</a> </li><li style="list-style: none"><input type="checkbox" checked> <a href="https://github.com/codefine/hexo-theme-mellow/wiki" target="_blank" rel="noopener">Mellow</a><br>上面都有详细的帮助文档，如果看不太懂😭，我们可以一起讨论交流。</li></ul><ul><li>绑定个性化域名<br>是不是觉得<code>username.github.io</code>这个难记而且那个(😝你懂的)，那么我要怎样获取我喜欢的域名呢？</li></ul><p>获取免费域名: <a href="http://www.freenom.com/" target="_blank" rel="noopener">freenom</a>这个网站提供免费的顶级域名包括解析，只不过大多以<code>tk</code>结尾。</p><p>收费域名: 国内的阿里云、腾讯云啊都有域名服务，有一些域名首年只要<code>￥1</code>,每年续费好像是7到8元的样子。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> ____________</span><br><span class="line">&lt; Hello,World &gt;</span><br><span class="line"> ------------</span><br><span class="line">       \   ,__,</span><br><span class="line">        \  (oo)____</span><br><span class="line">           (__)    )\</span><br><span class="line">              ||--|| *</span><br></pre></td></tr></table></figure><details><summary>千万别看</summary><br><figure class="image-box">                <img src="http://p923bw9fi.bkt.clouddn.com/lp23.png" alt="😳😳" title class>                <p>😳😳</p>            </figure><br><br></details><p>附上我这篇博客文章的源码，了解一下该怎样写<a href="https://file.ourfor.top/ebook/hexo-github-coding%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2.md" target="_blank" rel="noopener">Click Here</a></p><p><div id="app"></div><br><!-- 加载 cplayer 脚本 --></p><script src="https://cdn.jsdelivr.net/gh/MoePlayer/cPlayer/dist/cplayer.js"></script><script>  let player = new cplayer({    element: document.getElementById('app'),    autoplay: true,    showPlaylist: true,    playlist: [      {        src: 'https://file.ourfor.top/source/other/%E5%91%A8%E4%BA%8C%E7%8F%82%20-%20%E5%91%8A%E7%99%BD%E6%B0%94%E7%90%83.wav',        poster: 'https://file.ourfor.top/source/other/%E5%91%A8%E4%BA%8C%E7%8F%82.jpg',        name: '告白气球(翻唱)',        artist: '周二珂'      }    ]  })</script><p>(今晚继续写)</p><blockquote><p>梦想是注定孤独的旅行<br>路上少不了质疑和嘲笑<br>但那又怎样<br>哪怕遍体鳞伤<br>也要活得漂亮<br>———陈欧</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> hexo </tag>
            
            <tag> coding </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VPS/树莓派实现云点播</title>
      <link href="/2018/03/01/VPS-%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%9E%E7%8E%B0%E4%BA%91%E7%82%B9%E6%92%AD/"/>
      <url>/2018/03/01/VPS-%E6%A0%91%E8%8E%93%E6%B4%BE%E5%AE%9E%E7%8E%B0%E4%BA%91%E7%82%B9%E6%92%AD/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>本文将介绍如何使用下载工具<em>Xware</em>（迅雷远程下载）以及Emby来实现云点播，下载工具万万千千，为什么我们要用<em>Xware</em>？大家熟知的下载神器除了迅雷还有<em>Aria2</em>、<em>Transmission</em>；其实这些也是可以用的，只不过个人感觉<code>迅雷</code>下载快一点，同样对于媒体服务而言除了<em>Emby</em>还有<em>Plex</em>，只不过这个<code>Plex</code>安卓端播放是需要会员的，因此这里使用<code>Xware</code>和<code>Emby</code>如果你有个开发板或者VPS，接下来就开始折腾。<br><a id="more"></a>       </p><h2 id="Install-Xware"><a href="#Install-Xware" class="headerlink" title="Install Xware"></a>Install Xware</h2><p>安装<em>Xware</em>之前，我们需要安装<em>Docker</em>，而Docker只能安装在64位的电脑上面，这里我的VPS使用的是<code>CentOS6 x64</code>，输入以下命令安装：    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://get.daocloud.io/docker | sh      <span class="comment">#安装Docker</span></span><br></pre></td></tr></table></figure><p>树莓派直接使用该命令<code>sudo apt-get install docker.io</code>安装<em>Docker</em>，安装好<code>Docker</code>之后，我们来下载<em>Xware</em>的镜像，这些镜像你可以在<a href="www.daocloud.io">DaoCloud</a>上面下载，对于VPS使用这个镜像<code>caiguai/docker-xware</code>树莓派使用这个<code>zxq1002/docker-thunder-xware</code>镜像  </p><h3 id="caiguai-docker-xware"><a href="#caiguai-docker-xware" class="headerlink" title="caiguai/docker-xware"></a>caiguai/docker-xware</h3><p>在终端中依次输入以下命令：     </p><p>拉取最新镜像：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull caiguai/docker-xware:latest</span><br></pre></td></tr></table></figure></p><p>创建一个下载目录. 用于挂载卷<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir data</span><br></pre></td></tr></table></figure></p><p>运行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">        --name=xware \</span><br><span class="line">        --net=host \</span><br><span class="line">        -v $(<span class="built_in">pwd</span>)/data:/xware/TDDOWNLOAD \</span><br><span class="line">        caiguai/docker-xware</span><br></pre></td></tr></table></figure></p><p>查看日志(激活码)/到迅雷增加设备<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">docker logs xware</span><br><span class="line">```   </span><br><span class="line">```bash</span><br><span class="line">// output:</span><br><span class="line">killall: ETMDaemon: no process killed</span><br><span class="line">killall: EmbedThunderManager: no process killed</span><br><span class="line">killall: vod_httpserver: no process killed</span><br><span class="line">initing...</span><br><span class="line">try stopping xunlei service first...</span><br><span class="line">setting xunlei runtime env...</span><br><span class="line">port: 9000 is usable.</span><br><span class="line"></span><br><span class="line">YOUR CONTROL PORT IS: 9000</span><br><span class="line"></span><br><span class="line">starting xunlei service...</span><br><span class="line">Connecting to 127.0.0.1:9000 (127.0.0.1:9000)</span><br><span class="line">setting xunlei runtime env...</span><br><span class="line">port: 9000 is usable.</span><br><span class="line"></span><br><span class="line">YOUR CONTROL PORT IS: 9000</span><br><span class="line"></span><br><span class="line">starting xunlei service...</span><br><span class="line"></span><br><span class="line">getting xunlei service info...</span><br><span class="line"></span><br><span class="line">THE ACTIVE CODE IS: xxx                   //激活码</span><br><span class="line"></span><br><span class="line">go to http://yuancheng.xunlei.com, <span class="built_in">bind</span> your device with the active code.</span><br><span class="line">finished.</span><br></pre></td></tr></table></figure></p><p>打开网站<a href="http://yuancheng.xunlei.com" target="_blank" rel="noopener">迅雷远程下载</a>，输入激活码绑定就可以下载了。</p><h3 id="zxq1002-docker-thunder-xware"><a href="#zxq1002-docker-thunder-xware" class="headerlink" title="zxq1002/docker-thunder-xware"></a>zxq1002/docker-thunder-xware</h3><p>在终端中依次输入以下命令：     </p><p>拉取最新镜像：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull zxq1002/docker-thunder-xware:latest</span><br></pre></td></tr></table></figure></p><p>创建一个下载目录. 用于挂载卷<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir data</span><br></pre></td></tr></table></figure></p><p>运行<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">         --name=xware \</span><br><span class="line">         --net=host \</span><br><span class="line">         -v $(<span class="built_in">pwd</span>)/data:/app/TDDOWNLOAD \</span><br><span class="line">         zxq1002/docker-thunder-xware</span><br></pre></td></tr></table></figure></p><p>剩下的步骤和上面的一样。</p><h3 id="添加开机启动"><a href="#添加开机启动" class="headerlink" title="添加开机启动"></a>添加开机启动</h3><p>输入<code>docker ps</code>可以查看正在运行的容器，<code>docker ps -l</code>用于查看所有容器，输入命令查看<code></code>.<br>修改启动脚本<code>/etc/rc.local</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/rc.local</span><br></pre></td></tr></table></figure><p>按<code>i</code>进入编辑状态，在<code>exit 0</code>之前加上这一句<code>sudo docker start xxxxxxxx(Docker容器CONTAINER ID）</code>,之后按<code>Esc</code>进入命令输入状态输入<code>:wq</code>,注意<code>:</code>需要在英文状态下按住<code>Shift</code>输入。</p><p>迅雷远程下载官网的影视搜索里面有资源下载的网站，这里推荐一个下载动漫的网站：</p><ul><li><a href="https://share.dmhy.org" target="_blank" rel="noopener">动漫花园</a></li></ul><h2 id="Install-Emby"><a href="#Install-Emby" class="headerlink" title="Install Emby"></a>Install Emby</h2><ul><li><a href="https://emby.media/" target="_blank" rel="noopener">Emby官网</a></li></ul><p><code>Emby服务端</code>在<a href="https://emby.media/linux-server.html" target="_blank" rel="noopener">https://emby.media/linux-server.html</a> </p><p><img src="https://file.ourfor.top/source/ourfor/install%20Emby%20service.png"></p><p><em>右键</em>Download后面的安装包，选择复制<em>下载地址（链接）</em>，服务器安装<code>wget</code>下载工具，当然你也可以电脑下载好之后通过<em>ftp/scp</em>上传到VPS或者树莓派。这里树莓派选择<code>Armhf</code>架构的安装包。    </p><p>树莓派输入<code>sudo apt-get install wget</code>,VPS输入<code>yum install wget</code>安装<em>wget</em> </p><p>以树莓派为例，输入以下命令下载<code>Emby</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://file.ourfor.top/<span class="built_in">source</span>/ourfor/emby-server-deb_4.0.1.0_armhf.deb</span><br></pre></td></tr></table></figure></p><p>由于伟大的中国长城防火墙（GFW）de缘故，可能官网提供的下载地址下载没有速度，我这里上传到七牛云。版本均为<code>3.3.0.3</code></p><p>下面的<code>deb安装包</code>仅支持Debian系的（包括Ubuntu）系统，而Redhat系的（包括CentOS）则使用docker镜像，因为官网没有提供<code>rpm安装包</code></p><p>树莓派:<code>wget https://file.ourfor.top/source/ourfor/emby-server-deb_4.0.1.0_armhf.deb</code><br>VPS:<code>wget https://file.ourfor.top/source/ourfor/emby-server-deb_4.0.1.0_amd64.deb</code></p><p>由于下载的是安装包，安装时肯定存在依赖问题。VPS需要安装<code>dpkg</code>，<code>apt install dpkg</code></p><p>尝试安装：   </p><p>树莓派：<code>dpkg -i emby-server-deb_3.3.0.3_armhf.deb</code><br>Debian系VPS：<code>dpkg -i emby-server-deb_3.3.0.3_amd64.deb</code></p><p>如果安装失败，解决依赖问题：  </p><p>树莓派：<code>sudo apt-get install -f</code><br>Debian系VPS：<code>sudo apt-get install -f</code></p><p>修复依赖后再次安装就行来。  </p><p>Redhat系的（包括CentOS）：<br>拉取镜像：   </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull emby/embyserver:latest</span><br></pre></td></tr></table></figure><p>运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">    --volume /path/to/programdata:/config \ <span class="comment"># This is mandatory</span></span><br><span class="line">    --volume /path/to/share1:/mnt/share1 \ <span class="comment"># To mount a first share</span></span><br><span class="line">    --volume /path/to/share2:/mnt/share2 \ <span class="comment"># To mount a second share</span></span><br><span class="line">    --device /dev/dri/renderD128 \ <span class="comment"># To mount a render node for VAAPI</span></span><br><span class="line">    --publish 8096:8096 \ <span class="comment"># To expose the HTTP port</span></span><br><span class="line">    --publish 8920:8920 \ <span class="comment"># To expose the HTTPS port</span></span><br><span class="line">    --env UID=1000 \ <span class="comment"># The UID to run emby as (default: 2)</span></span><br><span class="line">    --env GID=100 \ <span class="comment"># The GID to run emby as (default 2)</span></span><br><span class="line">    --env GIDLIST=100 \ <span class="comment"># A comma-separated list of additional GIDs to run emby as (default: 2)</span></span><br><span class="line">    emby/embyserver:latest</span><br></pre></td></tr></table></figure><p>升级<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull emby/embyserver:latest</span><br></pre></td></tr></table></figure></p><p>当然你也可以使用第三方镜像</p><p>安装完毕后，打开<code>http://localhost:8096</code>,这里的<code>localhost</code>是ip地址，VPS填写公网IP，树莓派填写局域网IP。</p>]]></content>
      
      
      <categories>
          
          <category> 云播 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Xware </tag>
            
            <tag> Docker </tag>
            
            <tag> Emby </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VPS搭建Shadowsocks实现科学上网</title>
      <link href="/2018/02/22/VPS%E6%90%AD%E5%BB%BAShadowsocks%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
      <url>/2018/02/22/VPS%E6%90%AD%E5%BB%BAShadowsocks%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>最近很多免费的vpn软件都失效了，之前有用过蓝灯、FreeVPN之类的科学上网的软件，这类软件虽然免费，但是安全性较低、连接速度比较慢。油管视频基本看不了，有时还连接失败。好在最近亚马逊云（AWS）、谷歌云（Google Cloud）等虚拟主机厂商都推出了免费VPS的活动，如果你有信用卡你可以去AWS和Google Cloud上面去看看，AWS提供一年的免费云主机，Google Clou赠送的金额足够你的VPS跑半年，然而由于信用卡的缘故，这两个我都没用，想想也不现实天底下哪有这么大免费午餐，不然别人还不得亏死，还是老老实实买个VPS吧，推荐搬瓦工和Vultr他家的VPS，这两家现在都支持支付宝付款，并且都比较便宜。<br><a id="more"></a>  </p><h2 id="选购云主机（VPS）"><a href="#选购云主机（VPS）" class="headerlink" title="选购云主机（VPS）"></a>选购云主机（VPS）</h2><ul><li><a href="https://bandwagonhost.com/" target="_blank" rel="noopener">搬瓦工</a></li><li><a href="https://www.vultr.com/?ref=7812582-4F" target="_blank" rel="noopener">Vultr</a><br>目前<code>搬瓦工</code>最低的套餐-<code>$19.9/年 10G VPS</code>已经售坠了，<code>Vultr</code>最低套餐为<code>$2.50/月</code>目前还有，通过我的邀请码注册<code>Vultr</code>应该会额外赠送$3,<a href="https://www.vultr.com/?ref=7812582-4F" target="_blank" rel="noopener">Vultr</a>。如果你在搬瓦工上面购买VPS的话，它那里有KVM和OpenVZ两种类型的主机，选KVM，还是OpenVZ？这个问题对新手来说没有太大意义。一句话来说：想折腾的选KVM，想买便宜货的选OpenVZ，但从业界大趋势来看，建议购买虚拟化程度更高的KVM方案，而<code>Vultr</code>上面只有<code>KVM</code>类型的。 </li></ul><h3 id="OpenVZ的优势："><a href="#OpenVZ的优势：" class="headerlink" title="OpenVZ的优势："></a>OpenVZ的优势：</h3><ul><li>IPv6支持</li><li>更好的CPU性能</li></ul><h3 id="KVM的优势："><a href="#KVM的优势：" class="headerlink" title="KVM的优势："></a>KVM的优势：</h3><ul><li>完全虚拟化</li><li>自定义内核支持（BBR等）</li><li>Docker支持</li><li>更好的隔离</li><li>提高网络吞吐量</li></ul><p>（SSR加速可以使用BBR，迅雷远程下载等需要Docker）</p><p>都以最低配置进行比较：</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">SSD</th><th style="text-align:center">ECC RAM</th><th style="text-align:center">带宽</th><th style="text-align:center">中央处理器</th><th style="text-align:center">价钱</th></tr></thead><tbody><tr><td style="text-align:center">Vultr</td><td style="text-align:center">20 GB固态硬盘</td><td style="text-align:center">512 MB</td><td style="text-align:center">500 GB</td><td style="text-align:center">1x Intel Xeon</td><td style="text-align:center">$2.50/月</td></tr><tr><td style="text-align:center">搬瓦工</td><td style="text-align:center">10 GB固态硬盘</td><td style="text-align:center">512 MB</td><td style="text-align:center">500 GB</td><td style="text-align:center">1x Intel Xeon</td><td style="text-align:center">$19.9/年</td></tr></tbody></table><p>其中<code>Vultr</code>是以每小时收费的，<code>搬瓦工</code>支持30天退款，</p><p><img src="https://file.ourfor.top/source/ourfor/VPS%E6%90%AD%E5%BB%BAShadowsocks%E5%AE%9E%E7%8E%B0%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91-1.png"></p><p>我是在<code>Vultr</code>上面的配置的主机，注册$10,关注官方<code>Twtter</code>获得<code>$3</code>。  </p><p><img src="https://www.vultr.com/media/banner_1.png">    </p><p>选一个你认为合适的厂商购买云主机，部署地点最好选择美国西海岸距离中国近的，这样延迟比较低，比如<code>洛杉矶</code>这些地方，系统最好选择<code>CentOS</code> 、<code>Ubuntu</code>这两种，<code>CentOS</code>最好选择<code>6</code>，因为<code>7</code>有防火墙需要额外设置。下面我以<code>Vultr</code>上面的<code>CentOS 6 x64</code>为例搭<code>Shadowsocks</code>.</p><h2 id="开始搭建SSR"><a href="#开始搭建SSR" class="headerlink" title="开始搭建SSR"></a>开始搭建SSR</h2><h3 id="ssh连接VPS"><a href="#ssh连接VPS" class="headerlink" title="ssh连接VPS"></a>ssh连接VPS</h3><ul><li>Windows下使用<code>xshell</code>或者<code>putty</code>来连接</li><li>Linux和macOS下直接在终端连接，用法：<code>ssh root@ip_address</code>其中<code>root</code>是用户名，一般是<code>root</code>,端口不更改就是<code>22</code>,<code>ip_address</code>是主机的<code>外网ip</code></li></ul><p>首先，更改<code>root</code>密码，ssh连接主机后输入以下命令：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd root</span><br></pre></td></tr></table></figure><p>改好密码后下载<code>doub.io</code>的一键安装脚本，键入以下指令即可，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://softs.fun/Bash/ssr.sh &amp;&amp; chmod +x ssr.sh &amp;&amp; bash ssr.sh</span><br></pre></td></tr></table></figure><p>它会下载<code>ssr.sh</code>这个一键安装脚本，按照提示输入即可，之后如果你想查看用户信息，直接输入<code>bash ssr.sh</code>如果提示没有权限<code>chmod +x ssr.sh</code>加上运行权限就行了，你填写好参数后会在屏幕上面打印出<code>ss</code>和<code>ssr</code>链接地址。  </p><h3 id="SSR客户端下载"><a href="#SSR客户端下载" class="headerlink" title="SSR客户端下载"></a>SSR客户端下载</h3><p>无法到官网下载<code>Shadowsocks</code>(被墙)，可以去<code>github</code>上面下载。  </p><p>客户端下载：</p><ul><li><a href="https://file.ourfor.top/source/ourfor/ssr-win.zip" target="_blank" rel="noopener">Windows</a></li><li><a href="https://letsgofree.net/ssr-download/ssr-android.apk" target="_blank" rel="noopener">Android</a></li><li><a href="https://file.ourfor.top/source/ourfor/ssr-mac.dmg" target="_blank" rel="noopener">macOS</a></li><li>IOS 需要在<code>App Store</code>购买<code>Potatso</code>或者<code>Shadowrocket</code>或者<code>Surge</code></li></ul><p>将之前的<code>ss</code>或者<code>ssr</code>地址复制，打开<code>shadowsocks</code>，点击<code>添加</code>选择<code>从剪粘板导入</code>即可。    </p><h3 id="免费SSR分享"><a href="#免费SSR分享" class="headerlink" title="免费SSR分享"></a>免费SSR分享</h3><p>当然也不是每个人都需要经常用到<code>google</code>,尽管<code>百度</code>在做<code>外卖</code>，<code>google</code>在做<code>AI</code>,抛开<code>安全性</code>和<code>稳定性</code>不提,免费的<code>SSR</code>还是有很多人分享的，只不过速度没有那么快罢了。</p><ul><li><a href="https://www.letsgofree.net（需要注册，且每个月只有2G）" target="_blank" rel="noopener">https://www.letsgofree.net（需要注册，且每个月只有2G）</a></li><li><a href="https://doub.bid/sszhfx/" target="_blank" rel="noopener">https://doub.bid/sszhfx/</a></li></ul>        <div id="aplayer-DpxGvjhP" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-DpxGvjhP"),            narrow: false,            autoplay: true,            showlrc: false,            music: {              title: "没离开过",              author: "张韶涵",              url: "https://file.ourfor.top/source/ourfor/%E5%BC%A0%E9%9F%B6%E6%B6%B5-%E6%BC%AB%E6%AD%A5%E4%BA%91%E7%AB%AF.flac",              pic: "https://gss0.bdstatic.com/94o3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike272%2C5%2C5%2C272%2C90/sign=6ed5142a95510fb36c147fc5b85aa3f0/8326cffc1e178a8231192533fd03738da977e878.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script>]]></content>
      
      
      <categories>
          
          <category> VPS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SSR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown插入视频音频</title>
      <link href="/2018/02/20/Markdown%E6%8F%92%E5%85%A5%E8%A7%86%E9%A2%91%E9%9F%B3%E9%A2%91/"/>
      <url>/2018/02/20/Markdown%E6%8F%92%E5%85%A5%E8%A7%86%E9%A2%91%E9%9F%B3%E9%A2%91/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>对于部署在代码托管网站上面的静态博客，我们使用Markdown语法编辑文章，对于插入图片、视频和音频，我们不能安装WordPress或者Office办公套件里面那套来，因为这个Markdown写的文章是纯文本的，同样我们也不能把图片、视频音频这些文件放在Github、Coding等代码托管网站（因为容量太小了），所以我们可以利用各大音乐、视频网站的外链播放器，当然有些歌曲视频由于版权问题无法生成外链，我们可以将视频、音频的源文件放在七牛云这类网站的对象存储中，生成外链来播放。<br><a id="more"></a>   </p><h2 id="利用网易云音乐"><a href="#利用网易云音乐" class="headerlink" title="利用网易云音乐"></a>利用网易云音乐</h2><p><a href="https://music.163.com/" target="_blank" rel="noopener">网易云音乐</a>中选一首你喜欢的歌，点击生产外链播放器，比如我选的这首李玉刚-刚好遇见你，看了下网址：<a href="https://music.163.com/#/song?id=439915614" target="_blank" rel="noopener">https://music.163.com/#/song?id=439915614</a> ，以及生成的外链播放器：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;iframe <span class="built_in">type</span>=<span class="string">"music"</span> frameborder=<span class="string">"no"</span> border=<span class="string">"0"</span> marginwidth=<span class="string">"0"</span> marginheight=<span class="string">"0"</span> width=330 height=86 src=<span class="string">"//music.163.com/outchain/player?type=2&amp;id=439915614&amp;auto=1&amp;height=66"</span>&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><p>每首歌的区别在于这个<code>id</code>,有些歌曲当你点击生成外链播放器时它提示<code>由于版权保护，无法生成外链。</code>这时候你就可以替换这个<code>id</code>来打破这个限制。    </p><iframe type="music" frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=440241144&auto=1&height=66"></iframe>  <h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>Audio： <a href="https://github.com/grzhan/hexo-tag-aplayer" target="_blank" rel="noopener">hexo-tag-aplayer</a><br>Video： <a href="https://github.com/NextMoe/hexo-tag-dplayer" target="_blank" rel="noopener">hexo-tag-dplayer</a></p><p>进入博客根目录，打开Terminal或者cmd，使用npm安装：  </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-tag-aplayer</span><br><span class="line">npm install hexo-tag-dplayer</span><br></pre></td></tr></table></figure><h3 id="Audio"><a href="#Audio" class="headerlink" title="Audio"></a>Audio</h3><p>根据github项目的说明用法是将下面的代码粘贴到博客文章中你想出现音乐播放器的地方。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125;</span><br></pre></td></tr></table></figure><p>说明：    </p><ul><li><code>title</code> : music title</li><li><code>author</code>: music author</li><li><code>url</code>: music file url</li><li><code>picture_url</code>: optional, music picture url</li><li><code>narrow</code>: optional, narrow style</li><li><code>autoplay</code>: optional, autoplay music, not supported by mobile browsers</li><li><code>width:xxx</code>: optional, prefix width:, player’s width (default: 100%)</li><li><code>lrc:xxx:</code> optional, prefix lrc:, LRC file url      </li></ul>        <div id="aplayer-HHHAKcpN" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-HHHAKcpN"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "Lovey-Dovey",              author: "T-ara",              url: "https://file.ourfor.top/source/ourfor/T-ara-Lovey-Dovey.flac",              pic: "http://img0.c.yinyuetai.com/artist/fan/150810/0/-M-70f069427cca50778df6b121a8bf5a8a_0x0.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script>   <h3 id="Video"><a href="#Video" class="headerlink" title="Video"></a>Video</h3><p>方法和Audio的一样也是粘贴在博客文章中。格式用法：     </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% dplayer key=value ... %&#125;</span><br></pre></td></tr></table></figure><p>github项目上介绍的：<br>key can be    </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">dplayer options:</span><br><span class="line">    <span class="string">'autoplay'</span>, <span class="string">'loop'</span>, <span class="string">'screenshot'</span>, <span class="string">'hotkey'</span>, <span class="string">'mutex'</span>, <span class="string">'dmunlimited'</span> : bool options, use <span class="string">"yes"</span> <span class="string">"y"</span> <span class="string">"true"</span> <span class="string">"1"</span> <span class="string">"on"</span> or just without value to <span class="built_in">enable</span></span><br><span class="line">    <span class="string">'preload'</span>, <span class="string">'theme'</span>, <span class="string">'lang'</span>, <span class="string">'logo'</span>, <span class="string">'url'</span>, <span class="string">'pic'</span>, <span class="string">'thumbnails'</span>, <span class="string">'vidtype'</span>, <span class="string">'suburl'</span>, <span class="string">'subtype'</span>, <span class="string">'subbottom'</span>, <span class="string">'subcolor'</span>, <span class="string">'subcolor'</span>, <span class="string">'id'</span>, <span class="string">'api'</span>, <span class="string">'token'</span>, <span class="string">'addition'</span>, <span class="string">'dmuser'</span> : string arguments</span><br><span class="line">    <span class="string">'volume'</span>, <span class="string">'maximum'</span> : number arguments</span><br><span class="line">container options:</span><br><span class="line">    <span class="string">'width'</span>, <span class="string">'height'</span> : string, used <span class="keyword">in</span> container element style</span><br><span class="line">other:</span><br><span class="line">    <span class="string">'code'</span> : value of this key will be append to script tag</span><br></pre></td></tr></table></figure><p>以及例子： </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% dplayer <span class="string">"url=http://devtest.qiniudn.com/若能绽放光芒.mp4"</span> <span class="string">"addition=https://dplayer.daoapp.io/bilibili?aid=4157142"</span> <span class="string">"api=http://dplayer.daoapp.io"</span> <span class="string">"pic=http://devtest.qiniudn.com/若能绽放光芒.png"</span> <span class="string">"id=9E2E3368B56CDBB4"</span> <span class="string">"loop=yes"</span> <span class="string">"theme=#FADFA3"</span> <span class="string">"autoplay=false"</span> <span class="string">"token=tokendemo"</span> %&#125;</span><br><span class="line">&#123;% dplayer <span class="string">"url=http://devtest.qiniudn.com/若能绽放光芒.mp4"</span> <span class="string">"addition=https://dplayer.daoapp.io/bilibili?aid=4157142"</span> <span class="string">"api=http://dplayer.donot.help/dplayerpy"</span> <span class="string">"pic=http://devtest.qiniudn.com/若能绽放光芒.png"</span> <span class="string">"id=2622668"</span> <span class="string">"loop=yes"</span> <span class="string">"theme=#FADFA3"</span> <span class="string">"autoplay=false"</span> <span class="string">"width=233px"</span> %&#125;</span><br><span class="line">&#123;% dplayer <span class="string">'url=some.mp4'</span> <span class="string">"id=someid"</span> <span class="string">"api=https://api.prprpr.me/dplayer/"</span> <span class="string">"addition=/some.json"</span> <span class="string">'code=player.on("loadstart",function()&#123;console.log("loadstart")&#125;)'</span> <span class="string">"autoplay"</span> %&#125;</span><br></pre></td></tr></table></figure><div id="dplayer3" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer3"),"theme":"#FADFA3","loop":true,"video":{"url":"https://file.ourfor.top/source/ourfor/T-ara%20-%20TIAMO.mp4","pic":"http://img0.c.yinyuetai.com/artist/fan/150810/0/-M-70f069427cca50778df6b121a8bf5a8a_0x0.jpg"},"danmaku":{"id":"9E2E3368B56CDBB4","api":"http://dplayer.daoapp.io","token":"tokendemo"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script>   <div id="dplayer4" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer4"),"theme":"#FADFA3","loop":true,"video":{"url":"https://file.ourfor.top/source/ourfor/T-ara%20-%20%EC%99%84%EC%A0%84%20%EB%AF%B8%EC%B3%A4%EB%84%A4%20%28So%20Crazy%29.mp4","pic":"http://img0.c.yinyuetai.com/artist/fan/150810/0/-M-70f069427cca50778df6b121a8bf5a8a_0x0.jpg"},"danmaku":{"id":"9E2E3368B56CDBB4","api":"http://dplayer.daoapp.io","token":"tokendemo"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script>]]></content>
      
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派系统整理</title>
      <link href="/2018/02/07/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%B3%BB%E7%BB%9F%E6%95%B4%E7%90%86/"/>
      <url>/2018/02/07/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%B3%BB%E7%BB%9F%E6%95%B4%E7%90%86/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Raspberry Pi是一款针对电脑业余爱好者、教师、小学生以及小型企业等用户的迷你电脑，预装Linux系统，体积仅信用卡大小，搭载ARM架构处理器，运算性能和智能手机相仿。<br>在接口方面，Raspberry Pi提供了可供键鼠使用的USB接口，此外还有快速以太网接口、SD卡扩展接口以及1个HDMI高清视频输出接口，可与显示器或者TV相连,目前树莓派的系统比较多大概分为<code>Linux</code>和<code>Android</code>两类（除了那个假的Windows10），可玩性比较高，下面整理了一下好用的系统。<br><a id="more"></a></p><!--<table class="table">    <tr>        <th align="center">微型计算机</th>        <th align="center">游戏机</th>        <th align="center">影音盒子</th>        <th align="center">音响播放器</th>        <th align="center">路由器</th>        <th align="center">NAS</th>    </tr>    <tr>        <td align="center">Raspbian,Ubuntu MATE,Ubuntu Core,Windows 10 IoT Core,DietPi,Flint OS</td>        <td align="center">Lakka,Recalbox,RetroPie</td>        <td align="center">OSMC,emteria.OS</td>        <td align="center">Runeaudio</td>        <td align="center">LEDE,OpenWrt</td>        <td align="center">openmediavault</td>    </tr></table>--><figure class="image-box">                <img src="./system.png" alt="树莓派系统整理" title class>                <p>树莓派系统整理</p>            </figure><ul><li><a href="https://www.raspberrypi.org/downloads/raspbian/" target="_blank" rel="noopener">Raspbian</a></li><li><a href="https://ubuntu-mate.org/raspberry-pi/" target="_blank" rel="noopener">Ubuntu MATE</a></li><li><a href="https://developer.ubuntu.com/core/get-started/raspberry-pi-2-3" target="_blank" rel="noopener">Ubuntu Core</a></li><li><a href="https://developer.microsoft.com/en-us/windows/iot/getstarted" target="_blank" rel="noopener">Windows 10 IoT Core</a></li><li><a href="http://www.dietpi.com" target="_blank" rel="noopener">DietPi</a>  </li><li><a href="https://flintos.com/" target="_blank" rel="noopener">Flint OS</a></li><li><a href="http://www.lakka.tv" target="_blank" rel="noopener">Lakka</a></li><li><a href="https://www.recalbox.com" target="_blank" rel="noopener">Recalbox</a></li><li><a href="https://retropie.org.uk" target="_blank" rel="noopener">RetroPie</a></li><li><a href="https://osmc.tv" target="_blank" rel="noopener">OSMC</a></li><li><a href="https://emteria.com" target="_blank" rel="noopener">emteria.OS</a></li><li><a href="http://www.runeaudio.com" target="_blank" rel="noopener">Runeaudio</a></li><li><a href="http://www.openmediavault.org" target="_blank" rel="noopener">openmediavault</a></li><li><a href="https://openwrt.org" target="_blank" rel="noopener">OpenWrt</a>    </li></ul>        <div id="aplayer-UGCBOARc" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-UGCBOARc"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "Lovey-Dovey",              author: "T-ara",              url: "https://file.ourfor.top/source/ourfor/T-ara-Lovey-Dovey.flac",              pic: "http://img0.c.yinyuetai.com/artist/fan/150810/0/-M-70f069427cca50778df6b121a8bf5a8a_0x0.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script>]]></content>
      
      
      
        <tags>
            
            <tag> RasPi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派刷LEDE</title>
      <link href="/2018/01/23/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%B7LEDE/"/>
      <url>/2018/01/23/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%B7LEDE/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>树莓派是一个卡片大小的微型电脑，价格在100~300以内，之前再小米商城看了看最新款的小米路由器和小米盒子（小米盒子和小米路由器确实不错）不过我手头有一个树莓派3B，最近闲来无事，就去OpenWrt上面看了看，好像还没有正式适配树莓派3B，不过它的衍生系统LEDE，于是乎就开始刷LEDE了。<br><a id="more"></a></p><h1 id="Raspberry-pi-3B刷LEDE"><a href="#Raspberry-pi-3B刷LEDE" class="headerlink" title="Raspberry pi 3B刷LEDE"></a>Raspberry pi 3B刷LEDE</h1><h2 id="下载最新开源镜像"><a href="#下载最新开源镜像" class="headerlink" title="下载最新开源镜像"></a>下载最新开源镜像</h2><h3 id="LEDE项目官网"><a href="#LEDE项目官网" class="headerlink" title="LEDE项目官网"></a>LEDE项目官网</h3><p><a href="https://lede-project.org/zh/start" target="_blank" rel="noopener">https://lede-project.org/zh/start</a><br>你可以下载源码自己编译，也可以下载编译好的固件。LEDE也是有不少优点的：</p><ul><li>可扩展性</li><li>高安全性</li><li>高性能、高稳定性</li><li>强大的社区支持</li><li>开源/无额外支出<h3 id="支持的硬件"><a href="#支持的硬件" class="headerlink" title="支持的硬件"></a>支持的硬件</h3><a href="https://lede-project.org/toh/start" target="_blank" rel="noopener">https://lede-project.org/toh/start</a><br><img src="https://file.ourfor.top/source/ourfor/Raspberry%20pi%203b%E5%88%B7LEDE-1.png"><br>目前小米路由器有三款可以刷LEDE，不过似乎没有必要，因为小米路由器的系统本身就是基于OpenWrt定制的，并且配合小米WIFI客户端使用体验还是非常棒的。树莓派目前所有的型号都支持LEDE，不过如果你真要用树莓派做路由器使用，建议你买几个USB网卡，不然这自带的无线网卡发射的信号可没那么强。    </li></ul><table><thead><tr><th style="text-align:center">0</th><th style="text-align:center">型号</th><th style="text-align:center">WiKi网址</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">Xiaomi mini</td><td style="text-align:center"><a href="https://wiki.openwrt.org/toh/xiaomi/mini" target="_blank" rel="noopener">https://wiki.openwrt.org/toh/xiaomi/mini</a></td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">Xiaomi   MiWiFi Nano</td><td style="text-align:center"><a href="https://wiki.openwrt.org/toh/xiaomi/nano" target="_blank" rel="noopener">https://wiki.openwrt.org/toh/xiaomi/nano</a></td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">Xiaomi   MiWiFi 3G</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">Raspberry Pi A</td><td style="text-align:center"><a href="https://wiki.openwrt.org/toh/raspberry_pi_foundation/raspberry_pi" target="_blank" rel="noopener">https://wiki.openwrt.org/toh/raspberry_pi_foundation/raspberry_pi</a></td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">Raspberry Pi B</td><td style="text-align:center"><a href="https://wiki.openwrt.org/toh/raspberry_pi_foundation/raspberry_pi" target="_blank" rel="noopener">https://wiki.openwrt.org/toh/raspberry_pi_foundation/raspberry_pi</a></td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">Raspberry Pi 3B</td><td style="text-align:center"></td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">Raspberry Pi B+</td><td style="text-align:center"><a href="https://wiki.openwrt.org/toh/raspberry_pi_foundation/raspberry_pi" target="_blank" rel="noopener">https://wiki.openwrt.org/toh/raspberry_pi_foundation/raspberry_pi</a></td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">Raspberry Pi 2B</td><td style="text-align:center"><a href="https://wiki.openwrt.org/toh/raspberry_pi_foundation/raspberry_pi" target="_blank" rel="noopener">https://wiki.openwrt.org/toh/raspberry_pi_foundation/raspberry_pi</a></td></tr><tr><td style="text-align:center">9</td><td style="text-align:center">Raspberry Pi Zero W</td><td style="text-align:center"><a href="https://wiki.openwrt.org/toh/raspberry_pi_foundation/raspberry_pi" target="_blank" rel="noopener">https://wiki.openwrt.org/toh/raspberry_pi_foundation/raspberry_pi</a></td></tr></tbody></table><p>LEDE支持的设备的固件都可以在这里下载：<a href="https://lede-project.org/toh/views/toh_fwdownload" target="_blank" rel="noopener">https://lede-project.org/toh/views/toh_fwdownload</a><br>由于我用的是树莓派3B，所以这里提供最新（20180123）的固件：<a href="https://downloads.lede-project.org/releases/17.01.4/targets/brcm2708/bcm2710/lede-17.01.4-brcm2708-bcm2710-rpi-3-ext4-sdcard.img.gz" target="_blank" rel="noopener">https://downloads.lede-project.org/releases/17.01.4/targets/brcm2708/bcm2710/lede-17.01.4-brcm2708-bcm2710-rpi-3-ext4-sdcard.img.gz</a><br>这个固件大小为8.5m，在macOS中双击打开会得到一个大小为297.8m后缀名为img的镜像文件；在Windows下面用RAR解压打开也是如此<br><img src="https://file.ourfor.top/source/ourfor/Raspberry%20pi%203b%E5%88%B7LEDE-2.png"></p><h2 id="烧写镜像到SD卡"><a href="#烧写镜像到SD卡" class="headerlink" title="烧写镜像到SD卡"></a>烧写镜像到SD卡</h2><h3 id="Windows平台"><a href="#Windows平台" class="headerlink" title="Windows平台"></a>Windows平台</h3><p>Windows下面可以用诸如软碟通,Refuse等软件一键烧写，方法比较简单，这里就不详细介绍了。提供几个优质软件的官方网站：<br>Refuse（Windows，Ubuntu）：<a href="http://rufus.akeo.ie" target="_blank" rel="noopener">http://rufus.akeo.ie</a><br>Etcher（Windows，Linux，macOS）：<a href="https://etcher.io" target="_blank" rel="noopener">https://etcher.io</a></p><h3 id="Linux-macOS平台"><a href="#Linux-macOS平台" class="headerlink" title="Linux,macOS平台"></a>Linux,macOS平台</h3><h4 id="dd命令烧写镜像"><a href="#dd命令烧写镜像" class="headerlink" title="dd命令烧写镜像"></a>dd命令烧写镜像</h4><p>在Linux/macOS中打开Terminal（终端），下面以macOS为例，在Dock中找到启动台-其他-终端。<br>步骤：1,卸载SD卡<br>     2,烧写镜像<br>在终端中输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">diskutil list  <span class="comment">#列出当前系统挂载的存储设备</span></span><br><span class="line">```    </span><br><span class="line">&lt;img src=<span class="string">"https://file.ourfor.top/source/ourfor/Raspberry%20pi%203b%E5%88%B7LEDE-3.png"</span> /&gt;</span><br><span class="line">卸载SD卡的所有分区：</span><br><span class="line">    </span><br><span class="line">```bash</span><br><span class="line">diskutil unmountDisk diskx   <span class="comment">#diskx是系统挂载SD卡的路径</span></span><br><span class="line">```     </span><br><span class="line">烧写镜像，任何情况下你都可以将文件直接拖到Terminal中，Terminal将会输出文件的绝对路径 ，例如我将文件放在桌面，将它拖进终端，那么它显示的路径就会是       </span><br><span class="line">     </span><br><span class="line">```bash</span><br><span class="line">/Users/zip/Desktop/lede-17.01.4-brcm2708-bcm2710-rpi-3-ext4-sdcard.img</span><br><span class="line">```     </span><br><span class="line">dd命令用法：Ubuntu和macOS中在更改系统设置时要加sudo，回车后需要输入用户密码，这样即使没有超级用户的权限，你也可以执行一些或者全部的权限</span><br><span class="line">   </span><br><span class="line">```bash</span><br><span class="line">sudo dd <span class="keyword">if</span>=&lt;...&gt; of=&lt;...&gt; bs=1m</span><br><span class="line">```     </span><br><span class="line">- <span class="keyword">if</span>（input file）=输入文件、设备的绝对路径；</span><br><span class="line">- of（output file）=输出文件、设备的绝对路径；</span><br><span class="line">- bs（block size）=1m 一个操作周期的大小；</span><br><span class="line"></span><br><span class="line">我输入的命令是：</span><br><span class="line"></span><br><span class="line">```bash</span><br><span class="line"> sudo dd <span class="keyword">if</span>=/Users/zip/Desktop/lede-17.01.4-brcm2708-bcm2710-rpi-3-ext4-sdcard.img of=/dev/disk4 bs=1m</span><br></pre></td></tr></table></figure><p><img src="https://file.ourfor.top/source/ourfor/Raspberry%20pi%203b%E5%88%B7LEDE-4.png"><br>回车输入管理员密码，回车确认就开始烧写，在烧写过程中系统不会有任何提示。<br><img src="https://file.ourfor.top/source/ourfor/Raspberry%20pi%203b%E5%88%B7LEDE-5.png"><br>看到上面提示说明烧写完成了。</p><h2 id="使用开源软件Etcher"><a href="#使用开源软件Etcher" class="headerlink" title="使用开源软件Etcher"></a>使用开源软件Etcher</h2><p>如果你觉得上面的命令比较麻烦，这里倒是有一些软件可以帮你一键刷写磁盘镜像，优点就是简洁、安全、美观和快捷，缺点就是效率比较低，而且只能烧写整个磁盘。<br>Etcher官网：<a href="https://etcher.io" target="_blank" rel="noopener">https://etcher.io</a><br>Etcher支持主流PC平台<br><img src="https://file.ourfor.top/source/ourfor/Etcher.png"><br>左边选择镜像，右边点击就可以烧写镜像了。</p><h2 id="设置树莓派"><a href="#设置树莓派" class="headerlink" title="设置树莓派"></a>设置树莓派</h2><p>由于LEDE默认不开启WiFi，这时候我们可以用网线将树莓派和电脑连接。</p><ul><li>step1<br>确保电脑与树莓派通过网线连接好，打开<code>浏览器</code>在地址栏输入<code>192.168.1.1</code>进入路由器的web管理界面，默认root用户是没有密码的，直接登录，登录后会要求你设置密码，等你设置完密码后，你就可以通过ssh登录树莓派了。</li><li>step2<br>打开WiFi</li><li>step3<br>安装中文语言包</li></ul><h2 id="关于树莓派（Raspberry-pi）"><a href="#关于树莓派（Raspberry-pi）" class="headerlink" title="关于树莓派（Raspberry pi）"></a>关于树莓派（Raspberry pi）</h2><p>Raspberry Pi是一款针对电脑业余爱好者、教师、小学生以及小型企业等用户的迷你电脑，预装Linux系统，体积仅信用卡大小，搭载ARM架构处理器，运算性能和智能手机相仿。<br>在接口方面，Raspberry Pi提供了可供键鼠使用的USB接口，此外还有快速以太网接口、SD卡扩展接口以及1个HDMI高清视频输出接口，可与显示器或者TV相连</p><p>我的是Raspberry 3b。<br><img src="https://file.ourfor.top/source/ourfor/%E6%A0%91%E8%8E%93%E6%B4%BE1.jpg"><br><img src="https://file.ourfor.top/source/ourfor/%E6%A0%91%E8%8E%93%E6%B4%BE2.jpg"><br><img src="https://file.ourfor.top/source/ourfor/%E6%A0%91%E8%8E%93%E6%B4%BE3.jpg"></p><h2 id="关于OpenWrt"><a href="#关于OpenWrt" class="headerlink" title="关于OpenWrt"></a>关于OpenWrt</h2><p>鉴于开源软件在国内的发展态势，目前国内有基于OpenWRT改进而来的OpenWRT-DreamBox。<br>开发Dreambox的lintel之后开发了基于Barrier Breaker的PandoraBox。<br>这个版本的OpenWRT集成了很多常用功能（包括脱机下载等），使用了改进过的较为稳定的硬件驱动，通过这个版本的OpenWRT可以把路由器的功能发挥得淋漓尽致，同时也保证路由器的稳定运行。</p><h2 id="更多系统支持"><a href="#更多系统支持" class="headerlink" title="更多系统支持"></a>更多系统支持</h2><p>树莓派除了可以当路由器来用，还可以当盒子（影音中心）、计算机来用<br>官网也提供了不少系统下载<br>Raspberry pi官网：<a href="https://www.raspberrypi.org" target="_blank" rel="noopener">https://www.raspberrypi.org</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个性化clover启动项</title>
      <link href="/2018/01/13/%E4%B8%AA%E6%80%A7%E5%8C%96clover%E5%90%AF%E5%8A%A8%E9%A1%B9/"/>
      <url>/2018/01/13/%E4%B8%AA%E6%80%A7%E5%8C%96clover%E5%90%AF%E5%8A%A8%E9%A1%B9/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>clover启动时会有一些启动项，有些我们不常用，可以编辑clover的配置文件<code>config.plist</code>（/ESP/EFI/CLOVER/config.plist）来隐藏，可能你想个性化这些启动项的名称和图标，或者默认启动哪个Volumes，期待这篇文章对你有所帮助。<br><a id="more"></a><br>  首先用<code>clover configurator</code>或者diskutil挂载ESP引导分区，同时用这个<code>clover configurator</code>打开/ESP/EFI/CLOVER/config.plist  </p><p><img src="https://file.ourfor.top/source/ourfor/%E4%B8%AA%E6%80%A7%E5%8C%96clover%E5%90%AF%E5%8A%A8%E9%A1%B9-clover%20configurator.png"></p><p>打开就行了，在工具的左边，找到<code>boot</code>选项卡，其中<code>Default boot volume</code>是默认启动分区，你可以填写分区的名称或者其他的类似<code>LastBootedVolume</code>（这些在clover的帮助文档中找到）<br>勾选<code>NoearlyProgress</code>可以关机clover的欢迎界面  </p><p><img src="https://file.ourfor.top/source/ourfor/%E4%B8%AA%E6%80%A7%E5%8C%96clover%E5%90%AF%E5%8A%A8%E9%A1%B9-boot%20volume.png"></p><p>在左边的<code>GUI</code>选项卡中，<code>Hide Volume</code>中填写你想隐藏的启动项；<br><img src="https://file.ourfor.top/source/ourfor/%E4%B8%AA%E6%80%A7%E5%8C%96clover%E5%90%AF%E5%8A%A8%E9%A1%B9-hide%20volume.png"><br>在<code>Custom Entries</code>中添加：<br><img src="https://file.ourfor.top/source/ourfor/%E4%B8%AA%E6%80%A7%E5%8C%96clover%E5%90%AF%E5%8A%A8%E9%A1%B9-macOS.png"><br>其中macOs中只要在<code>Volume</code>中选择macOS安装分区，类型选择OS X就行，而Windows和Ubuntu则不同，<code>Volume</code>中选择Esp分区，<code>Path</code>中填写启动项的绝对路径，类型选择对应的Windows和Ubuntu。<br><img src="https://file.ourfor.top/source/ourfor/%E4%B8%AA%E6%80%A7%E5%8C%96clover%E5%90%AF%E5%8A%A8%E9%A1%B9-ubuntu.png"><br><img src="https://file.ourfor.top/source/ourfor/%E4%B8%AA%E6%80%A7%E5%8C%96clover%E5%90%AF%E5%8A%A8%E9%A1%B9-windows.png">    </p><p>勾选<code>Title</code>，填写的名称就是你想个性化的启动项的名称，<code>Image</code>中填写图标的绝对路径，如果不想个性化启动项图标可以不用管它，个性化教程大概就是这样，如果有疑问可以联系我。   </p><p>一首周二珂的告白气球：</p><iframe type="music" frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=440241144&auto=1&height=66"></iframe>  ]]></content>
      
      
      <categories>
          
          <category> clover </category>
          
      </categories>
      
      
        <tags>
            
            <tag> clover </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开启hidpi</title>
      <link href="/2018/01/01/%E5%BC%80%E5%90%AFhidpi/"/>
      <url>/2018/01/01/%E5%BC%80%E5%90%AFhidpi/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>当你顺利安装好黑果之后是否感觉系统字体太小，而当你更改更低的分辨率是又无法忍受字体发虚、界面模糊。开启hidpi能够让你在使用低分辨率的同时能够享受高清。<br><a id="more"></a></p><h2 id="获取两个重要参数"><a href="#获取两个重要参数" class="headerlink" title="获取两个重要参数"></a>获取两个重要参数</h2><h3 id="获取DisplayVendorID和DisplayProductID"><a href="#获取DisplayVendorID和DisplayProductID" class="headerlink" title="获取DisplayVendorID和DisplayProductID"></a>获取DisplayVendorID和DisplayProductID</h3><p>在Terminal中键入这两条命令：   </p><pre><code>ioreg -l|grep &quot;DisplayVendorID&quot;ioreg -l|grep &quot;DisplayProductID&quot;</code></pre><p><img src="https://file.ourfor.top/source/ourfor/%E5%BC%80%E5%90%AFHidpi-2.png"></p><p>此时屏幕上会输出两个十进制数，如图，我得到的两个十进制数分别是：<code>2533</code>和<code>1719</code><br>接下来就是将这两个十进制数转化为十六进制数，我们可以使用计算器来转化，打开<code>启动台</code>-<code>计算器</code><br>点击<code>显示</code>-<code>编程型</code><br><img src="https://file.ourfor.top/source/ourfor/%E5%BC%80%E5%90%AFHidpi-1.png"><br>分别刚才获取的两个<code>ID</code>输入,然后点击16，就转化为十六进制了。  </p><p><img src="https://file.ourfor.top/source/ourfor/%E5%BC%80%E5%90%AFHidpi-3.png"><br><img src="https://file.ourfor.top/source/ourfor/%E5%BC%80%E5%90%AFHidpi-4.png"><br>记住这两个16进制数。接下来需要用到。</p><h2 id="生成配置显示器文件"><a href="#生成配置显示器文件" class="headerlink" title="生成配置显示器文件"></a>生成配置显示器文件</h2><p>在<code>Terminal</code>中键入以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/Desktop</span><br><span class="line">mkdir DisplayVendorID-xxxx    //其中“xxxx”是DisplayVendorID的16进制值小写</span><br><span class="line"><span class="built_in">cd</span> DisplayVendorID-xxxx        //进入DisplayVendorID-xxxx目录</span><br><span class="line">touch DisplayProductID-xxxx     //其中“xxxx”是DisplayProductID的16进制值小写</span><br><span class="line">open .                          //Finder中打开</span><br></pre></td></tr></table></figure></p><h3 id="添加分辨率"><a href="#添加分辨率" class="headerlink" title="添加分辨率"></a>添加分辨率</h3><p>在线生成配置文件，添加分辨率，<a href="https://comsysto.github.io/Display-Override-PropertyList-File-Parser-and-Generator-with-HiDPI-Support-For-Scaled-Resolutions/" target="_blank" rel="noopener">在线网址</a></p><p><img src="https://file.ourfor.top/source/ourfor/%E5%BC%80%E5%90%AFHidpi-5.png">   </p><p>在右边填写配置信息，左边会生成相应的代码。   </p><ul><li><code>DisplayProductName</code>:可随意填写</li><li><code>DisplayProductID</code>:之前获取的DisplayProductID的16进制数</li><li><code>DisplayVendorID</code>:之前获取的DisplayVendorID的16进制数</li><li><code>Scale Resolutions</code>:所有添加的分辨率</li><li><code>hidpi</code>:勾选即开启该分辨率的hidpi</li></ul><p>添加完毕后，复制左边的代码，编辑之前创建的没有后缀名的<code>DisplayProductID-xxxx</code>的文件（用文本编辑器打开即可）粘贴复制的代码保存，显示器的配置文件就配置好了，接下来只需要将这个文件夹<code>DisplayVendorID-xxxx</code>复制到<code>/System/Library/Displays/Contents/Resources/Overrides/</code>下面（需要输入管理员密码）。     </p><h3 id="打开hidpi"><a href="#打开hidpi" class="headerlink" title="打开hidpi"></a>打开hidpi</h3><p>在<code>Terminal</code>中键入以下命令开启Hidpi<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo defaults write /Library/Preferences/com.apple.windowserver.plist DisplayResolutionEnabled -bool <span class="literal">true</span></span><br></pre></td></tr></table></figure></p><h2 id="使用RDM切换"><a href="#使用RDM切换" class="headerlink" title="使用RDM切换"></a>使用RDM切换</h2><p>github项目地址 <a href="https://github.com/avibrazil/RDM" target="_blank" rel="noopener">RDM</a><br>下载安装后，重启系统打开RDM就可以在状态栏切换分辨率了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> hidpi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>声卡AlC255</title>
      <link href="/2017/12/10/%E5%A3%B0%E5%8D%A1AlC255/"/>
      <url>/2017/12/10/%E5%A3%B0%E5%8D%A1AlC255/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>之前发了小米笔记本air的黑苹果安装教程的帖子，黑苹果总算是安装上去了，可是还有许多问题没有解决,不过无线网卡和蓝牙就不要想了，但是还是要解决上网和声音的问题，声卡驱动不了视频都播放不了，QQ接收一个消息屏幕都会闪一下，总之，体验不大好，经过2个多月的接触，学习，以及在大佬（黑果小兵）的帮助下终于解决了大部分目前一可以解决的问题：<br><a id="more"></a>  </p><ul><li>声卡仿冒：首先感谢大佬的耐心帮助，@黑果小兵 ，仿冒了声卡，编译了声卡驱动。要知道这活可不是一般人能仿冒的，声卡仿冒了，终于不用忍受万能声卡驱动带来的种种不足，例如不能自动切换耳机、耳机有电流声以及声音太小。声卡alc255仿冒成功，注入ID等于27时效果最好，声卡驱动好了以后，是真的好用啊！<br><img src="https://file.ourfor.top/source/ourfor/%E8%BE%93%E5%85%A5.png"><br><img src="https://file.ourfor.top/source/ourfor/%E8%BE%93%E5%87%BA.png"></li></ul><ul><li>亮度调节：群友的帮助和自己爬贴终于解决了亮度调节，可以插上外置鼠标或者键盘在偏好设置-键盘-快捷键-显示器里面设置快捷键，或者直接在偏好设置-显示器里面调节滑块改变亮度，感觉会省电一些吧，反正看起来舒服多了。<br><img src="https://file.ourfor.top/source/ourfor/%E4%BA%AE%E5%BA%A6.png"></li></ul><p>解决了8个苹果和四叶草启动跑代码，并且隐藏了部分不必要的启动项。<br>核心显卡目前完美驱动，有线网卡内建好了，<br><img src="https://file.ourfor.top/source/ourfor/%E7%B3%BB%E7%BB%9F.png"></p><p>好了感觉自己废话好多，别人都是开篇几张图后面全靠编，笔者我也忍不住放几张图出来<br><img src="https://file.ourfor.top/source/ourfor/%E9%9F%B3%E9%A2%91.png"> </p><p>福利来了，最新修改的efi文件<br>下载<br><a href="https://pan.baidu.com/s/1i5L7dS5" target="_blank" rel="noopener">https://pan.baidu.com/s/1i5L7dS5</a></p><p>efi文件怎么替换就不用我多说了吧，尽管我之前也替换出错导致windows启动不了，也正是因为这个学到了不少东西。<br>最后附上大佬的博客：<br>  blog.daliansky.net<br>如果言论不当以及技术问题还请大佬指导</p>]]></content>
      
      
      
        <tags>
            
            <tag> alc255 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ESP分区</title>
      <link href="/2017/10/15/ESP%E5%88%86%E5%8C%BA/"/>
      <url>/2017/10/15/ESP%E5%88%86%E5%8C%BA/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>不少安装黑果的小白应该都遇到一个问题，在抹除磁盘时系统提示空间不足，这时候不少有经验的人会告诉你ESP分区的大小要大于200m，然而ESP分区到底是做什么用的呢？<br><a id="more"></a></p><h2 id="挂载并修改ESP分区"><a href="#挂载并修改ESP分区" class="headerlink" title="挂载并修改ESP分区"></a>挂载并修改ESP分区</h2><p>##挂载系统ESP分区</p><p>###写在前面：<br>众所周知，在绝大部分个人PC中预装的都是Windows系列的操作系统，苹果公司的个人电脑预装的是Mac OS，无论是哪种操作系统都有都有它们的系统分区，其中系统分区中包含保证系统正常运转的必要系统文件，因此一般情况下用户在系统分区中只拥有可读的权限，其实这样是为了防止用户误删文件导致系统崩溃，正常情况下我们没有必要动这些文件，那么什么是ESP分区，ESP分区究竟在开机到正常进入系统用户界面起着什么作用呢？  </p><p>###常见的系统启动方式：<br>以win7为分界线，在win7之前的绝大部分PC都是以传统引导，win7以后一般是uefi引导，究竟支持哪些引导，是由主板决定的，以下是根据uefi引导操作。</p><p>###windows系统下使用命令行挂载<br>首先使用Windows命令挂载ESP分区<br>Windows徽键＋r，在运行框里输入cmd，点击运行即可<br>在命令行中输入以下命令：    </p><pre><code>list disk  //列出当前设备挂载磁盘  select disk 0  //选中磁盘0，注意这里的磁盘是安装系统所在的硬盘  list partition //列出选中磁盘0下的分区  select partition n //n表示esp分区的数字代号  assign letter＝z  //为esp分区分配盘符标识z，这个字母可以根据自己的喜好  exit  //退出命令行  </code></pre><p>此时打开Windows的资源管理器，在我的电脑下面你就可以看见出现了一个z盘，就是我们的系统引导分区，此时你发现你无法用<br>Windows的资源管理器打开esp分区，因为这个分区是受系统保护的，接下来我们就要使用这个软件了explore++；<br>右键explore++，选择以管理员身份运行，这时候将优盘efi文件夹覆盖到系统的esp分区，并且跳过重复文件，接下来利用软件bootice给我们的四叶草添加启动引导，打开bootice，选择uefi，点击修改启动序列，在系统的esp分区中的clover的文件夹下面的CLOVERX64.efi（\EFI\CLOVER\CLOVERX64.efi），并将这个启动项上移到第一启动项，保存好之后，重新开机你就可以看见四叶草的启动界面了。<br><img src="http://img04.sogoucdn.com/app/a/100520146/2c6edb8f7ab62a46b5aa07e62ad14aaa">  </p>]]></content>
      
      
      <categories>
          
          <category> PC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hackintosh </tag>
            
            <tag> 引导 </tag>
            
            <tag> 系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hackintosh(2)</title>
      <link href="/2017/10/12/Hackintosh%EF%BC%882%EF%BC%89/"/>
      <url>/2017/10/12/Hackintosh%EF%BC%882%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="黑苹果安装教程之开始安装"><a href="#黑苹果安装教程之开始安装" class="headerlink" title="黑苹果安装教程之开始安装"></a>黑苹果安装教程之开始安装</h2><h2 id="已经制作好的安装优盘"><a href="#已经制作好的安装优盘" class="headerlink" title="已经制作好的安装优盘"></a>已经制作好的安装优盘</h2><p>如果你按照之前的教程成功制作了黑苹果原版系统安装优盘，那么你会发现你进入Mac安装界面无法格式化Mac安装分区，如果没有制作好安装优盘，那么分区和调整系统esp引导分区依旧是很有必要的，这不仅有利于我们安装Mac，同时也为我们启动多系统提供了便利，相信有不少读者都安装了我们喜爱的Linux的发行版Ubuntu.<br><a id="more"></a></p><h2 id="Mac系统安装分区"><a href="#Mac系统安装分区" class="headerlink" title="Mac系统安装分区"></a>Mac系统安装分区</h2><p>关闭安全启动可以看看大佬的帖子<br>首先，我们要给mac系统分出一个安装盘，进入Windows10系统，打开文件管理，右键我的电脑，打开管理；<br><img src="http://img02.sogoucdn.com/app/a/100520146/95ff9fd401e906499548f90e6ca041c7"><br>单击磁盘工具，右键c盘，</p><p>选择压缩卷，我输入压缩空间量60G，你们可以自行调整;<br><img src="http://img04.sogoucdn.com/app/a/100520146/1c39d2f400c227cc9c14d2255873a6e6"><br>之后打开工具Paragon Hard Disk Manage，将压缩出来的分区格式转化为Apple HFS。软件下载地址：<br><a href="https://pan.baidu.com/s/1geYjoDd" title="下载地址" target="_blank" rel="noopener">https://pan.baidu.com/s/1geYjoDd](https://pan.baidu.com/s/1geYjoDd](https://pan.baidu.com/s/1geYjoDd</a><br><img src="http://img03.sogoucdn.com/app/a/100520146/b7b4fc939461deac70620c82deaeb8f6"><br><img src="http://img01.sogoucdn.com/app/a/100520146/e9f3b83f5f5c11b4a8cfdca0822a6408"><br>这样mac安装盘就分好了，接下来进入苹果安装界面，选择磁盘工具，将我们分好的苹果分区抹掉，格式我是选择APFS或者HFS，如果抹除不成功，一般是笔记本的esp分区太小了，应该要300m以上，如何扩大esp分区，可以看看论坛大佬的贴子，安装教程就到这里，不要忘了把系统的esp分区下的文件夹替换成我的efi文件夹里的，这样的话就不用每次进mac系统前借助优盘的四叶草引导跑代码了，如果不会替换，建议多爬爬贴，论坛里有教程￼￼￼，当然这只是安装好了，只是完成了三分之一，后续更新驱动安装和四叶草界面美化 </p><p>小米笔记本驱动下载：<br><a href="https://pan.baidu.com/s/1skAjk8d" target="_blank" rel="noopener">https://pan.baidu.com/s/1skAjk8d</a><br>这些驱动按照需要安装，安装调节分辨率的软件后在上面状态栏选择调节分辨率，亮度调节也是这样。<br><img src="http://img01.sogoucdn.com/app/a/100520146/4473dadc91a6c4aa4fb70e452f6203e9"></p><p>建议先搞一个pe，以防不测，其次如果要将，efi替换需要使用软件easyuefi为四叶草引导添加启动项，并把四叶草引导调为首选启动项，或者合拼efi分区</p><p>可以看看这些大佬的帖子：<br><a href="http://www.miui.com/thread-7419826-1-1.html" target="_blank" rel="noopener">http://www.miui.com/thread-7419826-1-1.html</a><br><a href="http://www.miui.com/thread-7601066-1-1.html" target="_blank" rel="noopener">http://www.miui.com/thread-7601066-1-1.html</a><br><a href="http://www.miui.com/thread-7574042-1-1.html" target="_blank" rel="noopener">http://www.miui.com/thread-7574042-1-1.html</a><br>女帝镇楼：  </p><p><img src="http://img01.sogoucdn.com/app/a/100520146/d813b2df31168428eca4bb9d33be0066">  </p>]]></content>
      
      
      <categories>
          
          <category> PC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hackintosh </tag>
            
            <tag> 系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hackintosh(1)</title>
      <link href="/2017/10/10/Hackintosh%EF%BC%881%EF%BC%89/"/>
      <url>/2017/10/10/Hackintosh%EF%BC%881%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>这笔记本还是可以的，目前论坛上还没有适配这款新出的笔记本的黑苹果安装教程，不过在我的不懈折腾下总算让我的小米笔记本吃上了黑苹果</p><ul><li><p>需要的工具包括：<strong><em>1</em></strong>.写盘工具  <strong><em>2</em></strong>.原版镜像</p></li><li><p>小米笔记本AIR i7 指纹版安装黑苹果10.13  </p><a id="more"></a>   </li></ul><h2 id="黑苹果安装教程之准备工作"><a href="#黑苹果安装教程之准备工作" class="headerlink" title="黑苹果安装教程之准备工作"></a>黑苹果安装教程之准备工作</h2><p>这款小米笔记本我是816买的，距离今天已经过去差不多两个月了，总体上这笔记本还是可以的，目前论坛上还没有适配这款新出的笔记本的黑苹果安装教程，不过在我的不懈折腾下总算让我的小米笔记本吃上了黑苹果，首先，我是小白，安装成功离不开miui论坛和黑苹果乐园大佬们的无偿帮助，为了让更多小白吃上黑苹果，特写下这篇教程，如有不足还请大佬指教，废话不多说首先放图。<br><img src="http://img02.sogoucdn.com/app/a/100520146/f3bcad69bb4f08ed11046ba2254679ea"><br><img src="http://img03.sogoucdn.com/app/a/100520146/3e7833c5ec09e961532ca2a6a8c7e811"><br><img src="http://img01.sogoucdn.com/app/a/100520146/f2134420c609a29d57d041c81fa6a311">  </p><p>首先是准备工作，下载必须的黑苹果安装镜像，下面是百度云盘的下载地址：<a href="http://pan.baidu.com/s/1kVwxCPL" target="_blank" rel="noopener">http://pan.baidu.com/s/1kVwxCPL</a><br>这个镜像是自带四叶草引导的，下面这个工具是将镜像写入优盘的工具，下载地址是：<br><a href="http://pan.baidu.com/s/1crWkLw" target="_blank" rel="noopener">http://pan.baidu.com/s/1crWkLw</a></p><p>写在前面，安装黑苹果并不完美：<br><strong><em>1</em></strong>.内置intel无线网卡不可用，据说intel无线网卡无解，当然还是希望可以驱动的，不过你也可以用小米随身Wifi或者其他USB无线网卡，前提是要有mac驱动<br><strong><em>2</em></strong>.内置蓝牙不可用<br><strong><em>3</em></strong>.1080p字太小，论坛有开高清显示的教程，我是设置1280x720的，同时开启高清显示，感觉还不错。<br><img src="http://img03.sogoucdn.com/app/a/100520146/9f90200d61c59b5540d8ea6c228f2be9"><br>打开工具transmac，右键以管理员权限运行<br><img src="http://img01.sogoucdn.com/app/a/100520146/231bd7c6d86a7c92691181ee5dc7a969"><br>，如果Windows提示格式化优盘，直接忽略，完成后，右键优盘，选择restret for disk imge,镜像写入完成后，你可以重启笔记本，按F12选择优盘启动，可能要关闭安全启动，按住F2进入BIOS，需要设置一个密码才能关闭安全启动，如果可以选择优盘启动可以直接忽略此步骤，在四叶草引导界面选择Mac，接下来会跑代码，你只需要耐心等待，不一会就回进入安装界面，这时不要安装因为你还没有为苹果系统分出一个安装盘。<br><img src="https://file.ourfor.top/source/ourfor/%E5%AE%89%E8%A3%85%E6%95%99%E7%A8%8B%E6%88%AA%E5%9B%BE%E6%A1%8C%E9%9D%A2.png"><br>准备工作就到这里，本帖持续更新</p><p>女帝镇楼：</p><p><img src="http://img04.sogoucdn.com/app/a/100520146/274e3a4ea2f54bb303360499a92dd737"></p>]]></content>
      
      
      <categories>
          
          <category> PC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hackintosh </tag>
            
            <tag> 系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Excel进阶教程</title>
      <link href="/2017/09/10/Excel%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/"/>
      <url>/2017/09/10/Excel%E8%BF%9B%E9%98%B6%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>同一文件下如何合并相同类型的表格，相信大家对这个问题困惑了很久，如何如何合并这些表格呢？合并之后是否会得到我们想要的表格呢？<br>通常情况下我们如果要使用Excel来合并同一类型的表格，我们一般将每个表格文件打开剪切我们需要的单元格，并一一粘贴到目标表格中，你会发现其中有很多重复的步骤，特别是当表格文件数量相当多的时候，这工作量就很大了，既然重复相同的步骤是麻烦的根源，那么我们为何不把这项工作交给计算机做呢？其实微软公司出品的办公软件Excel中就有这个功能，不过要实现这个功能，我们就要用到“宏”这个东西，简单的说“宏”就是帮你完成重复的操作，如何打开，使用宏呢？<br><a id="more"></a>  </p><p><img src="https://file.ourfor.top/source/ourfor/%E5%AE%8F%E6%9F%A5%E7%9C%8B%E4%BB%A3%E7%A0%81.png"></p><pre><code class="vb"><span class="keyword">Sub</span> Add()  <span class="comment">' 合并当前目录下的所有表格</span>    <span class="keyword">Dim</span> MyPath, MyName, AWbName      <span class="keyword">Dim</span> Wb <span class="keyword">As</span> Workbook, WbN <span class="keyword">As</span> <span class="built_in">String</span>      <span class="keyword">Dim</span> G <span class="keyword">As</span> <span class="built_in">Long</span>    <span class="keyword">Dim</span> Num <span class="keyword">As</span> <span class="built_in">Long</span>      <span class="keyword">Dim</span> BOX <span class="keyword">As</span> <span class="built_in">String</span>      Application.ScreenUpdating = <span class="literal">False</span>    MyPath = ActiveWorkbook.Path    MyName = Dir(MyPath &amp; <span class="string">"\" &amp; "</span>*.xls<span class="string">")</span><span class="string">    AWbName = ActiveWorkbook.Name</span><span class="string">    Num = 0</span><span class="string"></span><span class="string">    Do While MyName &lt;&gt; "</span><span class="string">"</span><span class="string">    If MyName &lt;&gt; AWbName Then</span><span class="string">    Set Wb = Workbooks.Open(MyPath &amp; "</span>\<span class="string">" &amp; MyName)</span><span class="string">    Num = Num + 1</span><span class="string"></span><span class="string">    With Workbooks(1).ActiveSheet _</span><span class="string">    .Cells(.Range("</span>B65536<span class="string">").End(xlUp).Row + 2, 1) = Left(MyName, Len(MyName) - 4)</span><span class="string">    For G = 1 To Sheets.Count</span><span class="string">    Wb.Sheets(G).UsedRange.Copy .Cells(.Range("</span>B65536<span class="string">").End(xlUp).Row + 1, 1)</span><span class="string">    Next</span><span class="string">    WbN = WbN &amp; Chr(13) &amp; Wb.Name</span><span class="string">    Wb.Close False</span><span class="string">    End With</span><span class="string">    End If</span><span class="string">    MyName = Dir</span><span class="string">    Loop</span><span class="string">    Range("</span>B1<span class="string">").Select</span><span class="string">    Application.ScreenUpdating = True</span><span class="string">    MsgBox("</span>共合并了<span class="string">" + Num + "</span>个工作薄下的全部工作表。如下：<span class="string">" + Chr(13) + WbN, vbInformation, "</span>提示<span class="string">")</span><span class="string">End Sub </span></code></pre><p>首先复制代码，然后在文件夹中新建一个表格文件，然后使用Excel打开!<br><img src="https://file.ourfor.top/source/ourfor/%E7%B2%98%E8%B4%B4%E4%BB%A3%E7%A0%81.png"><br>关闭窗口，点击运行&gt;宏   </p><p><img src="https://file.ourfor.top/source/ourfor/%E8%BF%90%E8%A1%8C.png"><br>一会儿就合并好了，但是这个表格并不符合我们的要求，这时善用排序功能，就行了。<br><img src="https://file.ourfor.top/source/ourfor/%E5%88%9D%E9%9F%B3%E6%9C%AA%E6%9D%A5.jpg">      </p>]]></content>
      
      
      <categories>
          
          <category> APP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> office </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>读《红楼梦》有感</title>
      <link href="/2017/08/17/%E8%AF%BB%E3%80%8A%E7%BA%A2%E6%A5%BC%E6%A2%A6%E3%80%8B%E6%9C%89%E6%84%9F/"/>
      <url>/2017/08/17/%E8%AF%BB%E3%80%8A%E7%BA%A2%E6%A5%BC%E6%A2%A6%E3%80%8B%E6%9C%89%E6%84%9F/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>红楼梦是中国古典小说，作者曹雪芹和高鹗，以贾宝玉和林黛玉的爱情故事以及封建四大家族贾、史、王、薛的兴衰为主线，初读红楼梦，有些难度，先不说情节如何，单是复杂的人物关系以及宏大的场景就会让你眼花缭乱，因此先不说读懂红楼梦，要想耐心的读完这部小说，你就必须掌握两张地图，首先是人物关系图，其次是贾府地图。<br><a id="more"></a></p><p>作为中国古代四大名著之首，红楼梦具有很高的文学底蕴，是中国古代小艺术的巅峰。作者在小说中利用谐音来暗示人物的结局。即“真事隐去，假语村言”的特殊笔法。作者在刻画人物形象是着重描写人物的心理人物的衣着外貌，服饰的描写反映了当时的社会背景，使得这部小说不但具有很高的文学价值，还具有考古价值。小说本身与作者的人生经历有些相似，作者曹雪芹出生于官宦世家，早年过着不愁吃穿的生活，后来曹家因亏空获罪被满门抄斩，曹雪芹移居北京，靠朋友救济和卖字画度日，正是这段经历使他具备了写《红楼梦》的文化基础和思想觉悟。小说中的贾宝玉本是一块补天的石头，被一个僧人和一个道士带到人间，开始了充满曲折的人生经历，读完这部小说可能你对林黛玉的结局心生怜悯，作者正是想通过这种悲惨的结局来表达对封建势力的批判，结合作者的人生经历很容易想到作者这样写的目的。</p><p>接下来是小说的主要内容，有人说《红楼梦》就是一个男人和一群女人的故事，其实也不尽然，《红楼梦》开篇介绍的背景就暗含人物结局，这里就不浪费过多笔墨，这些自有研究红学的人解决，我认为小说大致可以分为三个部分，毕竟我对贾宝玉和这群地位不同的少女的平静的大观园生活不感冒，我比较喜欢有起伏的情节，到了最后四大家族由盛转衰，物是人非，正如作者自我评价：“满纸荒唐言，一把辛酸泪！都云作者痴，谁解其中味”。其实就是写了一段爱情故事，一千个读者眼中有一千个哈姆雷特。开国领袖毛主席评价小说《红楼梦》：（中国过去）除了地大物博，人口众多，历史悠久，以及在文学上有部《红楼梦》等等以外，很多地方不如人家，骄傲不起来。《红楼梦》不仅要当做小说看，而且要当做历史看。他写的是很细致的、很精细的社会历史”，文学家鲁迅则表示：“《红楼梦》是中国许多人所知道，至少，是知道这名目的书。谁是作者和续者姑且勿论，单是命意，就因读者的眼光而有种种：经学家看见《易》，道学家看见淫，才子看见缠绵，革命家看见排满，流言家看见宫闱秘事”，《人间词话》作者王国维认为：“《红楼梦》，哲学的也，宇宙的也，文学的也。此《红楼梦》之所以大背于吾国人之精神，而其价值亦即存乎此”。大家们对《红楼梦》有极高评价。</p><p>当你厌倦了色彩纷繁的荧屏，想感受那一缕墨香陪伴，不妨捧起《红楼梦》细细品读。</p><iframe type="music" frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=439915614&auto=1&height=66"></iframe>  ]]></content>
      
      
      <categories>
          
          <category> 文学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读后感 </tag>
            
            <tag> 文学 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
